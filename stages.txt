[{"_id": "65d2d82cb0c78b45eb628d81", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/part-00000-af4c1599-ddc1-4e4e-b813-768a88b2251e-c000.csv", "in": ["65d2d858b0c78b45eb628da9"], "out": ["65d2d82cb0c78b45eb628d82"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Regrmodeeel_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "65d2d82cb0c78b45eb628d7d", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 407.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 406.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12831, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6127, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 917.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 548.0, "Date Completed_stringindexer": 507.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 61.0, "PV Module Model Number_stringindexer": 414.0, "Project Cost_stringindexer": 2000.0, "Incentive_stringindexer": 204.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1190.0, "index_stringindexer": 51876.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 61423.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 120.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 118.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12533, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 43.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1.0, "Date Completed_stringindexer": 450.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 70.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2217.0, "Incentive_stringindexer": 85.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 39.0, "index_stringindexer": 17390.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 74476.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 44.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 43.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14075, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 226.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 279.0, "Date Completed_stringindexer": 310.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 2885.0, "Incentive_stringindexer": 2608.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 265.0, "index_stringindexer": 37519.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 1471.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 280.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 279.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11023, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3052, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 239.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 366.0, "Date Completed_stringindexer": 203.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 5131.0, "Incentive_stringindexer": 6488.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 695.0, "index_stringindexer": 62779.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 35993.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 658.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 664.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 3, "Total PV Module Quantity": 42, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 16122, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 193.0, "Date Completed_stringindexer": 556.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 13831.0, "Incentive_stringindexer": 384.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 66609.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 2480.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12009, "Total Inverter Quantity": 2, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12994, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 140.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 863.0, "Date Completed_stringindexer": 109.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 7034.0, "Incentive_stringindexer": 10760.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 151.0, "index_stringindexer": 13302.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 56794.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 161.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 160.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11801, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10682, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 36.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 514.0, "Date Completed_stringindexer": 107.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 169.0, "Incentive_stringindexer": 1495.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 29.0, "index_stringindexer": 42768.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 83295.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 39.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 38.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11758, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9684, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 23.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 114.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 16.0, "Project Cost_stringindexer": 320.0, "Incentive_stringindexer": 4272.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 16.0, "index_stringindexer": 47882.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 66255.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 12.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 11.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10607, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8804, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 449.0, "Date Completed_stringindexer": 1193.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 7.0, "Primary Inverter Model Number_stringindexer": 81.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 28.0, "Project Cost_stringindexer": 102.0, "Incentive_stringindexer": 500.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 248.0, "index_stringindexer": 61729.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 5421.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 252.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 252.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 2, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9980, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1535.0, "Date Completed_stringindexer": 18.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 30.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 626.0, "Incentive_stringindexer": 529.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 28488.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 33135.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12020, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8733, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 553.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 165.0, "Date Completed_stringindexer": 27.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 7575.0, "Incentive_stringindexer": 839.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 680.0, "index_stringindexer": 26302.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 72206.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 55.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 55.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12054, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9156, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 122.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 298.0, "Date Completed_stringindexer": 56.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 26695.0, "Incentive_stringindexer": 741.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 132.0, "index_stringindexer": 47068.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 17160.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 143.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 144.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11801, "Total Inverter Quantity": 1, "Total PV Module Quantity": 48, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14368, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 36.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 200.0, "Date Completed_stringindexer": 460.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 522.0, "Incentive_stringindexer": 2038.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 29.0, "index_stringindexer": 12940.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 34873.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 39.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 38.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12176, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7325, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 910.0, "County_stringindexer": 24.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 332.0, "Date Completed_stringindexer": 437.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 27147.0, "Incentive_stringindexer": 81.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1173.0, "index_stringindexer": 40735.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 2614.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1047.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1057.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11040, "Total Inverter Quantity": 8, "Total PV Module Quantity": 610, "Total Nameplate kW DC": 183.0, "Expected KWh Annual Production": 214813, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 51.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 88.0, "Date Completed_stringindexer": 86.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 59.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 11712.0, "Incentive_stringindexer": 13468.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 46.0, "index_stringindexer": 63480.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 32794.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 49.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 48.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11530, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9766, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 384.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 9.0, "Date Completed_stringindexer": 244.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 162.0, "Incentive_stringindexer": 714.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 441.0, "index_stringindexer": 75121.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 61156.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 410.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 416.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6909, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 522.0, "Date Completed_stringindexer": 44.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 134.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 783.0, "Incentive_stringindexer": 58.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 18346.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 78076.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11554, "Total Inverter Quantity": 2, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 11973, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 22.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 135.0, "Date Completed_stringindexer": 234.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 176.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 1285.0, "Incentive_stringindexer": 103.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 15.0, "index_stringindexer": 35096.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 64730.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 17.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 16.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13323, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6327, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 318.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 272.0, "Date Completed_stringindexer": 1.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 33.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 108.0, "Project Cost_stringindexer": 1497.0, "Incentive_stringindexer": 3007.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 367.0, "index_stringindexer": 57989.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 82828.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 370.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 371.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11101, "Total Inverter Quantity": 7, "Total PV Module Quantity": 252, "Total Nameplate kW DC": 75.0, "Expected KWh Annual Production": 88742, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 330.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 377.0, "Date Completed_stringindexer": 838.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 103.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 7052.0, "Incentive_stringindexer": 2394.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1482.0, "index_stringindexer": 59833.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 24554.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 548.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 542.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11749, "Total Inverter Quantity": 1, "Total PV Module Quantity": 59, "Total Nameplate kW DC": 15.0, "Expected KWh Annual Production": 18007, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 81.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 180.0, "Date Completed_stringindexer": 95.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 17702.0, "Incentive_stringindexer": 2983.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 808.0, "index_stringindexer": 83225.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 65044.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 249.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 249.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14120, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12490, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 242.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 346.0, "Date Completed_stringindexer": 44.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 34.0, "Project Cost_stringindexer": 3008.0, "Incentive_stringindexer": 1750.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 278.0, "index_stringindexer": 63118.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 30758.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 273.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 272.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10522, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 5869, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 253.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 523.0, "Date Completed_stringindexer": 1295.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 7.0, "Primary Inverter Model Number_stringindexer": 259.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 28.0, "Project Cost_stringindexer": 238.0, "Incentive_stringindexer": 83.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 292.0, "index_stringindexer": 47911.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 15841.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 300.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 298.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3455, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 451.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 3775.0, "Incentive_stringindexer": 60.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 22530.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 68007.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12401, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5188, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 34.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 11.0, "Date Completed_stringindexer": 174.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 21551.0, "Incentive_stringindexer": 3899.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 30.0, "index_stringindexer": 34493.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 66119.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 35.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 35.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4990, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 647.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 420.0, "Incentive_stringindexer": 1137.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 57196.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 26618.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14058, "Total Inverter Quantity": 3, "Total PV Module Quantity": 64, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20660, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 841.0, "County_stringindexer": 48.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 276.0, "Date Completed_stringindexer": 229.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 57.0, "Project Cost_stringindexer": 8871.0, "Incentive_stringindexer": 1998.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1048.0, "index_stringindexer": 74255.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 16002.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 959.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 970.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11768, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7630, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 113.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 47.0, "Date Completed_stringindexer": 12.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 841.0, "Incentive_stringindexer": 4250.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 118.0, "index_stringindexer": 6762.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 34538.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 124.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 123.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11754, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4273, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 70.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 5.0, "Date Completed_stringindexer": 193.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1073.0, "Incentive_stringindexer": 2525.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 67.0, "index_stringindexer": 29283.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 9307.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 77.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 76.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14222, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 226.0, "Date Completed_stringindexer": 86.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 57.0, "Project Cost_stringindexer": 1961.0, "Incentive_stringindexer": 12.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 661.0, "index_stringindexer": 51836.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 57887.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 631.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 633.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14127, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6550, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 279.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 261.0, "Date Completed_stringindexer": 143.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 267.0, "Incentive_stringindexer": 3036.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 317.0, "index_stringindexer": 59685.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 56644.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 326.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 324.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14218, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5722, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 28.0, "Date Completed_stringindexer": 24.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 170.0, "Project Cost_stringindexer": 32179.0, "Incentive_stringindexer": 674.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1023.0, "index_stringindexer": 82125.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 64329.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 617.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 617.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11207, "Total Inverter Quantity": 6, "Total PV Module Quantity": 194, "Total Nameplate kW DC": 58.0, "Expected KWh Annual Production": 68317, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 128.0, "Date Completed_stringindexer": 412.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 103.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 36170.0, "Incentive_stringindexer": 15706.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 147.0, "index_stringindexer": 67786.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 52104.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 152.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 153.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 2, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10748, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 274.0, "Date Completed_stringindexer": 44.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 9261.0, "Incentive_stringindexer": 554.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 82871.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 51135.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4606, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 657.0, "Date Completed_stringindexer": 89.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 384.0, "Incentive_stringindexer": 18.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 31041.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 44873.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 2, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12667, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 438.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 30.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 6194.0, "Incentive_stringindexer": 4481.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0, "index_stringindexer": 11320.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 60457.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 2.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10301, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7935, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 296.0, "Date Completed_stringindexer": 761.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 24784.0, "Incentive_stringindexer": 723.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 54.0, "index_stringindexer": 71091.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 63193.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 64.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 63.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11716, "Total Inverter Quantity": 1, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8851, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 115.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 509.0, "Date Completed_stringindexer": 12.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1371.0, "Incentive_stringindexer": 154.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 122.0, "index_stringindexer": 56427.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38410.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 131.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 130.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11756, "Total Inverter Quantity": 2, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8070, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 15.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 590.0, "Date Completed_stringindexer": 297.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 223.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 16.0, "Project Cost_stringindexer": 10024.0, "Incentive_stringindexer": 3689.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 9.0, "index_stringindexer": 25682.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 54631.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 11.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 10.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7665, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 489.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 11.0, "Date Completed_stringindexer": 339.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 942.0, "Incentive_stringindexer": 3627.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 580.0, "index_stringindexer": 16234.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 33261.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 568.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 569.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11804, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5799, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 411.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1133.0, "Date Completed_stringindexer": 406.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 2350.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 486.0, "index_stringindexer": 19869.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 82017.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 488.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 482.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11704, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13734, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 12.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 26.0, "Date Completed_stringindexer": 31.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 22441.0, "Incentive_stringindexer": 185.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 6.0, "index_stringindexer": 28675.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 80079.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 6.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 5.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14850, "Total Inverter Quantity": 2, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9039, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 10.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 322.0, "Date Completed_stringindexer": 492.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 32.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 127.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 57.0, "Project Cost_stringindexer": 36461.0, "Incentive_stringindexer": 405.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 3.0, "index_stringindexer": 48909.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 19605.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 3.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 2.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12435, "Total Inverter Quantity": 2, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10482, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 929.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 169.0, "Date Completed_stringindexer": 1.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 431.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 177.0, "Primary PV Module Manufacturer_stringindexer": 55.0, "PV Module Model Number_stringindexer": 716.0, "Project Cost_stringindexer": 5993.0, "Incentive_stringindexer": 8429.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1187.0, "index_stringindexer": 73890.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 2367.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1077.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1060.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4990, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 387.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 4641.0, "Incentive_stringindexer": 3968.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 77301.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 26783.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5758, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 214.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 840.0, "Incentive_stringindexer": 255.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0, "index_stringindexer": 22724.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 24534.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 38.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 37.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14004, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9015, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 470.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 50.0, "Date Completed_stringindexer": 174.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 152.0, "Project Cost_stringindexer": 9608.0, "Incentive_stringindexer": 695.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 604.0, "index_stringindexer": 11900.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 51784.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 592.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 590.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12061, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6104, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 158.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 298.0, "Date Completed_stringindexer": 3.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 4646.0, "Incentive_stringindexer": 8.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 177.0, "index_stringindexer": 14886.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 18802.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 186.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 186.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11772, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10987, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 138.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 200.0, "Date Completed_stringindexer": 573.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 5392.0, "Incentive_stringindexer": 1348.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 155.0, "index_stringindexer": 72835.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 59776.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 18.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 17.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 2, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8445, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 111.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 52.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 6069.0, "Incentive_stringindexer": 911.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0, "index_stringindexer": 39914.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 78944.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 95.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 95.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11793, "Total Inverter Quantity": 1, "Total PV Module Quantity": 51, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15266, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 31.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 529.0, "Date Completed_stringindexer": 58.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 31692.0, "Incentive_stringindexer": 3320.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 22.0, "index_stringindexer": 79698.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 34366.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 29.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 28.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12138, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9766, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 473.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 170.0, "Date Completed_stringindexer": 179.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 5753.0, "Incentive_stringindexer": 168.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 563.0, "index_stringindexer": 15051.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 21634.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 452.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 445.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5494, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 192.0, "Date Completed_stringindexer": 130.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 19332.0, "Incentive_stringindexer": 339.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 24177.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 53517.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 2, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8828, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 297.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 55.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 9680.0, "Incentive_stringindexer": 866.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0, "index_stringindexer": 49585.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 63939.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 38.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 37.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10512, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 215.0, "County_stringindexer": 27.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 849.0, "Date Completed_stringindexer": 103.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 3770.0, "Incentive_stringindexer": 2967.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 244.0, "index_stringindexer": 74728.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 76801.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 251.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 250.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10960, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 5869, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 892.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 30.0, "Date Completed_stringindexer": 936.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 215.0, "Project Cost_stringindexer": 21794.0, "Incentive_stringindexer": 3854.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1142.0, "index_stringindexer": 84198.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38307.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 294.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 294.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14057, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 448.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 44.0, "Date Completed_stringindexer": 138.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 1430.0, "Incentive_stringindexer": 161.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 526.0, "index_stringindexer": 29859.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 21086.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 518.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 524.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13068, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7337, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 211.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 793.0, "Date Completed_stringindexer": 269.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 2171.0, "Incentive_stringindexer": 322.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 243.0, "index_stringindexer": 2264.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 27463.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 237.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 237.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11756, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 15.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 26.0, "Date Completed_stringindexer": 215.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 2.0, "Incentive_stringindexer": 39.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 9.0, "index_stringindexer": 69779.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 84146.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 11.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 10.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14425, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8381, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 751.0, "County_stringindexer": 31.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 37.0, "Date Completed_stringindexer": 442.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 19.0, "PV Module Model Number_stringindexer": 264.0, "Project Cost_stringindexer": 4364.0, "Incentive_stringindexer": 2742.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 980.0, "index_stringindexer": 68334.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 26670.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 855.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 853.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12029, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11598, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 477.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 31.0, "Date Completed_stringindexer": 455.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 3961.0, "Incentive_stringindexer": 1186.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 565.0, "index_stringindexer": 50362.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 80915.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 561.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 556.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14741, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13100, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 914.0, "County_stringindexer": 52.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 261.0, "Date Completed_stringindexer": 731.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 938.0, "Incentive_stringindexer": 5713.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1168.0, "index_stringindexer": 72906.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 57792.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1068.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1091.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12508, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4273, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 82.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 395.0, "Date Completed_stringindexer": 14.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 5462.0, "Incentive_stringindexer": 951.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 83.0, "index_stringindexer": 15437.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 18261.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 90.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 89.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11763, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6885, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 39.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 180.0, "Date Completed_stringindexer": 999.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 31863.0, "Incentive_stringindexer": 305.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 34.0, "index_stringindexer": 32795.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 11047.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 45.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 44.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10510, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1404.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 320.0, "Date Completed_stringindexer": 340.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 8594.0, "Incentive_stringindexer": 139.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1821.0, "index_stringindexer": 45125.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 54333.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 284.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 282.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11951, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10682, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 166.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 11.0, "Date Completed_stringindexer": 8.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 5921.0, "Incentive_stringindexer": 951.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 184.0, "index_stringindexer": 67822.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 31061.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 195.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 192.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11934, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9684, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 171.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 593.0, "Date Completed_stringindexer": 200.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 16.0, "Project Cost_stringindexer": 1640.0, "Incentive_stringindexer": 536.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 189.0, "index_stringindexer": 83997.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 6500.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 190.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 188.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9596, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 566.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 127.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 912.0, "Incentive_stringindexer": 11619.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 58735.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38412.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11778, "Total Inverter Quantity": 1, "Total PV Module Quantity": 39, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11674, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 163.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 707.0, "Date Completed_stringindexer": 116.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 3228.0, "Incentive_stringindexer": 4738.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 182.0, "index_stringindexer": 38877.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 47151.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 184.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 183.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 2, "Total PV Module Quantity": 54, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20728, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 299.0, "Date Completed_stringindexer": 471.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 109.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 17605.0, "Incentive_stringindexer": 9188.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0, "index_stringindexer": 18841.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 53113.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 38.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 37.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14111, "Total Inverter Quantity": 2, "Total PV Module Quantity": 48, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 19439, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 734.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 51.0, "Date Completed_stringindexer": 477.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 159.0, "Project Cost_stringindexer": 70.0, "Incentive_stringindexer": 1586.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 918.0, "index_stringindexer": 25789.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 16754.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 865.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 880.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11729, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5388, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 27.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 295.0, "Date Completed_stringindexer": 530.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 805.0, "Incentive_stringindexer": 507.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 19.0, "index_stringindexer": 58870.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 81601.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 23.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 22.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13818, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 91.0, "Date Completed_stringindexer": 78.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 13222.0, "Incentive_stringindexer": 4172.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 76111.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 49972.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12157, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9766, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 251.0, "County_stringindexer": 34.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 227.0, "Date Completed_stringindexer": 108.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 24.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 85.0, "Incentive_stringindexer": 467.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 286.0, "index_stringindexer": 8404.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 36059.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 298.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 295.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 3, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13818, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 269.0, "Date Completed_stringindexer": 386.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 134.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 210.0, "Incentive_stringindexer": 7255.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 41338.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 25758.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11561, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 2993, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 42.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 392.0, "Date Completed_stringindexer": 8.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 9855.0, "Incentive_stringindexer": 884.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 38.0, "index_stringindexer": 64096.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 75936.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 21.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 20.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11767, "Total Inverter Quantity": 1, "Total PV Module Quantity": 37, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11292, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 101.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 375.0, "Date Completed_stringindexer": 7.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 10341.0, "Incentive_stringindexer": 1619.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 105.0, "index_stringindexer": 81151.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 2328.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 109.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 108.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11385, "Total Inverter Quantity": 3, "Total PV Module Quantity": 82, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28876, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 430.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 128.0, "Date Completed_stringindexer": 412.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 103.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 15677.0, "Incentive_stringindexer": 5380.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 494.0, "index_stringindexer": 67815.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 13531.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 327.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 327.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11762, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7935, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 102.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 168.0, "Date Completed_stringindexer": 46.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 865.0, "Incentive_stringindexer": 84.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 108.0, "index_stringindexer": 36379.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 69933.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 115.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 112.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11749, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8240, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 412.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 202.0, "Date Completed_stringindexer": 71.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 746.0, "Incentive_stringindexer": 1055.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 484.0, "index_stringindexer": 26964.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 23930.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 249.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 249.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11704, "Total Inverter Quantity": 2, "Total PV Module Quantity": 71, "Total Nameplate kW DC": 18.0, "Expected KWh Annual Production": 21669, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 12.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 354.0, "Date Completed_stringindexer": 30.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 8392.0, "Incentive_stringindexer": 65.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 6.0, "index_stringindexer": 59261.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 73555.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 6.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 5.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11706, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11375, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 16.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 593.0, "Date Completed_stringindexer": 234.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 208.0, "Incentive_stringindexer": 938.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 10.0, "index_stringindexer": 52702.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 1850.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 10.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 9.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14886, "Total Inverter Quantity": 2, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11504, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 130.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1106.0, "Date Completed_stringindexer": 409.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 45.0, "PV Module Model Number_stringindexer": 149.0, "Project Cost_stringindexer": 5578.0, "Incentive_stringindexer": 2912.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 144.0, "index_stringindexer": 14058.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 67354.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 150.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 146.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14476, "Total Inverter Quantity": 2, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13687, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 599.0, "County_stringindexer": 51.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 95.0, "Project Cost_stringindexer": 2810.0, "Incentive_stringindexer": 15206.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 742.0, "index_stringindexer": 33976.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 5446.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 695.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 703.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6909, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 498.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 3180.0, "Incentive_stringindexer": 743.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 53724.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 69097.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 3, "Total PV Module Quantity": 56, "Total Nameplate kW DC": 18.0, "Expected KWh Annual Production": 21495, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 258.0, "Date Completed_stringindexer": 529.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 40546.0, "Incentive_stringindexer": 4702.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 68413.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 11197.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12302, "Total Inverter Quantity": 1, "Total PV Module Quantity": 48, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14650, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 515.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 250.0, "Date Completed_stringindexer": 101.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 1092.0, "Incentive_stringindexer": 162.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 612.0, "index_stringindexer": 19632.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 40713.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 53.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 52.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11773, "Total Inverter Quantity": 31, "Total PV Module Quantity": 31, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9279, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 114.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 144.0, "Date Completed_stringindexer": 424.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 21931.0, "Incentive_stringindexer": 1665.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 969.0, "index_stringindexer": 39599.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 31289.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 889.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 895.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11701, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5494, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 73.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 145.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 588.0, "Incentive_stringindexer": 104.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 70.0, "index_stringindexer": 27263.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 52663.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 78.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 78.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11575, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6104, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 232.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 64.0, "Date Completed_stringindexer": 142.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 190.0, "Incentive_stringindexer": 2591.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 263.0, "index_stringindexer": 20493.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 20855.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 275.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 273.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 3, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 14.0, "Expected KWh Annual Production": 17273, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 135.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 30236.0, "Incentive_stringindexer": 15726.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 3226.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 37503.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14894, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10565, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 975.0, "County_stringindexer": 49.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 978.0, "Date Completed_stringindexer": 583.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 120.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 858.0, "Incentive_stringindexer": 20.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1267.0, "index_stringindexer": 60074.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 57220.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1103.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1133.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4222, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 299.0, "Date Completed_stringindexer": 367.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 8496.0, "Incentive_stringindexer": 623.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 85276.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 13571.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14040, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 801.0, "County_stringindexer": 48.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 48.0, "Date Completed_stringindexer": 199.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 202.0, "Project Cost_stringindexer": 3770.0, "Incentive_stringindexer": 56.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 987.0, "index_stringindexer": 20159.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 45016.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 942.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 908.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12729, "Total Inverter Quantity": 1, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10776, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 776.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 118.0, "Date Completed_stringindexer": 174.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 1908.0, "Incentive_stringindexer": 3872.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1011.0, "index_stringindexer": 39961.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 61247.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 836.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 849.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13323, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7190, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 318.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 703.0, "Date Completed_stringindexer": 925.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 45.0, "PV Module Model Number_stringindexer": 149.0, "Project Cost_stringindexer": 2575.0, "Incentive_stringindexer": 692.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 367.0, "index_stringindexer": 44292.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 71689.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 370.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 371.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 3, "Total PV Module Quantity": 69, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 21059, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1000.0, "Date Completed_stringindexer": 355.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 4170.0, "Incentive_stringindexer": 4334.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0, "index_stringindexer": 69532.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 25880.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 38.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 37.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14171, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5094, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 889.0, "County_stringindexer": 52.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 503.0, "Date Completed_stringindexer": 44.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 36489.0, "Incentive_stringindexer": 1961.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1213.0, "index_stringindexer": 15137.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 21684.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1081.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1087.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14845, "Total Inverter Quantity": 4, "Total PV Module Quantity": 100, "Total Nameplate kW DC": 25.0, "Expected KWh Annual Production": 29346, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 351.0, "County_stringindexer": 49.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1018.0, "Date Completed_stringindexer": 189.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 9893.0, "Incentive_stringindexer": 449.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 402.0, "index_stringindexer": 34859.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 83228.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 406.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 403.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6142, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 653.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 36656.0, "Incentive_stringindexer": 51.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0, "index_stringindexer": 29083.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 59929.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 95.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 95.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11364, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5758, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 386.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 653.0, "Date Completed_stringindexer": 64.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2083.0, "Incentive_stringindexer": 639.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 442.0, "index_stringindexer": 53288.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 36089.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 289.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 289.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12046, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10987, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 789.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 84.0, "Date Completed_stringindexer": 440.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 129.0, "Incentive_stringindexer": 2658.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 985.0, "index_stringindexer": 68257.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 35459.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 918.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 910.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11968, "Total Inverter Quantity": 1, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13429, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 83.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1021.0, "Date Completed_stringindexer": 187.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 488.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 7757.0, "Incentive_stringindexer": 217.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 86.0, "index_stringindexer": 13565.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 35201.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 89.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 88.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12076, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6122, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 857.0, "County_stringindexer": 34.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 213.0, "Date Completed_stringindexer": 454.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 61.0, "PV Module Model Number_stringindexer": 414.0, "Project Cost_stringindexer": 402.0, "Incentive_stringindexer": 927.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1102.0, "index_stringindexer": 33802.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 20238.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 997.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 991.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10932, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1245.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 80.0, "Date Completed_stringindexer": 15.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 899.0, "Incentive_stringindexer": 175.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1615.0, "index_stringindexer": 59121.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 77442.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1344.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1410.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14214, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8452, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 9.0, "Date Completed_stringindexer": 88.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 202.0, "Project Cost_stringindexer": 248.0, "Incentive_stringindexer": 17.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 592.0, "index_stringindexer": 84296.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 81515.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 586.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 595.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12283, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 453.0, "Date Completed_stringindexer": 89.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 121.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 3793.0, "Incentive_stringindexer": 657.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 8700.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 64504.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 3, "Total PV Module Quantity": 37, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14202, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 199.0, "Date Completed_stringindexer": 78.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 30.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 36105.0, "Incentive_stringindexer": 10092.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 17632.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 68193.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14141, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6386, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 692.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 398.0, "Date Completed_stringindexer": 390.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 19.0, "PV Module Model Number_stringindexer": 264.0, "Project Cost_stringindexer": 7624.0, "Incentive_stringindexer": 457.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 874.0, "index_stringindexer": 85233.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 49286.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 813.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 821.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11735, "Total Inverter Quantity": 1, "Total PV Module Quantity": 52, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15870, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 44.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 917.0, "Date Completed_stringindexer": 287.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 23.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 17850.0, "Incentive_stringindexer": 1204.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 41.0, "index_stringindexer": 57694.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 62337.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 50.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 49.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12120, "Total Inverter Quantity": 26, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 705.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 134.0, "Date Completed_stringindexer": 551.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 477.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 34.0, "Project Cost_stringindexer": 5771.0, "Incentive_stringindexer": 406.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 883.0, "index_stringindexer": 37707.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 66880.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 820.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 809.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12801, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 60.0, "County_stringindexer": 25.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 863.0, "Date Completed_stringindexer": 174.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 23032.0, "Incentive_stringindexer": 222.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 750.0, "index_stringindexer": 57670.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 11594.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 325.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 321.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11801, "Total Inverter Quantity": 1, "Total PV Module Quantity": 43, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13881, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 36.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 180.0, "Date Completed_stringindexer": 530.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 16.0, "Project Cost_stringindexer": 15240.0, "Incentive_stringindexer": 2239.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 29.0, "index_stringindexer": 82836.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 60968.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 39.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 38.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 2, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8445, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 372.0, "Date Completed_stringindexer": 529.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 30.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1661.0, "Incentive_stringindexer": 709.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0, "index_stringindexer": 14395.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 17514.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 2.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13827, "Total Inverter Quantity": 1, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9490, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 497.0, "County_stringindexer": 46.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 702.0, "Date Completed_stringindexer": 184.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 38.0, "Primary PV Module Manufacturer_stringindexer": 45.0, "PV Module Model Number_stringindexer": 149.0, "Project Cost_stringindexer": 8736.0, "Incentive_stringindexer": 4.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 608.0, "index_stringindexer": 32589.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 65094.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 587.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 580.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14878, "Total Inverter Quantity": 2, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12032, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1057.0, "County_stringindexer": 55.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 975.0, "Date Completed_stringindexer": 15.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 11.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 7660.0, "Incentive_stringindexer": 6952.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1408.0, "index_stringindexer": 52466.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 30637.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1151.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1165.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11783, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 78.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 246.0, "Date Completed_stringindexer": 8.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1799.0, "Incentive_stringindexer": 184.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 78.0, "index_stringindexer": 67163.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 69610.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 85.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 84.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14051, "Total Inverter Quantity": 2, "Total PV Module Quantity": 59, "Total Nameplate kW DC": 20.0, "Expected KWh Annual Production": 23894, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 218.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 78.0, "Date Completed_stringindexer": 9.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 159.0, "Project Cost_stringindexer": 15337.0, "Incentive_stringindexer": 14811.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 246.0, "index_stringindexer": 19605.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 56630.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 231.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 229.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11741, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13734, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 28.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 99.0, "Date Completed_stringindexer": 43.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 643.0, "Incentive_stringindexer": 1698.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 20.0, "index_stringindexer": 5389.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 57.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 24.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 23.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 451.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 121.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1946.0, "Incentive_stringindexer": 181.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 70497.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 45568.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11549, "Total Inverter Quantity": 1, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8681, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 278.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 200.0, "Date Completed_stringindexer": 202.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 6103.0, "Incentive_stringindexer": 271.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1052.0, "index_stringindexer": 74652.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 31362.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 956.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 974.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14127, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9203, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 279.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 296.0, "Date Completed_stringindexer": 326.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 24.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 34.0, "Project Cost_stringindexer": 6407.0, "Incentive_stringindexer": 307.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 317.0, "index_stringindexer": 38417.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 5640.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 326.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 324.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10552, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7149, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 144.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 392.0, "Date Completed_stringindexer": 364.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 61.0, "PV Module Model Number_stringindexer": 1078.0, "Project Cost_stringindexer": 700.0, "Incentive_stringindexer": 990.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 478.0, "index_stringindexer": 55768.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 8917.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 457.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 457.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 2, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 487.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 134.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 706.0, "Incentive_stringindexer": 3413.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 46449.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 14364.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13051, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 257.0, "Date Completed_stringindexer": 34.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 8860.0, "Incentive_stringindexer": 13678.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 14936.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 82935.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14218, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9015, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 696.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 168.0, "Date Completed_stringindexer": 88.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 152.0, "Project Cost_stringindexer": 6757.0, "Incentive_stringindexer": 151.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 894.0, "index_stringindexer": 31934.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 73448.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 617.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 617.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14085, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4191, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 444.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 657.0, "Date Completed_stringindexer": 702.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 2.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 132.0, "Project Cost_stringindexer": 3614.0, "Incentive_stringindexer": 183.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 530.0, "index_stringindexer": 50537.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 83683.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 510.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 501.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12156, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 11832, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 533.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 151.0, "Date Completed_stringindexer": 142.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 156.0, "Project Cost_stringindexer": 43.0, "Incentive_stringindexer": 108.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 644.0, "index_stringindexer": 73032.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 72370.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 608.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 613.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 2, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9980, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 431.0, "Date Completed_stringindexer": 625.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 127.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2942.0, "Incentive_stringindexer": 685.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 20153.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 62126.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11735, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5388, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 44.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 618.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 33260.0, "Incentive_stringindexer": 152.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 41.0, "index_stringindexer": 6115.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 8839.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 50.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 49.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 42, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 16122, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 469.0, "Date Completed_stringindexer": 549.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 70.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1715.0, "Incentive_stringindexer": 384.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 38395.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 1045.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11566, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 79.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 52.0, "Date Completed_stringindexer": 207.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 169.0, "Incentive_stringindexer": 39.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 81.0, "index_stringindexer": 66860.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 44456.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 67.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 66.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10465, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6909, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 438.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 783.0, "Incentive_stringindexer": 4789.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 158.0, "index_stringindexer": 39201.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 2303.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 169.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 168.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13045, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6039, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 193.0, "County_stringindexer": 44.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 857.0, "Date Completed_stringindexer": 969.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 108.0, "Project Cost_stringindexer": 2616.0, "Incentive_stringindexer": 3266.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 217.0, "index_stringindexer": 24440.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 39020.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 215.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 215.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7513, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 199.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 97.0, "Date Completed_stringindexer": 199.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 152.0, "Project Cost_stringindexer": 841.0, "Incentive_stringindexer": 319.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 228.0, "index_stringindexer": 52495.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38892.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 128.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 127.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12303, "Total Inverter Quantity": 1, "Total PV Module Quantity": 50, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15260, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 44.0, "Date Completed_stringindexer": 26.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 11965.0, "Incentive_stringindexer": 187.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 74.0, "index_stringindexer": 20672.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 79721.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 73.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 70.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 2, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14586, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 566.0, "Date Completed_stringindexer": 427.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 109.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 24676.0, "Incentive_stringindexer": 4373.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 24655.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 37672.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11756, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5388, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 15.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 529.0, "Date Completed_stringindexer": 530.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 26.0, "Project Cost_stringindexer": 29649.0, "Incentive_stringindexer": 507.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 9.0, "index_stringindexer": 50038.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 49024.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 11.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 10.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11717, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4789, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 20.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 942.0, "Date Completed_stringindexer": 381.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 376.0, "Incentive_stringindexer": 1156.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 12.0, "index_stringindexer": 69788.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 36911.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 14.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 13.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11412, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8061, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 647.0, "Date Completed_stringindexer": 34.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 7.0, "Primary Inverter Model Number_stringindexer": 162.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 29367.0, "Incentive_stringindexer": 68.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 631.0, "index_stringindexer": 15143.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 46475.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 91.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 90.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14454, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7360, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 540.0, "County_stringindexer": 45.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 148.0, "Date Completed_stringindexer": 112.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 4614.0, "Incentive_stringindexer": 1743.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 666.0, "index_stringindexer": 63104.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 63730.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 630.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 624.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12180, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5799, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 17.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 10.0, "Date Completed_stringindexer": 202.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 8641.0, "Incentive_stringindexer": 4862.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 18.0, "index_stringindexer": 34992.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 79909.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 20.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 19.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 489.0, "Date Completed_stringindexer": 619.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 293.0, "Incentive_stringindexer": 1546.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 66169.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 25316.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11758, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 23.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 221.0, "Date Completed_stringindexer": 437.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 652.0, "Incentive_stringindexer": 766.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 16.0, "index_stringindexer": 1612.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 24587.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 12.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 11.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11552, "Total Inverter Quantity": 1, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13429, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 119.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 50.0, "Date Completed_stringindexer": 202.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1554.0, "Incentive_stringindexer": 1327.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 126.0, "index_stringindexer": 27973.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 79071.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 139.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 138.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13104, "Total Inverter Quantity": 2, "Total PV Module Quantity": 63, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 21076, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 306.0, "County_stringindexer": 19.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 663.0, "Date Completed_stringindexer": 80.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 24.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 28990.0, "Incentive_stringindexer": 5894.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 350.0, "index_stringindexer": 53230.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 18603.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 356.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 355.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11702, "Total Inverter Quantity": 2, "Total PV Module Quantity": 51, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 16164, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 71.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 349.0, "Date Completed_stringindexer": 437.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 39397.0, "Incentive_stringindexer": 351.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 71.0, "index_stringindexer": 19883.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 24796.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 76.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 75.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11767, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10617, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 101.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 394.0, "Date Completed_stringindexer": 258.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 198.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 183.0, "Project Cost_stringindexer": 35169.0, "Incentive_stringindexer": 2776.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 105.0, "index_stringindexer": 29179.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 46314.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 109.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 108.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3328, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 51.0, "Date Completed_stringindexer": 365.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 7.0, "Project Cost_stringindexer": 7436.0, "Incentive_stringindexer": 1066.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 54521.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 83017.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 111.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 134.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 11888.0, "Incentive_stringindexer": 290.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 69156.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 77978.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13135, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8340, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 447.0, "County_stringindexer": 33.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 979.0, "Date Completed_stringindexer": 898.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 30.0, "Primary PV Module Manufacturer_stringindexer": 45.0, "PV Module Model Number_stringindexer": 149.0, "Project Cost_stringindexer": 7858.0, "Incentive_stringindexer": 4.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 528.0, "index_stringindexer": 48304.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 23160.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 524.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 521.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11776, "Total Inverter Quantity": 23, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6885, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 64.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 274.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 15205.0, "Incentive_stringindexer": 328.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 58.0, "index_stringindexer": 68278.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 26543.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 68.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 67.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12283, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 308.0, "Date Completed_stringindexer": 209.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1841.0, "Incentive_stringindexer": 13810.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 7717.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 31282.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11801, "Total Inverter Quantity": 1, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10377, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 36.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 12.0, "Date Completed_stringindexer": 204.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 272.0, "Incentive_stringindexer": 182.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 29.0, "index_stringindexer": 65048.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 55592.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 39.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 38.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14221, "Total Inverter Quantity": 2, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 14.0, "Expected KWh Annual Production": 16786, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 199.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 20.0, "Date Completed_stringindexer": 24.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 170.0, "Project Cost_stringindexer": 29962.0, "Incentive_stringindexer": 512.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 228.0, "index_stringindexer": 43035.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 39558.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 128.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 127.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14850, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4989, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 10.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 452.0, "Date Completed_stringindexer": 386.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 28.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 4093.0, "Incentive_stringindexer": 3073.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 3.0, "index_stringindexer": 20447.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 64545.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 3.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 2.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11735, "Total Inverter Quantity": 1, "Total PV Module Quantity": 47, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14344, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 44.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 163.0, "Date Completed_stringindexer": 442.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 2069.0, "Incentive_stringindexer": 1254.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 41.0, "index_stringindexer": 77460.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 50299.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 50.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 49.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12414, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5188, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 219.0, "County_stringindexer": 24.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 59.0, "Date Completed_stringindexer": 57.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 199.0, "Incentive_stringindexer": 182.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 247.0, "index_stringindexer": 28329.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 41757.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 254.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 251.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6525, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 942.0, "Date Completed_stringindexer": 78.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2053.0, "Incentive_stringindexer": 1318.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 16695.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 39119.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14062, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10987, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 623.0, "County_stringindexer": 36.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 75.0, "Date Completed_stringindexer": 356.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 4.0, "PV Module Model Number_stringindexer": 202.0, "Project Cost_stringindexer": 2414.0, "Incentive_stringindexer": 75.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 779.0, "index_stringindexer": 78891.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 18406.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 738.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 730.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11420, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3968, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 146.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 320.0, "Date Completed_stringindexer": 351.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 10695.0, "Incentive_stringindexer": 1636.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 168.0, "index_stringindexer": 42082.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 29629.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 61.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 59.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11782, "Total Inverter Quantity": 36, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10776, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 93.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1043.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 39475.0, "Incentive_stringindexer": 4211.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 97.0, "index_stringindexer": 48756.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 73102.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 101.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 100.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 453.0, "Date Completed_stringindexer": 18.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 121.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1076.0, "Incentive_stringindexer": 181.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 66413.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 78592.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4789, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 192.0, "Date Completed_stringindexer": 126.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 901.0, "Incentive_stringindexer": 377.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 14430.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 81308.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11756, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5388, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 15.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 529.0, "Date Completed_stringindexer": 572.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 23896.0, "Incentive_stringindexer": 507.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 9.0, "index_stringindexer": 26192.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 81673.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 11.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 10.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11743, "Total Inverter Quantity": 46, "Total PV Module Quantity": 46, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13769, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 54.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 135.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 6.0, "Incentive_stringindexer": 15713.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 52.0, "index_stringindexer": 43742.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 8467.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 54.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 53.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14216, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4015, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 517.0, "Date Completed_stringindexer": 88.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 15455.0, "Incentive_stringindexer": 193.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 529.0, "index_stringindexer": 17677.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 28728.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 517.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 515.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8240, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 62.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 18.0, "Date Completed_stringindexer": 225.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 33323.0, "Incentive_stringindexer": 728.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 79.0, "index_stringindexer": 83533.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 80052.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 87.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 86.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10466, "Total Inverter Quantity": 5, "Total PV Module Quantity": 174, "Total Nameplate kW DC": 52.0, "Expected KWh Annual Production": 61274, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 128.0, "Date Completed_stringindexer": 387.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 103.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 32698.0, "Incentive_stringindexer": 5187.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 237.0, "index_stringindexer": 31806.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 14649.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 246.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 245.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10310, "Total Inverter Quantity": 3, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13051, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 249.0, "Date Completed_stringindexer": 646.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1349.0, "Incentive_stringindexer": 15643.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 111.0, "index_stringindexer": 17067.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 78015.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 122.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 121.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11952, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9766, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 200.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 10.0, "Date Completed_stringindexer": 175.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 2667.0, "Incentive_stringindexer": 1606.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 227.0, "index_stringindexer": 4131.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 61859.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 226.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 226.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10954, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7630, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 111.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 703.0, "Date Completed_stringindexer": 464.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 65.0, "Primary PV Module Manufacturer_stringindexer": 23.0, "PV Module Model Number_stringindexer": 1527.0, "Project Cost_stringindexer": 992.0, "Incentive_stringindexer": 3571.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 119.0, "index_stringindexer": 37940.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 48605.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 112.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 111.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11940, "Total Inverter Quantity": 1, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 262.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 200.0, "Date Completed_stringindexer": 219.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 56.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 343.0, "Incentive_stringindexer": 131.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 296.0, "index_stringindexer": 49511.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 35601.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 308.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 303.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 760.0, "Date Completed_stringindexer": 382.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 55.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 4612.0, "Incentive_stringindexer": 85.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 77237.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 50274.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 2, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13051, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 111.0, "Date Completed_stringindexer": 78.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 26726.0, "Incentive_stringindexer": 11021.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 20115.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 1024.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15738, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 263.0, "Date Completed_stringindexer": 492.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 121.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 27563.0, "Incentive_stringindexer": 5396.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 31970.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 27840.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14085, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3345, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 444.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 59.0, "Date Completed_stringindexer": 228.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 2.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 10593.0, "Incentive_stringindexer": 136.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 530.0, "index_stringindexer": 34148.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 83291.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 510.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 501.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13116, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6104, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1206.0, "County_stringindexer": 19.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 46.0, "Date Completed_stringindexer": 702.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 11.0, "PV Module Model Number_stringindexer": 75.0, "Project Cost_stringindexer": 1224.0, "Incentive_stringindexer": 699.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1499.0, "index_stringindexer": 19105.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 71487.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1252.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1280.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10177, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 468.0, "Date Completed_stringindexer": 31.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 109.0, "Incentive_stringindexer": 450.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 79257.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 9669.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14305, "Total Inverter Quantity": 6, "Total PV Module Quantity": 264, "Total Nameplate kW DC": 69.0, "Expected KWh Annual Production": 82122, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 299.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 282.0, "Date Completed_stringindexer": 998.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 7.0, "Primary Inverter Model Number_stringindexer": 173.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 95.0, "Project Cost_stringindexer": 35328.0, "Incentive_stringindexer": 8045.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 913.0, "index_stringindexer": 27367.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 35868.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 848.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 837.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12074, "Total Inverter Quantity": 2, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9508, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 331.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 973.0, "Date Completed_stringindexer": 1074.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 17.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 101.0, "Project Cost_stringindexer": 9686.0, "Incentive_stringindexer": 396.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 378.0, "index_stringindexer": 75137.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 7150.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 380.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 377.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11581, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6104, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 24.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 194.0, "Date Completed_stringindexer": 40.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 3666.0, "Incentive_stringindexer": 337.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 135.0, "index_stringindexer": 4945.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 44438.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 141.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 139.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11554, "Total Inverter Quantity": 36, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10776, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 22.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 768.0, "Date Completed_stringindexer": 297.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 134.0, "Incentive_stringindexer": 3563.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 15.0, "index_stringindexer": 35900.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 9470.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 17.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 16.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11758, "Total Inverter Quantity": 1, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10177, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 23.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 416.0, "Date Completed_stringindexer": 381.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 33431.0, "Incentive_stringindexer": 1100.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 16.0, "index_stringindexer": 55278.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 7175.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 12.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 11.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11961, "Total Inverter Quantity": 2, "Total PV Module Quantity": 42, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13311, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 137.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 514.0, "Date Completed_stringindexer": 301.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 2970.0, "Incentive_stringindexer": 2231.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 153.0, "index_stringindexer": 80496.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 72043.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 163.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 162.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11572, "Total Inverter Quantity": 22, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6585, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 52.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 391.0, "Date Completed_stringindexer": 88.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 10663.0, "Incentive_stringindexer": 259.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 47.0, "index_stringindexer": 20718.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 43814.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 58.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 58.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 2, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10364, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 182.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2244.0, "Incentive_stringindexer": 358.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0, "index_stringindexer": 30150.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38657.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 2.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12972, "Total Inverter Quantity": 2, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8804, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 576.0, "County_stringindexer": 43.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 978.0, "Date Completed_stringindexer": 697.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 17.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 787.0, "Project Cost_stringindexer": 503.0, "Incentive_stringindexer": 43.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 707.0, "index_stringindexer": 38728.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 31465.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 673.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 671.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6142, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 263.0, "Date Completed_stringindexer": 646.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 3410.0, "Incentive_stringindexer": 70.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 21623.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 21870.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14025, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 852.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 593.0, "Date Completed_stringindexer": 308.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 2495.0, "Incentive_stringindexer": 491.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1101.0, "index_stringindexer": 78640.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 17178.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 945.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 959.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10748, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 258.0, "Date Completed_stringindexer": 261.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1486.0, "Incentive_stringindexer": 99.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 58816.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 43960.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13068, "Total Inverter Quantity": 2, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12654, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 211.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 142.0, "Date Completed_stringindexer": 110.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 11.0, "Primary PV Module Manufacturer_stringindexer": 11.0, "PV Module Model Number_stringindexer": 82.0, "Project Cost_stringindexer": 4303.0, "Incentive_stringindexer": 1817.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 243.0, "index_stringindexer": 78625.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 44567.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 237.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 237.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 510.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 293.0, "Incentive_stringindexer": 175.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 19004.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 2770.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10301, "Total Inverter Quantity": 2, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4108, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 181.0, "Date Completed_stringindexer": 1322.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 14.0, "Primary Inverter Model Number_stringindexer": 369.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 28.0, "Project Cost_stringindexer": 1911.0, "Incentive_stringindexer": 461.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 54.0, "index_stringindexer": 33749.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 48294.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 64.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 63.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 2, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 263.0, "Date Completed_stringindexer": 471.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1076.0, "Incentive_stringindexer": 13434.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 53306.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 20235.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14782, "Total Inverter Quantity": 2, "Total PV Module Quantity": 48, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15776, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1094.0, "County_stringindexer": 36.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 217.0, "Date Completed_stringindexer": 149.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 38.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 34.0, "Project Cost_stringindexer": 373.0, "Incentive_stringindexer": 432.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1405.0, "index_stringindexer": 73143.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 66379.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1231.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1233.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 199.0, "Date Completed_stringindexer": 386.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 121.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 4889.0, "Incentive_stringindexer": 181.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0, "index_stringindexer": 3065.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 44842.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 95.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 95.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11754, "Total Inverter Quantity": 2, "Total PV Module Quantity": 66, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 19756, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 70.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 922.0, "Date Completed_stringindexer": 424.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 1731.0, "Incentive_stringindexer": 4910.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 67.0, "index_stringindexer": 38723.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 30984.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 77.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 76.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13459, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9766, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 687.0, "County_stringindexer": 34.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 21.0, "Date Completed_stringindexer": 164.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 3666.0, "Incentive_stringindexer": 119.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 882.0, "index_stringindexer": 27736.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 73357.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 800.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 823.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11742, "Total Inverter Quantity": 1, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12208, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 108.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 18.0, "Date Completed_stringindexer": 3.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 444.0, "Incentive_stringindexer": 1486.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 123.0, "index_stringindexer": 5278.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 43985.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 130.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 129.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 2, "Total PV Module Quantity": 66, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20143, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 614.0, "Date Completed_stringindexer": 334.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 39973.0, "Incentive_stringindexer": 15738.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0, "index_stringindexer": 34526.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 20341.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 36.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 34.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11751, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3357, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 143.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 26.0, "Date Completed_stringindexer": 363.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 2989.0, "Incentive_stringindexer": 696.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 156.0, "index_stringindexer": 14527.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 76264.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 164.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 163.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14850, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6456, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 10.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1.0, "Date Completed_stringindexer": 269.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 11.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 1063.0, "Incentive_stringindexer": 215.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 3.0, "index_stringindexer": 74367.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 64340.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 3.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 2.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13118, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4695, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 484.0, "County_stringindexer": 37.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 738.0, "Date Completed_stringindexer": 1130.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 28.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 1007.0, "Incentive_stringindexer": 80.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 601.0, "index_stringindexer": 80684.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 32898.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 585.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 585.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11354, "Total Inverter Quantity": 2, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9596, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 242.0, "Date Completed_stringindexer": 34.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 37325.0, "Incentive_stringindexer": 4594.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 633.0, "index_stringindexer": 60141.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 42554.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 467.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 466.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11542, "Total Inverter Quantity": 2, "Total PV Module Quantity": 66, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 19756, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 208.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 338.0, "Date Completed_stringindexer": 80.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 627.0, "Incentive_stringindexer": 1953.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 238.0, "index_stringindexer": 41222.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 18818.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 250.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 248.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7293, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 182.0, "Date Completed_stringindexer": 597.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 134.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1748.0, "Incentive_stringindexer": 827.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 25656.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 27548.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12083, "Total Inverter Quantity": 1, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11175, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 323.0, "County_stringindexer": 24.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 959.0, "Date Completed_stringindexer": 179.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 156.0, "Project Cost_stringindexer": 8.0, "Incentive_stringindexer": 611.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 379.0, "index_stringindexer": 53517.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 46545.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 378.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 376.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11946, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6714, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 131.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 93.0, "Date Completed_stringindexer": 61.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 667.0, "Incentive_stringindexer": 156.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 143.0, "index_stringindexer": 65423.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 62093.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 148.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 149.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11949, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5188, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 86.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 32.0, "Date Completed_stringindexer": 287.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 6.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 21.0, "Project Cost_stringindexer": 13631.0, "Incentive_stringindexer": 1002.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 89.0, "index_stringindexer": 3128.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 58326.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 96.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 94.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11040, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9508, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 51.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 109.0, "Date Completed_stringindexer": 569.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 140.0, "Incentive_stringindexer": 271.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 46.0, "index_stringindexer": 56393.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 53936.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 49.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 48.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11414, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11132, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 74.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 193.0, "Date Completed_stringindexer": 320.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 26988.0, "Incentive_stringindexer": 2824.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 73.0, "index_stringindexer": 44656.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 27657.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 32.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 31.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11549, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6714, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 278.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 347.0, "Date Completed_stringindexer": 244.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 10519.0, "Incentive_stringindexer": 1387.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1052.0, "index_stringindexer": 21983.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 15374.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 956.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 974.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6525, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 519.0, "Date Completed_stringindexer": 646.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1161.0, "Incentive_stringindexer": 573.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0, "index_stringindexer": 68730.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 9666.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 95.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 95.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11758, "Total Inverter Quantity": 43, "Total PV Module Quantity": 43, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12871, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 249.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 274.0, "Date Completed_stringindexer": 234.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 28260.0, "Incentive_stringindexer": 6089.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 283.0, "index_stringindexer": 83358.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 18124.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 12.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 11.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14051, "Total Inverter Quantity": 1, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11040, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 218.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 303.0, "Date Completed_stringindexer": 572.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 25899.0, "Incentive_stringindexer": 3392.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 246.0, "index_stringindexer": 60276.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 1676.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 231.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 229.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11416, "Total Inverter Quantity": 5, "Total PV Module Quantity": 150, "Total Nameplate kW DC": 45.0, "Expected KWh Annual Production": 52823, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 230.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 142.0, "Date Completed_stringindexer": 200.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 103.0, "Primary PV Module Manufacturer_stringindexer": 12.0, "PV Module Model Number_stringindexer": 358.0, "Project Cost_stringindexer": 7438.0, "Incentive_stringindexer": 1804.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 824.0, "index_stringindexer": 38181.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 31057.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 547.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 545.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13408, "Total Inverter Quantity": 2, "Total PV Module Quantity": 54, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20284, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 663.0, "County_stringindexer": 38.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 44.0, "Date Completed_stringindexer": 645.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 152.0, "Project Cost_stringindexer": 16204.0, "Incentive_stringindexer": 4422.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 838.0, "index_stringindexer": 31288.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 41883.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 779.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 767.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 2, "Total PV Module Quantity": 37, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14202, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 263.0, "Date Completed_stringindexer": 646.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 33141.0, "Incentive_stringindexer": 2228.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 46018.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 35780.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 2, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12283, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 584.0, "Date Completed_stringindexer": 583.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 1841.0, "Incentive_stringindexer": 657.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 76816.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 26729.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 3, "Total PV Module Quantity": 76, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 29172, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 522.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 109.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 6163.0, "Incentive_stringindexer": 6210.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0, "index_stringindexer": 82410.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 14910.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 31.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 30.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11367, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6022, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 304.0, "Date Completed_stringindexer": 659.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 2.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 30.0, "Project Cost_stringindexer": 66.0, "Incentive_stringindexer": 108.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 427.0, "index_stringindexer": 71695.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 51351.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 263.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 262.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12118, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10682, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 173.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 11.0, "Date Completed_stringindexer": 24.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 6893.0, "Incentive_stringindexer": 565.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 193.0, "index_stringindexer": 49012.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 1011.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 204.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 203.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 297.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 70.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 18.0, "Incentive_stringindexer": 58.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0, "index_stringindexer": 21286.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 40788.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 16.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 15.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 2, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12667, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 207.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 47.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 2699.0, "Incentive_stringindexer": 13473.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 66889.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 38400.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11937, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7630, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 68.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 581.0, "Date Completed_stringindexer": 98.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 28.0, "PV Module Model Number_stringindexer": 233.0, "Project Cost_stringindexer": 104.0, "Incentive_stringindexer": 3176.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 64.0, "index_stringindexer": 75974.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 62626.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 70.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 69.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11757, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4273, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 11.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 375.0, "Date Completed_stringindexer": 41.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 638.0, "Incentive_stringindexer": 337.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 5.0, "index_stringindexer": 64155.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 80427.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 5.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 4.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13021, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4601, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 268.0, "County_stringindexer": 37.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 487.0, "Date Completed_stringindexer": 110.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 55.0, "Primary PV Module Manufacturer_stringindexer": 11.0, "PV Module Model Number_stringindexer": 82.0, "Project Cost_stringindexer": 5165.0, "Incentive_stringindexer": 5005.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 305.0, "index_stringindexer": 36171.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 36165.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 311.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 310.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 31, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 11899, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 519.0, "Date Completed_stringindexer": 471.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 127.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 36944.0, "Incentive_stringindexer": 1825.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 29923.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 70675.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11554, "Total Inverter Quantity": 1, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12208, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 22.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 163.0, "Date Completed_stringindexer": 573.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1714.0, "Incentive_stringindexer": 732.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 15.0, "index_stringindexer": 60578.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 8033.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 17.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 16.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 522.0, "Date Completed_stringindexer": 222.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 25.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 293.0, "Incentive_stringindexer": 175.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 79017.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 84151.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11572, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8874, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 52.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 492.0, "Date Completed_stringindexer": 8.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 3.0, "Primary PV Module Manufacturer_stringindexer": 22.0, "PV Module Model Number_stringindexer": 83.0, "Project Cost_stringindexer": 27474.0, "Incentive_stringindexer": 67.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 47.0, "index_stringindexer": 70890.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 11268.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 58.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 58.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11132, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 626.0, "Date Completed_stringindexer": 330.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 6291.0, "Incentive_stringindexer": 8575.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0, "index_stringindexer": 80042.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 73541.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 4.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 3.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11550, "Total Inverter Quantity": 1, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12513, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 278.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 163.0, "Date Completed_stringindexer": 155.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 2141.0, "Incentive_stringindexer": 271.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 358.0, "index_stringindexer": 63069.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 74992.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 314.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 314.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14482, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11175, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 759.0, "County_stringindexer": 48.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 398.0, "Date Completed_stringindexer": 130.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 56.0, "Primary PV Module Manufacturer_stringindexer": 19.0, "PV Module Model Number_stringindexer": 264.0, "Project Cost_stringindexer": 25827.0, "Incentive_stringindexer": 611.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 974.0, "index_stringindexer": 3245.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 63219.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 828.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 844.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14224, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9191, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 523.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 282.0, "Date Completed_stringindexer": 1.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 17.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 101.0, "Project Cost_stringindexer": 33522.0, "Incentive_stringindexer": 5740.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 725.0, "index_stringindexer": 2338.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 53278.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 323.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 325.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11757, "Total Inverter Quantity": 2, "Total PV Module Quantity": 72, "Total Nameplate kW DC": 18.0, "Expected KWh Annual Production": 21974, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 11.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 10.0, "Date Completed_stringindexer": 1337.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 16.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1713.0, "Incentive_stringindexer": 1061.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 5.0, "index_stringindexer": 75039.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 55127.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 5.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 4.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 2, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9980, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 249.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 143.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 626.0, "Incentive_stringindexer": 529.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0, "index_stringindexer": 48604.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 22593.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 0.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11784, "Total Inverter Quantity": 1, "Total PV Module Quantity": 49, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14667, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 63.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 113.0, "Date Completed_stringindexer": 424.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 20556.0, "Incentive_stringindexer": 936.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 57.0, "index_stringindexer": 29810.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 65395.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 69.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 68.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14512, "Total Inverter Quantity": 4, "Total PV Module Quantity": 72, "Total Nameplate kW DC": 19.0, "Expected KWh Annual Production": 22819, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 465.0, "County_stringindexer": 31.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 436.0, "Date Completed_stringindexer": 510.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 32.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 101.0, "Project Cost_stringindexer": 37268.0, "Incentive_stringindexer": 1119.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 556.0, "index_stringindexer": 38882.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 55189.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 529.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 540.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 13760, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 5869, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 348.0, "County_stringindexer": 35.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1.0, "Date Completed_stringindexer": 783.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 11.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 712.0, "Incentive_stringindexer": 769.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 398.0, "index_stringindexer": 31977.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 30623.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 359.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 357.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14101, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8006, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1187.0, "County_stringindexer": 52.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 494.0, "Date Completed_stringindexer": 736.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 5.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 10021.0, "Incentive_stringindexer": 1184.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1520.0, "index_stringindexer": 76050.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 69802.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 1301.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 1255.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 12531, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 7020, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 836.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 588.0, "Date Completed_stringindexer": 21.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 4.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1784.0, "Incentive_stringindexer": 439.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1062.0, "index_stringindexer": 74283.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 78626.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 973.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 968.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11763, "Total Inverter Quantity": 1, "Total PV Module Quantity": 52, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15565, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 39.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 547.0, "Date Completed_stringindexer": 116.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 81.0, "Project Cost_stringindexer": 20369.0, "Incentive_stringindexer": 841.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 34.0, "index_stringindexer": 80779.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 44442.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 45.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 44.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14850, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 10.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1.0, "Date Completed_stringindexer": 269.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 8.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 170.0, "Primary PV Module Manufacturer_stringindexer": 25.0, "PV Module Model Number_stringindexer": 54.0, "Project Cost_stringindexer": 1081.0, "Incentive_stringindexer": 26.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 3.0, "index_stringindexer": 60925.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 82235.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 3.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 2.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14830, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8733, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 496.0, "County_stringindexer": 57.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 593.0, "Date Completed_stringindexer": 373.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 53.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 219.0, "Project Cost_stringindexer": 4484.0, "Incentive_stringindexer": 2152.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 625.0, "index_stringindexer": 41134.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 33756.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 591.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 582.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10309, "Total Inverter Quantity": 3, "Total PV Module Quantity": 43, "Total Nameplate kW DC": 14.0, "Expected KWh Annual Production": 16505, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 261.0, "Date Completed_stringindexer": 429.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 6.0, "Primary Inverter Model Number_stringindexer": 36.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 1.0, "Project Cost_stringindexer": 27436.0, "Incentive_stringindexer": 31.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0, "index_stringindexer": 5353.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 60308.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 7.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 6.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 10970, "Total Inverter Quantity": 1, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13429, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 233.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 11.0, "Date Completed_stringindexer": 164.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 9.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 20.0, "Project Cost_stringindexer": 1037.0, "Incentive_stringindexer": 12421.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 266.0, "index_stringindexer": 74419.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 49775.0, "Project Number_stringindexer_binarizer_transform": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 274.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 275.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11576, "Total Inverter Quantity": 34, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10177, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 455.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 1047.0, "Date Completed_stringindexer": 29.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 23.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 8.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 12.0, "Project Cost_stringindexer": 764.0, "Incentive_stringindexer": 1906.0, "Remote Net Metering_stringindexer": 1, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 540.0, "index_stringindexer": 44260.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 7844.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "Reporting Period_stringindexer": 514.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0, "index_stringindexer": 522.0, "index_stringindexer_binarizer_transform": 0.0, "Project Number_stringindexer": 0.0, "Project Number_stringindexer_binarizer_transform": 0.0}, {"Zip Code": 14589, "Total Inverter Quantity": 9, "Total PV Module Quantity": 196, "Total Nameplate kW DC": 48.0, "Expected KWh Annual Production": 56368, "Reporting Period_stringindexer": 0.0, "City_stringindexer": 380.0, "County_stringindexer": 39.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 1106.0, "Date Completed_stringindexer": 1390.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 758.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 672.0, "Primary PV Module Manufacturer_stringindexer": 76.0, "PV Module Model Number_stringindexer": 1760.0, "Project Cost_stringindexer": 39654.0, "Incentive_stringindexer": 5535.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 435.0, "index_stringindexer": 25260.0, "index_stringindexer_binarizer_transform": 1.0, "Project Number_stringindexer": 51870.0, "Project Number_stringindexer_binarizer_transform": 1.0}], "FE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Zip Code", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "11836.66", "stddev": "879.47", "min": "10301", "max": "15068", "missing": "0"}, "updatedLabel": "Zip Code"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Inverter Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "13.69", "stddev": "21.27", "min": "1", "max": "313", "missing": "0"}, "updatedLabel": "Total Inverter Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total PV Module Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "80.99", "stddev": "393.75", "min": "4", "max": "8316", "missing": "0"}, "updatedLabel": "Total PV Module Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Nameplate kW DC", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "16.04", "stddev": "14.29", "min": "1.0", "max": "265.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Total Nameplate kW DC"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Expected KWh Annual Production", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "31297.37", "stddev": "156484.97", "min": "1573", "max": "3318962", "missing": "0"}, "updatedLabel": "Expected KWh Annual Produ..."}, {"transformationsData": [{"feature_label": "index_stringindexer", "threshold": 22672.742, "transformation_label": "Binarizer"}], "feature": "index_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "23126.21", "stddev": "28752.64", "min": "0.0", "max": "86105.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "index_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Reporting Period_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "127.36", "stddev": "260.59", "min": "0.0", "max": "1344.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Reporting Period_stringin..."}, {"transformationsData": [{"feature_label": "Project Number_stringindexer", "threshold": 21735.312, "transformation_label": "Binarizer"}], "feature": "Project Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "20453.14", "stddev": "27274.72", "min": "0.0", "max": "83161.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Project Number_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "City_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "71.55", "stddev": "156.5", "min": "0.0", "max": "1488.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "City_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "County_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "5.04", "stddev": "10.64", "min": "0.0", "max": "57.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "County_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "State_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "State_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Sector_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.04", "stddev": "0.19", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Sector_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Program Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.04", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Program Type_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Solicitation_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "0.65", "stddev": "0.73", "min": "0.0", "max": "2.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Solicitation_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Electric Utility_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "1.19", "stddev": "1.56", "min": "0.0", "max": "6.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Electric Utility_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Purchase Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.35", "stddev": "0.6", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Purchase Type_stringindex..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Application Received_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "175.13", "stddev": "268.76", "min": "0.0", "max": "1535.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Application Received..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Completed_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "279.29", "stddev": "474.41", "min": "0.0", "max": "2697.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Completed_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Status_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.29", "stddev": "0.45", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Project Status_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Contractor_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "11.57", "stddev": "55.58", "min": "0.0", "max": "672.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Contractor_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "3.27", "stddev": "5.63", "min": "0.0", "max": "70.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Manufact..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "20.1", "stddev": "51.37", "min": "0.0", "max": "672.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Model Nu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary PV Module Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "8.19", "stddev": "21.28", "min": "0.0", "max": "209.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary PV Module Manufac..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "PV Module Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "145.79", "stddev": "319.61", "min": "0.0", "max": "1937.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "PV Module Model Number_st..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Cost_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "8229.5", "stddev": "12132.63", "min": "0.0", "max": "40607.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Project Cost_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Incentive_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "1204.05", "stddev": "2814.8", "min": "0.0", "max": "15738.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Incentive_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Remote Net Metering_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.36", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Remote Net Metering_strin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Affordable Solar_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Affordable Solar_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Community Distributed Generation_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.49", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Community Distributed Gen..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Green Jobs Green New York Participant_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Green Jobs Green New York..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Location 1_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "201.25", "stddev": "400.32", "min": "0.0", "max": "2454.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Location 1_stringindexer"}, {"feature": "index_stringindexer_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.36", "stddev": "0.48", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "index_stringindexer_binar..."}, {"feature": "Project Number_stringindexer_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.38", "stddev": "0.49", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "Project Number_stringinde..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["10304.0 - 10623.7", "10623.7 - 10943.4", "10943.4 - 11263.1", "11263.1 - 11582.8", "11582.8 - 11902.5", "11902.5 - 12222.2", "12222.2 - 12541.9", "12541.9 - 12861.6", "12861.6 - 13181.3", "13181.3 - 13501"], "data": [54, 13, 29, 56, 2, 272, 14, 14, 5, 5]}, "label": "Zip Code", "count": 10, "min": 10304.0, "max": 13501}, {"values": {"label": ["1.0 - 5.9", "5.9 - 10.8", "10.8 - 15.7", "15.7 - 20.6", "20.6 - 25.5", "25.5 - 30.4", "30.4 - 35.3", "35.3 - 40.2", "40.2 - 45.1", "45.1 - 50"], "data": [98, 259, 22, 20, 27, 32, 11, 11, 4, 2]}, "label": "Total Inverter Quantity", "count": 10, "min": 1.0, "max": 50}, {"values": {"label": ["4.0 - 835.2", "835.2 - 1666.4", "1666.4 - 2497.6", "2497.6 - 3328.8", "3328.8 - 4160.0", "4160.0 - 4991.2", "4991.2 - 5822.4", "5822.4 - 6653.6", "6653.6 - 7484.8", "7484.8 - 8316"], "data": [500, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "label": "Total PV Module Quantity", "count": 10, "min": 4.0, "max": 8316}, {"values": {"label": ["1.0 - 11.8", "11.8 - 22.6", "22.6 - 33.4", "33.4 - 44.2", "44.2 - 55.0", "55.0 - 65.8", "65.8 - 76.6", "76.6 - 87.4", "87.4 - 98.2", "98.2 - 109.0"], "data": [213, 24, 253, 1, 6, 1, 0, 1, 0, 1]}, "label": "Total Nameplate kW DC", "count": 10, "min": 1.0, "max": 109.0}, {"values": {"label": ["2993 - 24175", "24175 - 45357", "45357 - 66539", "66539 - 87721", "87721 - 108903", "108903 - 130085", "130085 - 151267", "151267 - 172449", "172449 - 193631", "193631 - 214813"], "data": [224, 253, 1, 1, 0, 1, 0, 0, 0, 0]}, "label": "Expected KWh Annual Production", "count": 10, "min": 2993, "max": 214813}, {"values": {"label": ["1.0 - 8635.8", "8635.8 - 17270.6", "17270.6 - 25905.4", "25905.4 - 34540.2", "34540.2 - 43175.0", "43175.0 - 51809.8", "51809.8 - 60444.6", "60444.6 - 69079.4", "69079.4 - 77714.2", "77714.2 - 86349.0"], "data": [267, 20, 28, 20, 33, 18, 28, 32, 17, 35]}, "label": "index_stringindexer", "count": 10, "min": 1.0, "max": 86349.0}, {"values": {"label": ["0.0 - 134.4", "134.4 - 268.8", "268.8 - 403.2", "403.2 - 537.6", "537.6 - 672.0", "672.0 - 806.4", "806.4 - 940.8", "940.8 - 1075.2", "1075.2 - 1209.6", "1209.6 - 1344.0"], "data": [388, 29, 23, 14, 15, 5, 9, 9, 4, 4]}, "label": "Reporting Period_stringindexer", "count": 10, "min": 0.0, "max": 1344.0}, {"values": {"label": ["0.0 - 8433.8", "8433.8 - 16867.6", "16867.6 - 25301.4", "25301.4 - 33735.2", "33735.2 - 42169.0", "42169.0 - 50602.8", "50602.8 - 59036.6", "59036.6 - 67470.4", "67470.4 - 75904.2", "75904.2 - 84338.0"], "data": [272, 24, 23, 24, 24, 25, 28, 28, 25, 27]}, "label": "Project Number_stringindexer", "count": 10, "min": 0.0, "max": 84338.0}, {"values": {"label": ["0.0 - 140.4", "140.4 - 280.8", "280.8 - 421.2", "421.2 - 561.6", "561.6 - 702.0", "702.0 - 842.4", "842.4 - 982.8", "982.8 - 1123.2", "1123.2 - 1263.6", "1263.6 - 1404.0"], "data": [401, 35, 14, 19, 7, 9, 9, 2, 3, 1]}, "label": "City_stringindexer", "count": 10, "min": 0.0, "max": 1404.0}, {"values": {"label": ["0.0 - 5.7", "5.7 - 11.4", "11.4 - 17.1", "17.1 - 22.8", "22.8 - 28.5", "28.5 - 34.2", "34.2 - 39.9", "39.9 - 45.6", "45.6 - 51.3", "51.3 - 57.0"], "data": [353, 65, 51, 12, 9, 4, 1, 2, 2, 1]}, "label": "County_stringindexer", "count": 10, "min": 0.0, "max": 57.0}, {"values": {"label": ["0"], "data": [500]}, "label": "State_stringindexer", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [468, 32]}, "label": "Sector_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [499, 1]}, "label": "Program Type_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0", "1.0", "2.0", "9.0"], "data": [250, 122, 127, 1]}, "label": "Solicitation_stringindexer", "count": 4, "min": "0.0", "max": "2.0"}, {"values": {"label": ["2.0", "0.0", "3.0", "4.0", "5.0", "6.0", "1.0"], "data": [133, 257, 52, 17, 17, 20, 4]}, "label": "Electric Utility_stringindexer", "count": 7, "min": "0.0", "max": "6.0"}, {"values": {"label": ["0", "1", "2"], "data": [361, 105, 34]}, "label": "Purchase Type_stringindexer", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["0.0 - 301.7", "301.7 - 603.4", "603.4 - 905.1", "905.1 - 1206.8", "1206.8 - 1508.5", "1508.5 - 1810.2", "1810.2 - 2111.9", "2111.9 - 2413.6", "2413.6 - 2715.3", "2715.3 - 3017.0"], "data": [388, 71, 22, 18, 0, 1, 0, 0, 0, 0]}, "label": "Date Application Received_stringindexer", "count": 10, "min": 0.0, "max": 3017.0}, {"values": {"label": ["0.0 - 269.7", "269.7 - 539.4", "539.4 - 809.1", "809.1 - 1078.8", "1078.8 - 1348.5", "1348.5 - 1618.2", "1618.2 - 1887.9", "1887.9 - 2157.6", "2157.6 - 2427.3", "2427.3 - 2697.0"], "data": [348, 56, 37, 14, 18, 14, 5, 4, 1, 3]}, "label": "Date Completed_stringindexer", "count": 10, "min": 0.0, "max": 2697.0}, {"values": {"label": ["1", "0"], "data": [145, 355]}, "label": "Project Status_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 58.0", "58.0 - 116.0", "116.0 - 174.0", "174.0 - 232.0", "232.0 - 290.0", "290.0 - 348.0", "348.0 - 406.0", "406.0 - 464.0", "464.0 - 522.0", "522.0 - 580.0"], "data": [481, 5, 2, 8, 0, 1, 0, 1, 0, 0]}, "label": "Contractor_stringindexer", "count": 10, "min": 0.0, "max": 580.0}, {"values": {"label": ["0.0 - 7.0", "7.0 - 14.0", "14.0 - 21.0", "21.0 - 28.0", "28.0 - 35.0", "35.0 - 42.0", "42.0 - 49.0", "49.0 - 56.0", "56.0 - 63.0", "63.0 - 70.0"], "data": [394, 99, 4, 0, 0, 1, 1, 0, 0, 1]}, "label": "Primary Inverter Manufacturer_stringindexer", "count": 10, "min": 0.0, "max": 70.0}, {"values": {"label": ["0.0 - 88.1", "88.1 - 176.2", "176.2 - 264.3", "264.3 - 352.4", "352.4 - 440.5", "440.5 - 528.6", "528.6 - 616.7", "616.7 - 704.8", "704.8 - 792.9", "792.9 - 881.0"], "data": [458, 36, 4, 0, 1, 0, 0, 1, 0, 0]}, "label": "Primary Inverter Model Number_stringindexer", "count": 10, "min": 0.0, "max": 881.0}, {"values": {"label": ["0.0 - 11.6", "11.6 - 23.2", "23.2 - 34.8", "34.8 - 46.4", "46.4 - 58.0", "58.0 - 69.6", "69.6 - 81.2", "81.2 - 92.8", "92.8 - 104.4", "104.4 - 116.0"], "data": [456, 22, 13, 4, 1, 3, 1, 0, 0, 0]}, "label": "Primary PV Module Manufacturer_stringindexer", "count": 10, "min": 0.0, "max": 116.0}, {"values": {"label": ["0.0 - 193.7", "193.7 - 387.4", "387.4 - 581.1", "581.1 - 774.8", "774.8 - 968.5", "968.5 - 1162.2", "1162.2 - 1355.9", "1355.9 - 1549.6", "1549.6 - 1743.3", "1743.3 - 1937.0"], "data": [407, 24, 28, 8, 11, 9, 7, 1, 1, 4]}, "label": "PV Module Model Number_stringindexer", "count": 10, "min": 0.0, "max": 1937.0}, {"values": {"label": ["0.0 - 3972.4", "3972.4 - 7944.8", "7944.8 - 11917.2", "11917.2 - 15889.6", "15889.6 - 19862.0", "19862.0 - 23834.4", "23834.4 - 27806.8", "27806.8 - 31779.2", "31779.2 - 35751.6", "35751.6 - 39724.0"], "data": [311, 24, 24, 22, 24, 13, 22, 15, 25, 16]}, "label": "Project Cost_stringindexer", "count": 10, "min": 0.0, "max": 39724.0}, {"values": {"label": ["0.0 - 1629.3", "1629.3 - 3258.6", "3258.6 - 4887.9", "4887.9 - 6517.2", "6517.2 - 8146.5", "8146.5 - 9775.8", "9775.8 - 11405.1", "11405.1 - 13034.4", "13034.4 - 14663.7", "14663.7 - 16293.0"], "data": [408, 32, 25, 12, 3, 3, 3, 2, 5, 7]}, "label": "Incentive_stringindexer", "count": 10, "min": 0.0, "max": 16293.0}, {"values": {"label": ["0"], "data": [500]}, "label": "Remote Net Metering_stringindexer", "count": 1, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [245, 255]}, "label": "Affordable Solar_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [245, 255]}, "label": "Community Distributed Generation_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Green Jobs Green New York Participant_stringindexer", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0.0 - 182.1", "182.1 - 364.2", "364.2 - 546.3", "546.3 - 728.4", "728.4 - 910.5", "910.5 - 1092.6", "1092.6 - 1274.7", "1274.7 - 1456.8", "1456.8 - 1638.9", "1638.9 - 1821.0"], "data": [346, 69, 34, 16, 8, 10, 5, 3, 3, 3]}, "label": "Location 1_stringindexer", "count": 10, "min": 0.0, "max": 1821.0}, {"values": {"label": ["1.0", "0.0"], "data": [191, 309]}, "label": "index_stringindexer_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}, {"values": {"label": ["0.0", "1.0"], "data": [308, 192]}, "label": "Project Number_stringindexer_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}], "stageId": "65d2d82cb0c78b45eb628d81", "FESamplePath": "/FileStore/platform/sampleData/65d2d82cb0c78b45eb628d81_AutoFE/part-00000-3e59d8e2-405a-4f09-a537-c234ca691f71-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/65d2d82cb0c78b45eb628d81_AutoFE/part-00000-3e59d8e2-405a-4f09-a537-c234ca691f71-c000.csv", "originalcount": 169442, "graphdata": {"Zip Code": {"label": ["10304.0 - 10623.7", "10623.7 - 10943.4", "10943.4 - 11263.1", "11263.1 - 11582.8", "11582.8 - 11902.5", "11902.5 - 12222.2", "12222.2 - 12541.9", "12541.9 - 12861.6", "12861.6 - 13181.3", "13181.3 - 13501"], "data": [54, 13, 29, 56, 2, 272, 14, 14, 5, 5]}, "Total Inverter Quantity": {"label": ["1.0 - 5.9", "5.9 - 10.8", "10.8 - 15.7", "15.7 - 20.6", "20.6 - 25.5", "25.5 - 30.4", "30.4 - 35.3", "35.3 - 40.2", "40.2 - 45.1", "45.1 - 50"], "data": [98, 259, 22, 20, 27, 32, 11, 11, 4, 2]}, "Total PV Module Quantity": {"label": ["4.0 - 835.2", "835.2 - 1666.4", "1666.4 - 2497.6", "2497.6 - 3328.8", "3328.8 - 4160.0", "4160.0 - 4991.2", "4991.2 - 5822.4", "5822.4 - 6653.6", "6653.6 - 7484.8", "7484.8 - 8316"], "data": [500, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "Total Nameplate kW DC": {"label": ["1.0 - 11.8", "11.8 - 22.6", "22.6 - 33.4", "33.4 - 44.2", "44.2 - 55.0", "55.0 - 65.8", "65.8 - 76.6", "76.6 - 87.4", "87.4 - 98.2", "98.2 - 109.0"], "data": [213, 24, 253, 1, 6, 1, 0, 1, 0, 1]}, "Expected KWh Annual Production": {"label": ["2993 - 24175", "24175 - 45357", "45357 - 66539", "66539 - 87721", "87721 - 108903", "108903 - 130085", "130085 - 151267", "151267 - 172449", "172449 - 193631", "193631 - 214813"], "data": [224, 253, 1, 1, 0, 1, 0, 0, 0, 0]}, "index_stringindexer": {"label": ["1.0 - 8635.8", "8635.8 - 17270.6", "17270.6 - 25905.4", "25905.4 - 34540.2", "34540.2 - 43175.0", "43175.0 - 51809.8", "51809.8 - 60444.6", "60444.6 - 69079.4", "69079.4 - 77714.2", "77714.2 - 86349.0"], "data": [267, 20, 28, 20, 33, 18, 28, 32, 17, 35]}, "Reporting Period_stringindexer": {"label": ["0.0 - 134.4", "134.4 - 268.8", "268.8 - 403.2", "403.2 - 537.6", "537.6 - 672.0", "672.0 - 806.4", "806.4 - 940.8", "940.8 - 1075.2", "1075.2 - 1209.6", "1209.6 - 1344.0"], "data": [388, 29, 23, 14, 15, 5, 9, 9, 4, 4]}, "Project Number_stringindexer": {"label": ["0.0 - 8433.8", "8433.8 - 16867.6", "16867.6 - 25301.4", "25301.4 - 33735.2", "33735.2 - 42169.0", "42169.0 - 50602.8", "50602.8 - 59036.6", "59036.6 - 67470.4", "67470.4 - 75904.2", "75904.2 - 84338.0"], "data": [272, 24, 23, 24, 24, 25, 28, 28, 25, 27]}, "City_stringindexer": {"label": ["0.0 - 140.4", "140.4 - 280.8", "280.8 - 421.2", "421.2 - 561.6", "561.6 - 702.0", "702.0 - 842.4", "842.4 - 982.8", "982.8 - 1123.2", "1123.2 - 1263.6", "1263.6 - 1404.0"], "data": [401, 35, 14, 19, 7, 9, 9, 2, 3, 1]}, "County_stringindexer": {"label": ["0.0 - 5.7", "5.7 - 11.4", "11.4 - 17.1", "17.1 - 22.8", "22.8 - 28.5", "28.5 - 34.2", "34.2 - 39.9", "39.9 - 45.6", "45.6 - 51.3", "51.3 - 57.0"], "data": [353, 65, 51, 12, 9, 4, 1, 2, 2, 1]}, "State_stringindexer": {"label": ["0"], "data": [500]}, "Sector_stringindexer": {"label": ["0", "1"], "data": [468, 32]}, "Program Type_stringindexer": {"label": ["0", "1"], "data": [499, 1]}, "Solicitation_stringindexer": {"label": ["0.0", "1.0", "2.0", "9.0"], "data": [250, 122, 127, 1]}, "Electric Utility_stringindexer": {"label": ["2.0", "0.0", "3.0", "4.0", "5.0", "6.0", "1.0"], "data": [133, 257, 52, 17, 17, 20, 4]}, "Purchase Type_stringindexer": {"label": ["0", "1", "2"], "data": [361, 105, 34]}, "Date Application Received_stringindexer": {"label": ["0.0 - 301.7", "301.7 - 603.4", "603.4 - 905.1", "905.1 - 1206.8", "1206.8 - 1508.5", "1508.5 - 1810.2", "1810.2 - 2111.9", "2111.9 - 2413.6", "2413.6 - 2715.3", "2715.3 - 3017.0"], "data": [388, 71, 22, 18, 0, 1, 0, 0, 0, 0]}, "Date Completed_stringindexer": {"label": ["0.0 - 269.7", "269.7 - 539.4", "539.4 - 809.1", "809.1 - 1078.8", "1078.8 - 1348.5", "1348.5 - 1618.2", "1618.2 - 1887.9", "1887.9 - 2157.6", "2157.6 - 2427.3", "2427.3 - 2697.0"], "data": [348, 56, 37, 14, 18, 14, 5, 4, 1, 3]}, "Project Status_stringindexer": {"label": ["1", "0"], "data": [145, 355]}, "Contractor_stringindexer": {"label": ["0.0 - 58.0", "58.0 - 116.0", "116.0 - 174.0", "174.0 - 232.0", "232.0 - 290.0", "290.0 - 348.0", "348.0 - 406.0", "406.0 - 464.0", "464.0 - 522.0", "522.0 - 580.0"], "data": [481, 5, 2, 8, 0, 1, 0, 1, 0, 0]}, "Primary Inverter Manufacturer_stringindexer": {"label": ["0.0 - 7.0", "7.0 - 14.0", "14.0 - 21.0", "21.0 - 28.0", "28.0 - 35.0", "35.0 - 42.0", "42.0 - 49.0", "49.0 - 56.0", "56.0 - 63.0", "63.0 - 70.0"], "data": [394, 99, 4, 0, 0, 1, 1, 0, 0, 1]}, "Primary Inverter Model Number_stringindexer": {"label": ["0.0 - 88.1", "88.1 - 176.2", "176.2 - 264.3", "264.3 - 352.4", "352.4 - 440.5", "440.5 - 528.6", "528.6 - 616.7", "616.7 - 704.8", "704.8 - 792.9", "792.9 - 881.0"], "data": [458, 36, 4, 0, 1, 0, 0, 1, 0, 0]}, "Primary PV Module Manufacturer_stringindexer": {"label": ["0.0 - 11.6", "11.6 - 23.2", "23.2 - 34.8", "34.8 - 46.4", "46.4 - 58.0", "58.0 - 69.6", "69.6 - 81.2", "81.2 - 92.8", "92.8 - 104.4", "104.4 - 116.0"], "data": [456, 22, 13, 4, 1, 3, 1, 0, 0, 0]}, "PV Module Model Number_stringindexer": {"label": ["0.0 - 193.7", "193.7 - 387.4", "387.4 - 581.1", "581.1 - 774.8", "774.8 - 968.5", "968.5 - 1162.2", "1162.2 - 1355.9", "1355.9 - 1549.6", "1549.6 - 1743.3", "1743.3 - 1937.0"], "data": [407, 24, 28, 8, 11, 9, 7, 1, 1, 4]}, "Project Cost_stringindexer": {"label": ["0.0 - 3972.4", "3972.4 - 7944.8", "7944.8 - 11917.2", "11917.2 - 15889.6", "15889.6 - 19862.0", "19862.0 - 23834.4", "23834.4 - 27806.8", "27806.8 - 31779.2", "31779.2 - 35751.6", "35751.6 - 39724.0"], "data": [311, 24, 24, 22, 24, 13, 22, 15, 25, 16]}, "Incentive_stringindexer": {"label": ["0.0 - 1629.3", "1629.3 - 3258.6", "3258.6 - 4887.9", "4887.9 - 6517.2", "6517.2 - 8146.5", "8146.5 - 9775.8", "9775.8 - 11405.1", "11405.1 - 13034.4", "13034.4 - 14663.7", "14663.7 - 16293.0"], "data": [408, 32, 25, 12, 3, 3, 3, 2, 5, 7]}, "Remote Net Metering_stringindexer": {"label": ["0"], "data": [500]}, "Affordable Solar_stringindexer": {"label": ["1", "0"], "data": [245, 255]}, "Community Distributed Generation_stringindexer": {"label": ["1", "0"], "data": [245, 255]}, "Green Jobs Green New York Participant_stringindexer": {"label": ["0"], "data": [500]}, "Location 1_stringindexer": {"label": ["0.0 - 182.1", "182.1 - 364.2", "364.2 - 546.3", "546.3 - 728.4", "728.4 - 910.5", "910.5 - 1092.6", "1092.6 - 1274.7", "1274.7 - 1456.8", "1456.8 - 1638.9", "1638.9 - 1821.0"], "data": [346, 69, 34, 16, 8, 10, 5, 3, 3, 3]}, "index_stringindexer_binarizer_transform": {"label": ["1.0", "0.0"], "data": [191, 309]}, "Project Number_stringindexer_binarizer_transform": {"label": ["0.0", "1.0"], "data": [308, 192]}}}, "ManualFE": {"FE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Zip Code", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "11941.05", "stddev": "774.15", "min": "501", "max": "15086", "missing": "0"}, "updatedLabel": "Zip Code"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Inverter Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "7.67", "stddev": "10.46", "min": "1", "max": "800", "missing": "0"}, "updatedLabel": "Total Inverter Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total PV Module Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "77.74", "stddev": "417.6", "min": "1", "max": "14800", "missing": "0"}, "updatedLabel": "Total PV Module Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Nameplate kW DC", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "24.32", "stddev": "135.07", "min": "0.0", "max": "5799.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Total Nameplate kW DC"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Expected KWh Annual Production", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "30450.46", "stddev": "176375.93", "min": "164", "max": "6807591", "missing": "0"}, "updatedLabel": "Expected KWh Annual Produ..."}, {"transformationsData": [{"feature_label": "index_stringindexer", "threshold": 22672.742, "transformation_label": "Binarizer"}], "feature": "index_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "22116.04", "stddev": "27900.55", "min": "0.0", "max": "86409.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "index_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Reporting Period_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "126.19", "stddev": "240.58", "min": "0.0", "max": "1687.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Reporting Period_stringin..."}, {"transformationsData": [{"feature_label": "Project Number_stringindexer", "threshold": 21735.312, "transformation_label": "Binarizer"}], "feature": "Project Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "21177.26", "stddev": "27361.07", "min": "0.0", "max": "84720.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Project Number_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "City_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "93.09", "stddev": "206.24", "min": "0.0", "max": "1799.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "City_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "County_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "4.48", "stddev": "8.98", "min": "0.0", "max": "61.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "County_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "State_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "State_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Sector_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.03", "stddev": "0.18", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Sector_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Program Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.01", "stddev": "0.1", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Program Type_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Solicitation_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1.01", "stddev": "1.94", "min": "0.0", "max": "44.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Solicitation_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Electric Utility_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1.26", "stddev": "1.68", "min": "0.0", "max": "6.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Electric Utility_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Purchase Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.34", "stddev": "0.62", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Purchase Type_stringindex..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Application Received_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "278.32", "stddev": "486.09", "min": "0.0", "max": "3268.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Application Received..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Completed_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "270.05", "stddev": "466.22", "min": "0.0", "max": "2858.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Completed_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Status_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.47", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Project Status_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Contractor_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "18.7", "stddev": "59.12", "min": "0.0", "max": "821.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Contractor_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "2.6", "stddev": "7.64", "min": "0.0", "max": "227.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Manufact..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "24.0", "stddev": "73.71", "min": "0.0", "max": "1008.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Model Nu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary PV Module Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "5.67", "stddev": "18.85", "min": "0.0", "max": "420.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary PV Module Manufac..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "PV Module Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "57.12", "stddev": "182.82", "min": "0.0", "max": "2016.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "PV Module Model Number_st..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Cost_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "5548.85", "stddev": "10465.71", "min": "0.0", "max": "40626.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Project Cost_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Incentive_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1161.11", "stddev": "2763.79", "min": "0.0", "max": "16812.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Incentive_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Remote Net Metering_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.25", "stddev": "0.43", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Remote Net Metering_strin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Affordable Solar_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Affordable Solar_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Community Distributed Generation_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Community Distributed Gen..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Green Jobs Green New York Participant_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.0", "stddev": "0.02", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Green Jobs Green New York..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Location 1_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "143.55", "stddev": "298.84", "min": "0.0", "max": "2515.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Location 1_stringindexer"}, {"feature": "index_stringindexer_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "135553", "mean": "0.38", "stddev": "0.48", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "index_stringindexer_binar..."}, {"feature": "Project Number_stringindexer_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "135553", "mean": "0.37", "stddev": "0.48", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "Project Number_stringinde..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "65d2d82cb0c78b45eb628d81", "FESamplePath": "/FileStore/platform/sampleData/65d2d82cb0c78b45eb628d81_AutoFE/part-00000-3f5e5845-b279-4d71-ada9-eb78cd9ddaa8-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/65d2d82cb0c78b45eb628d81_AutoFE/part-00000-3e59d8e2-405a-4f09-a537-c234ca691f71-c000.csv", "samplecount": 135553, "originalcount": 169442, "dataPercentage": "80", "FEGraph": [{"values": {"label": ["501.0 - 2029.6", "2029.6 - 3558.2", "3558.2 - 5086.8", "5086.8 - 6615.4", "6615.4 - 8144.0", "8144.0 - 9672.6", "9672.6 - 11201.2", "11201.2 - 12729.8", "12729.8 - 14258.4", "14258.4 - 15787"], "data": [11, 0, 0, 0, 0, 0, 15732, 109139, 7768, 2903]}, "label": "Zip Code", "count": 10, "min": 501.0, "max": 15787}, {"values": {"label": ["1.0 - 80.9", "80.9 - 160.8", "160.8 - 240.7", "240.7 - 320.6", "320.6 - 400.5", "400.5 - 480.4", "480.4 - 560.3", "560.3 - 640.2", "640.2 - 720.1", "720.1 - 800"], "data": [135383, 127, 22, 11, 1, 4, 0, 1, 2, 2]}, "label": "Total Inverter Quantity", "count": 10, "min": 1.0, "max": 800}, {"values": {"label": ["1.0 - 1480.9", "1480.9 - 2960.8", "2960.8 - 4440.7", "4440.7 - 5920.6", "5920.6 - 7400.5", "7400.5 - 8880.4", "8880.4 - 10360.3", "10360.3 - 11840.2", "11840.2 - 13320.1", "13320.1 - 14800"], "data": [135382, 33, 15, 6, 18, 46, 52, 1, 0, 0]}, "label": "Total PV Module Quantity", "count": 10, "min": 1.0, "max": 14800}, {"values": {"label": ["0.0 - 573.9", "573.9 - 1147.8", "1147.8 - 1721.7", "1721.7 - 2295.6", "2295.6 - 2869.5", "2869.5 - 3443.4", "3443.4 - 4017.3", "4017.3 - 4591.2", "4591.2 - 5165.1", "5165.1 - 5739.0"], "data": [135204, 48, 22, 21, 127, 120, 0, 0, 3, 7]}, "label": "Total Nameplate kW DC", "count": 10, "min": 0.0, "max": 5739.0}, {"values": {"label": ["164.0 - 680906.7", "680906.7 - 1361649.4", "1361649.4 - 2042392.1", "2042392.1 - 2723134.8", "2723134.8 - 3403877.5", "3403877.5 - 4084620.2", "4084620.2 - 4765362.9", "4765362.9 - 5446105.6", "5446105.6 - 6126848.3", "6126848.3 - 6807591"], "data": [135285, 70, 25, 32, 94, 35, 1, 1, 2, 8]}, "label": "Expected KWh Annual Production", "count": 10, "min": 164.0, "max": 6807591}, {"values": {"label": ["0.0 - 168.7", "168.7 - 337.4", "337.4 - 506.1", "506.1 - 674.8", "674.8 - 843.5", "843.5 - 1012.2", "1012.2 - 1180.9", "1180.9 - 1349.6", "1349.6 - 1518.3", "1518.3 - 1687.0"], "data": [106037, 12638, 6582, 4072, 2568, 1637, 1006, 571, 321, 121]}, "label": "Reporting Period_stringindexer", "count": 10, "min": 0.0, "max": 1687.0}, {"values": {"label": ["0.0 - 179.9", "179.9 - 359.8", "359.8 - 539.7", "539.7 - 719.6", "719.6 - 899.5", "899.5 - 1079.4", "1079.4 - 1259.3", "1259.3 - 1439.2", "1439.2 - 1619.1", "1619.1 - 1799.0"], "data": [112076, 10866, 5450, 3007, 1777, 1048, 596, 382, 184, 167]}, "label": "City_stringindexer", "count": 10, "min": 0.0, "max": 1799.0}, {"values": {"label": ["0.0 - 6.1", "6.1 - 12.2", "12.2 - 18.3", "18.3 - 24.4", "24.4 - 30.5", "30.5 - 36.6", "36.6 - 42.7", "42.7 - 48.8", "48.8 - 54.9", "54.9 - 61.0"], "data": [109014, 11277, 5986, 2840, 2079, 1473, 1038, 823, 579, 444]}, "label": "County_stringindexer", "count": 10, "min": 0.0, "max": 61.0}, {"values": {"label": ["0"], "data": [135553]}, "label": "State_stringindexer", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [129843, 5710]}, "label": "Sector_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [135155, 398]}, "label": "Program Type_stringindexer", "count": 2, "min": "0", "max": "2"}, {"values": {"label": ["0.0 - 4.4", "4.4 - 8.8", "8.8 - 13.2", "13.2 - 17.6", "17.6 - 22.0", "22.0 - 26.4", "26.4 - 30.8", "30.8 - 35.2", "35.2 - 39.6", "39.6 - 44.0"], "data": [126558, 7373, 1029, 292, 154, 78, 34, 24, 6, 5]}, "label": "Solicitation_stringindexer", "count": 10, "min": 0.0, "max": 44.0}, {"values": {"label": ["0.0", "3.0", "1.0", "6.0", "2.0", "5.0", "4.0"], "data": [68615, 11244, 23775, 4926, 16447, 5139, 5407]}, "label": "Electric Utility_stringindexer", "count": 7, "min": "0.0", "max": "6.0"}, {"values": {"label": ["0", "2", "1"], "data": [100493, 10670, 24390]}, "label": "Purchase Type_stringindexer", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["0.0 - 326.9", "326.9 - 653.8", "653.8 - 980.7", "980.7 - 1307.6", "1307.6 - 1634.5", "1634.5 - 1961.4", "1961.4 - 2288.3", "2288.3 - 2615.2", "2615.2 - 2942.1", "2942.1 - 3269.0"], "data": [95948, 15262, 9841, 5632, 3476, 2231, 1442, 888, 512, 321]}, "label": "Date Application Received_stringindexer", "count": 10, "min": 0.0, "max": 3269.0}, {"values": {"label": ["0.0 - 285.8", "285.8 - 571.6", "571.6 - 857.4", "857.4 - 1143.2", "1143.2 - 1429.0", "1429.0 - 1714.8", "1714.8 - 2000.6", "2000.6 - 2286.4", "2286.4 - 2572.2", "2572.2 - 2858.0"], "data": [97094, 15809, 9673, 5603, 3133, 1777, 1120, 707, 378, 259]}, "label": "Date Completed_stringindexer", "count": 10, "min": 0.0, "max": 2858.0}, {"values": {"label": ["1", "0"], "data": [63142, 72411]}, "label": "Project Status_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 82.1", "82.1 - 164.2", "164.2 - 246.3", "246.3 - 328.4", "328.4 - 410.5", "410.5 - 492.6", "492.6 - 574.7", "574.7 - 656.8", "656.8 - 738.9", "738.9 - 821.0"], "data": [128141, 4049, 1585, 693, 466, 245, 145, 85, 70, 74]}, "label": "Contractor_stringindexer", "count": 10, "min": 0.0, "max": 821.0}, {"values": {"label": ["0.0 - 22.6", "22.6 - 45.2", "45.2 - 67.8", "67.8 - 90.4", "90.4 - 113.0", "113.0 - 135.6", "135.6 - 158.2", "158.2 - 180.8", "180.8 - 203.4", "203.4 - 226.0"], "data": [134155, 972, 211, 117, 32, 17, 9, 14, 10, 15]}, "label": "Primary Inverter Manufacturer_stringindexer", "count": 10, "min": 0.0, "max": 226.0}, {"values": {"label": ["0.0 - 100.8", "100.8 - 201.6", "201.6 - 302.4", "302.4 - 403.2", "403.2 - 504.0", "504.0 - 604.8", "604.8 - 705.6", "705.6 - 806.4", "806.4 - 907.2", "907.2 - 1008.0"], "data": [127294, 4389, 1751, 897, 489, 292, 190, 101, 74, 76]}, "label": "Primary Inverter Model Number_stringindexer", "count": 10, "min": 0.0, "max": 1008.0}, {"values": {"label": ["0.0 - 42.0", "42.0 - 84.0", "84.0 - 126.0", "126.0 - 168.0", "168.0 - 210.0", "210.0 - 252.0", "252.0 - 294.0", "294.0 - 336.0", "336.0 - 378.0", "378.0 - 420.0"], "data": [132468, 2082, 518, 197, 106, 59, 45, 25, 26, 27]}, "label": "Primary PV Module Manufacturer_stringindexer", "count": 10, "min": 0.0, "max": 420.0}, {"values": {"label": ["0.0 - 201.6", "201.6 - 403.2", "403.2 - 604.8", "604.8 - 806.4", "806.4 - 1008.0", "1008.0 - 1209.6", "1209.6 - 1411.2", "1411.2 - 1612.8", "1612.8 - 1814.4", "1814.4 - 2016.0"], "data": [127056, 4312, 1817, 891, 497, 318, 246, 142, 132, 142]}, "label": "PV Module Model Number_stringindexer", "count": 10, "min": 0.0, "max": 2016.0}, {"values": {"label": ["0.0 - 4062.6", "4062.6 - 8125.2", "8125.2 - 12187.8", "12187.8 - 16250.4", "16250.4 - 20313.0", "20313.0 - 24375.6", "24375.6 - 28438.2", "28438.2 - 32500.8", "32500.8 - 36563.4", "36563.4 - 40626.0"], "data": [101403, 7155, 4560, 3193, 3230, 3213, 3184, 3195, 3186, 3234]}, "label": "Project Cost_stringindexer", "count": 10, "min": 0.0, "max": 40626.0}, {"values": {"label": ["0.0 - 1681.2", "1681.2 - 3362.4", "3362.4 - 5043.6", "5043.6 - 6724.8", "6724.8 - 8406.0", "8406.0 - 10087.2", "10087.2 - 11768.4", "11768.4 - 13449.6", "13449.6 - 15130.8", "15130.8 - 16812.0"], "data": [111672, 9817, 4903, 2547, 1116, 1118, 1099, 1108, 1083, 1090]}, "label": "Incentive_stringindexer", "count": 10, "min": 0.0, "max": 16812.0}, {"values": {"label": ["0", "1"], "data": [106086, 29467]}, "label": "Remote Net Metering_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [67606, 67947]}, "label": "Affordable Solar_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [68104, 67449]}, "label": "Community Distributed Generation_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [135519, 34]}, "label": "Green Jobs Green New York Participant_stringindexer", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 251.3", "251.3 - 502.6", "502.6 - 753.9", "753.9 - 1005.2", "1005.2 - 1256.5", "1256.5 - 1507.8", "1507.8 - 1759.1", "1759.1 - 2010.4", "2010.4 - 2261.7", "2261.7 - 2513.0"], "data": [111426, 11364, 5696, 3296, 1784, 947, 519, 241, 141, 139]}, "label": "Location 1_stringindexer", "count": 10, "min": 0.0, "max": 2513.0}, {"values": {"label": ["0.0 - 8640.9", "8640.9 - 17281.8", "17281.8 - 25922.7", "25922.7 - 34563.6", "34563.6 - 43204.5", "43204.5 - 51845.4", "51845.4 - 60486.3", "60486.3 - 69127.2", "69127.2 - 77768.1", "77768.1 - 86409.0"], "data": [73346, 6935, 6910, 6907, 6874, 6952, 6900, 6881, 6901, 6947]}, "label": "index_stringindexer", "count": 10, "min": 0.0, "max": 86409.0}, {"values": {"label": ["0.0", "1.0"], "data": [84527, 51026]}, "label": "index_stringindexer_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}, {"values": {"label": ["0.0 - 8472.0", "8472.0 - 16944.0", "16944.0 - 25416.0", "25416.0 - 33888.0", "33888.0 - 42360.0", "42360.0 - 50832.0", "50832.0 - 59304.0", "59304.0 - 67776.0", "67776.0 - 76248.0", "76248.0 - 84720.0"], "data": [74548, 6822, 6769, 6747, 6811, 6802, 6789, 6724, 6759, 6782]}, "label": "Project Number_stringindexer", "count": 10, "min": 0.0, "max": 84720.0}, {"values": {"label": ["0.0", "1.0"], "data": [85203, 50350]}, "label": "Project Number_stringindexer_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}]}, "selectedFE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Zip Code", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "11941.05", "stddev": "774.15", "min": "501", "max": "15086", "missing": "0"}, "updatedLabel": "Zip Code"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Inverter Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "7.67", "stddev": "10.46", "min": "1", "max": "800", "missing": "0"}, "updatedLabel": "Total Inverter Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total PV Module Quantity", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "77.74", "stddev": "417.6", "min": "1", "max": "14800", "missing": "0"}, "updatedLabel": "Total PV Module Quantity"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total Nameplate kW DC", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "24.32", "stddev": "135.07", "min": "0.0", "max": "5799.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Total Nameplate kW DC"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Expected KWh Annual Production", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "30450.46", "stddev": "176375.93", "min": "164", "max": "6807591", "missing": "0"}, "updatedLabel": "Expected KWh Annual Produ..."}, {"transformationsData": [{"feature_label": "index_stringindexer", "threshold": 22672.742, "transformation_label": "Binarizer"}], "feature": "index_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "22116.04", "stddev": "27900.55", "min": "0.0", "max": "86409.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "index_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Reporting Period_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "126.19", "stddev": "240.58", "min": "0.0", "max": "1687.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Reporting Period_stringin..."}, {"transformationsData": [{"feature_label": "Project Number_stringindexer", "threshold": 21735.312, "transformation_label": "Binarizer"}], "feature": "Project Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "21177.26", "stddev": "27361.07", "min": "0.0", "max": "84720.0", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Project Number_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "City_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "93.09", "stddev": "206.24", "min": "0.0", "max": "1799.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "City_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "County_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "4.48", "stddev": "8.98", "min": "0.0", "max": "61.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "County_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "State_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "State_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Sector_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.03", "stddev": "0.18", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Sector_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Program Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.01", "stddev": "0.1", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Program Type_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Solicitation_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1.01", "stddev": "1.94", "min": "0.0", "max": "44.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Solicitation_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Electric Utility_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1.26", "stddev": "1.68", "min": "0.0", "max": "6.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Electric Utility_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Purchase Type_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.34", "stddev": "0.62", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Purchase Type_stringindex..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Application Received_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "278.32", "stddev": "486.09", "min": "0.0", "max": "3268.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Application Received..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Date Completed_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "270.05", "stddev": "466.22", "min": "0.0", "max": "2858.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Date Completed_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Status_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.47", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Project Status_stringinde..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Contractor_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "18.7", "stddev": "59.12", "min": "0.0", "max": "821.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Contractor_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "2.6", "stddev": "7.64", "min": "0.0", "max": "227.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Manufact..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary Inverter Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "24.0", "stddev": "73.71", "min": "0.0", "max": "1008.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary Inverter Model Nu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Primary PV Module Manufacturer_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "5.67", "stddev": "18.85", "min": "0.0", "max": "420.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Primary PV Module Manufac..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "PV Module Model Number_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "57.12", "stddev": "182.82", "min": "0.0", "max": "2016.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "PV Module Model Number_st..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Project Cost_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "5548.85", "stddev": "10465.71", "min": "0.0", "max": "40626.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Project Cost_stringindexe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Incentive_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "1161.11", "stddev": "2763.79", "min": "0.0", "max": "16812.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Incentive_stringindexer"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Remote Net Metering_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.25", "stddev": "0.43", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Remote Net Metering_strin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Affordable Solar_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Affordable Solar_stringin..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Community Distributed Generation_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Community Distributed Gen..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Green Jobs Green New York Participant_stringindexer", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "135553", "mean": "0.0", "stddev": "0.02", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Green Jobs Green New York..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Location 1_stringindexer", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "135553", "mean": "143.55", "stddev": "298.84", "min": "0.0", "max": "2515.0", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Location 1_stringindexer"}], "autoFE_flag": false}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 9}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 15}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 24}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 25}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 28}, {"inherited": true, "checked": true, "field": "index_stringindexer_binarizer", "alias": "index_stringindexer_binarizer", "type": "real", "position": 29}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer_binarizer", "alias": "Project Number_stringindexer_binarizer", "type": "real", "position": 30}], "actual_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer", "alias": "Project Number_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 24}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 25}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 28}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 29}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 30}], "selected_schema": [], "created_at": "2024-02-19 04:25:16.569000", "originalcount": 169442, "samplecount": 5000, "samplefile": "/FileStore/platform/sampleData/65d2d858b0c78b45eb628da9/part-00000-7c7cc3e0-6138-4d0c-b7ba-db55a8791faa-c000.csv", "joinSchema": [], "updated_at": "2024-02-19 04:27:45.818000", "__v": 0, "datacache": 0, "sampleData": [{"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 68580.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 812.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 824.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 29533.0, "Incentive_stringindexer": 2889.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12533, "Total Inverter Quantity": 33, "Total PV Module Quantity": 8316, "Total Nameplate kW DC": 2827.0, "Expected KWh Annual Production": 3318962, "index_stringindexer": 46063.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9831.0, "City_stringindexer": 43.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 1, "Solicitation_stringindexer": 9.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 661.0, "Primary Inverter Manufacturer_stringindexer": 35.0, "Primary Inverter Model Number_stringindexer": 412.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 866.0, "Project Cost_stringindexer": 17990.0, "Incentive_stringindexer": 16293.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 39.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 62502.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 43128.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 788.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 1987.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12022, "Total Inverter Quantity": 41, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15738, "index_stringindexer": 5443.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17009.0, "City_stringindexer": 811.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 4.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 18.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 17042.0, "Incentive_stringindexer": 1316.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1028.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 131.0, "Reporting Period_stringindexer": 132.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13483, "Total Inverter Quantity": 5, "Total PV Module Quantity": 616, "Total Nameplate kW DC": 200.0, "Expected KWh Annual Production": 235003, "index_stringindexer": 55846.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38290.0, "City_stringindexer": 1464.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 29.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 82.0, "Primary PV Module Manufacturer_stringindexer": 66.0, "PV Module Model Number_stringindexer": 480.0, "Project Cost_stringindexer": 25764.0, "Incentive_stringindexer": 203.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1682.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 68635.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62840.0, "City_stringindexer": 474.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8519.0, "Incentive_stringindexer": 365.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 605.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 165.0, "Reporting Period_stringindexer": 167.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12033, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8657, "index_stringindexer": 65237.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15674.0, "City_stringindexer": 1449.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 924.0, "Incentive_stringindexer": 3263.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1854.0}, {"Zip Code": 10566, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5094, "index_stringindexer": 19939.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60908.0, "City_stringindexer": 97.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 49.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 334.0, "Project Cost_stringindexer": 36967.0, "Incentive_stringindexer": 451.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 102.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13558, "index_stringindexer": 32361.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16628.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 29.0, "PV Module Model Number_stringindexer": 228.0, "Project Cost_stringindexer": 11368.0, "Incentive_stringindexer": 413.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 11710, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7043, "index_stringindexer": 39246.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73778.0, "City_stringindexer": 126.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2596.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 164.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 36.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 137.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 6.0, "Reporting Period_stringindexer": 7.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14580, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12889, "index_stringindexer": 79307.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22576.0, "City_stringindexer": 176.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 418.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 19948.0, "Incentive_stringindexer": 712.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 197.0}, {"Zip Code": 10710, "Total Inverter Quantity": 2, "Total PV Module Quantity": 50, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 18781, "index_stringindexer": 53655.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20937.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 446.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 27.0, "Project Cost_stringindexer": 36897.0, "Incentive_stringindexer": 838.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 75.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 83.0, "Reporting Period_stringindexer": 84.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10469, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 28435.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81798.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 4457.0, "Incentive_stringindexer": 208.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 178.0}, {"Zip Code": 12446, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5071, "index_stringindexer": 77033.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13635.0, "City_stringindexer": 236.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 7578.0, "Incentive_stringindexer": 55.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 270.0}, {"Zip Code": 14224, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 37449.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24238.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1355.0, "Incentive_stringindexer": 1902.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 438.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 511.0, "Reporting Period_stringindexer": 512.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14214, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5282, "index_stringindexer": 48178.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39928.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 1110.0, "Incentive_stringindexer": 277.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 592.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 595.0, "Reporting Period_stringindexer": 586.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12581, "Total Inverter Quantity": 4, "Total PV Module Quantity": 141, "Total Nameplate kW DC": 42.0, "Expected KWh Annual Production": 49653, "index_stringindexer": 81293.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39539.0, "City_stringindexer": 434.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 723.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 22710.0, "Incentive_stringindexer": 6233.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 508.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 503.0, "Reporting Period_stringindexer": 507.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5670, "index_stringindexer": 22535.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27712.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 539.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 2617.0, "Incentive_stringindexer": 231.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 267.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 27.0, "Reporting Period_stringindexer": 28.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7149, "index_stringindexer": 57473.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16624.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 274.0, "Incentive_stringindexer": 448.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 347.0, "Reporting Period_stringindexer": 346.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6198, "index_stringindexer": 76350.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34181.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 1970.0, "Incentive_stringindexer": 414.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10921, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "index_stringindexer": 18357.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28789.0, "City_stringindexer": 269.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 2302.0, "Incentive_stringindexer": 55.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 306.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 312.0, "Reporting Period_stringindexer": 313.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12477, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12325, "index_stringindexer": 48721.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51878.0, "City_stringindexer": 46.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 340.0, "Project Cost_stringindexer": 5825.0, "Incentive_stringindexer": 453.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 43.0}, {"Zip Code": 14075, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4684, "index_stringindexer": 65031.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47449.0, "City_stringindexer": 226.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 2425.0, "Incentive_stringindexer": 2349.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 265.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 161.0, "Reporting Period_stringindexer": 162.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10303, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6973, "index_stringindexer": 59384.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7587.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 123.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 2720.0, "Incentive_stringindexer": 386.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 100.0}, {"Zip Code": 11377, "Total Inverter Quantity": 1, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 2723, "index_stringindexer": 30645.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9570.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 29383.0, "Incentive_stringindexer": 270.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1103.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 658.0, "Reporting Period_stringindexer": 669.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 35.0, "Reporting Period_stringindexer": 35.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8170, "index_stringindexer": 16290.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 40998.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 164.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 33247.0, "Incentive_stringindexer": 1023.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 106.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 98.0, "Reporting Period_stringindexer": 99.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10954, "Total Inverter Quantity": 50, "Total PV Module Quantity": 50, "Total Nameplate kW DC": 14.0, "Expected KWh Annual Production": 17021, "index_stringindexer": 77955.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28600.0, "City_stringindexer": 111.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 605.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1014.0, "Incentive_stringindexer": 3115.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 119.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 283.0, "Reporting Period_stringindexer": 285.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 177.0, "Reporting Period_stringindexer": 180.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11566, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13382, "index_stringindexer": 62818.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 30107.0, "City_stringindexer": 79.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 586.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 81.0}, {"Zip Code": 10804, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6485, "index_stringindexer": 24734.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20035.0, "City_stringindexer": 1503.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 35.0, "PV Module Model Number_stringindexer": 52.0, "Project Cost_stringindexer": 35096.0, "Incentive_stringindexer": 5973.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1861.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 342.0, "Reporting Period_stringindexer": 344.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 6, "Total PV Module Quantity": 6, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 2113, "index_stringindexer": 83109.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3498.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 617.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 311.0, "Primary PV Module Manufacturer_stringindexer": 85.0, "PV Module Model Number_stringindexer": 572.0, "Project Cost_stringindexer": 39384.0, "Incentive_stringindexer": 590.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11433, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3680, "index_stringindexer": 63149.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8016.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 8054.0, "Incentive_stringindexer": 1415.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 315.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 275.0, "Reporting Period_stringindexer": 274.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13617, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 16111, "index_stringindexer": 25796.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50930.0, "City_stringindexer": 225.0, "County_stringindexer": 28.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 86.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 1990.0, "Project Cost_stringindexer": 15409.0, "Incentive_stringindexer": 1034.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 257.0}, {"Zip Code": 10309, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3486, "index_stringindexer": 63541.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42561.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 22336.0, "Incentive_stringindexer": 243.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 377.0, "Reporting Period_stringindexer": 380.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 15, "Total PV Module Quantity": 3096, "Total Nameplate kW DC": 1068.0, "Expected KWh Annual Production": 1253802, "index_stringindexer": 46986.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 48504.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 1, "Solicitation_stringindexer": 9.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 746.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 39.0, "Primary Inverter Model Number_stringindexer": 433.0, "Primary PV Module Manufacturer_stringindexer": 64.0, "PV Module Model Number_stringindexer": 1388.0, "Project Cost_stringindexer": 27409.0, "Incentive_stringindexer": 10800.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11433, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9039, "index_stringindexer": 68992.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8389.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 5436.0, "Incentive_stringindexer": 423.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 315.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 177.0, "Reporting Period_stringindexer": 180.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 917.0, "Reporting Period_stringindexer": 932.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 366.0, "Reporting Period_stringindexer": 367.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14464, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8593, "index_stringindexer": 83862.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82289.0, "City_stringindexer": 628.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 149.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 909.0, "Incentive_stringindexer": 628.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 790.0}, {"Zip Code": 11203, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4196, "index_stringindexer": 86136.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3769.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 40246.0, "Incentive_stringindexer": 256.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 199.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 311.0, "Reporting Period_stringindexer": 317.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 42.0, "Reporting Period_stringindexer": 43.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11356, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 76548.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58410.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 24768.0, "Incentive_stringindexer": 2810.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 733.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 682.0, "Reporting Period_stringindexer": 681.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12110, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "index_stringindexer": 43227.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 75997.0, "City_stringindexer": 92.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 901.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 19701.0, "Incentive_stringindexer": 82.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 96.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 101.0, "Reporting Period_stringindexer": 102.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 296.0, "Reporting Period_stringindexer": 296.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 1, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10212, "index_stringindexer": 72180.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58517.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 50.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 852.0, "Incentive_stringindexer": 1315.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 539.0, "Reporting Period_stringindexer": 533.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 444.0, "Reporting Period_stringindexer": 455.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14772, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9156, "index_stringindexer": 29956.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62217.0, "City_stringindexer": 946.0, "County_stringindexer": 52.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 174.0, "Incentive_stringindexer": 139.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1178.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14420, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 73130.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6796.0, "City_stringindexer": 339.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 963.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 411.0, "Project Cost_stringindexer": 148.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 384.0}, {"Zip Code": 10960, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6468, "index_stringindexer": 74276.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64473.0, "City_stringindexer": 312.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 294.0, "Incentive_stringindexer": 4630.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 360.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 294.0, "Reporting Period_stringindexer": 294.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11414, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 3827.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 48752.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 30290.0, "Incentive_stringindexer": 354.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 218.0}, {"Zip Code": 10502, "Total Inverter Quantity": 33, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11234, "index_stringindexer": 79616.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55863.0, "City_stringindexer": 404.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 271.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 477.0, "Incentive_stringindexer": 763.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 470.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 421.0, "Reporting Period_stringindexer": 424.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 325.0, "Reporting Period_stringindexer": 323.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14817, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "index_stringindexer": 67050.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39625.0, "City_stringindexer": 327.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 44.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 168.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 3.0, "Project Cost_stringindexer": 3731.0, "Incentive_stringindexer": 150.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 387.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 16507.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77413.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 38030.0, "Incentive_stringindexer": 30.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9003, "index_stringindexer": 83961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10088.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 89.0, "Incentive_stringindexer": 2426.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13763, "index_stringindexer": 64153.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78014.0, "City_stringindexer": 62.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 403.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 288.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 79.0}, {"Zip Code": 10309, "Total Inverter Quantity": 27, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11410, "index_stringindexer": 38540.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7868.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 461.0, "Date Completed_stringindexer": 603.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 37.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 20566.0, "Incentive_stringindexer": 1367.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 244.0, "Reporting Period_stringindexer": 242.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10701, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4578, "index_stringindexer": 79485.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6872.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 7.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 2062.0, "Incentive_stringindexer": 8.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 113.0}, {"Zip Code": 12432, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5374, "index_stringindexer": 17316.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34243.0, "City_stringindexer": 105.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 46.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 112.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 7461.0, "Incentive_stringindexer": 732.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1964.0}, {"Zip Code": 10305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5353, "index_stringindexer": 35859.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6218.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 5789.0, "Incentive_stringindexer": 2885.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 37.0, "Reporting Period_stringindexer": 38.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5423, "index_stringindexer": 45143.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55099.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 799.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3325.0, "Incentive_stringindexer": 1693.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 970.0, "Reporting Period_stringindexer": 959.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11692, "Total Inverter Quantity": 3, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 20.0, "Expected KWh Annual Production": 24510, "index_stringindexer": 82082.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 49510.0, "City_stringindexer": 952.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 17.0, "Primary Inverter Model Number_stringindexer": 211.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 280.0, "Project Cost_stringindexer": 9069.0, "Incentive_stringindexer": 5307.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1184.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 194.0, "Reporting Period_stringindexer": 202.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10465, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 29426.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6325.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 1830.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8403.0, "Incentive_stringindexer": 208.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 158.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 301.0, "Reporting Period_stringindexer": 302.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12550, "Total Inverter Quantity": 2, "Total PV Module Quantity": 39, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 11903, "index_stringindexer": 32657.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38257.0, "City_stringindexer": 19.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 83.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 9.0, "Project Cost_stringindexer": 1325.0, "Incentive_stringindexer": 3124.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 11.0}, {"Zip Code": 12309, "Total Inverter Quantity": 1, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13617, "index_stringindexer": 60566.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31145.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 725.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 21945.0, "Incentive_stringindexer": 3310.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 85.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 337.0, "Reporting Period_stringindexer": 339.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 196.0, "Reporting Period_stringindexer": 197.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12768, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "index_stringindexer": 65057.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84477.0, "City_stringindexer": 1222.0, "County_stringindexer": 30.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 415.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 27090.0, "Incentive_stringindexer": 41.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1453.0}, {"Zip Code": 11218, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3932, "index_stringindexer": 22311.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 70927.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 344.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 4507.0, "Incentive_stringindexer": 480.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 277.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 197.0, "Reporting Period_stringindexer": 201.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11412, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6585, "index_stringindexer": 51056.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67716.0, "City_stringindexer": 187.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 6130.0, "Incentive_stringindexer": 259.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 215.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 601.0, "Reporting Period_stringindexer": 605.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11621, "index_stringindexer": 28224.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21010.0, "City_stringindexer": 489.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 321.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 583.0, "Incentive_stringindexer": 1574.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 580.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 180.0, "Reporting Period_stringindexer": 183.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14622, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5728, "index_stringindexer": 80359.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18061.0, "City_stringindexer": 26.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 67.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 4640.0, "Incentive_stringindexer": 682.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 901.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 490.0, "Reporting Period_stringindexer": 500.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11419, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 75196.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82716.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 26560.0, "Incentive_stringindexer": 30.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1193.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8504, "index_stringindexer": 36425.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9306.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 37807.0, "Incentive_stringindexer": 239.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12169, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10917, "index_stringindexer": 75458.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60160.0, "City_stringindexer": 468.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 15.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 334.0, "Project Cost_stringindexer": 26038.0, "Incentive_stringindexer": 747.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1162.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1064.0, "Reporting Period_stringindexer": 1044.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14075, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9367, "index_stringindexer": 43572.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84093.0, "City_stringindexer": 226.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 15886.0, "Incentive_stringindexer": 831.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 265.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 21058.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17182.0, "City_stringindexer": 1665.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 42.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 1446.0, "Incentive_stringindexer": 1522.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2439.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12842, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6909, "index_stringindexer": 16144.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37142.0, "City_stringindexer": 938.0, "County_stringindexer": 42.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 9962.0, "Incentive_stringindexer": 954.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1157.0}, {"Zip Code": 12831, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6574, "index_stringindexer": 73294.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24103.0, "City_stringindexer": 1666.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 190.0, "Incentive_stringindexer": 437.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2017.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 682.0, "Reporting Period_stringindexer": 681.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12304, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 60606.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3330.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 348.0, "Incentive_stringindexer": 2222.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 106.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 109.0, "Reporting Period_stringindexer": 110.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 19.0, "Reporting Period_stringindexer": 20.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 537.0, "Reporting Period_stringindexer": 530.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 301.0, "Reporting Period_stringindexer": 302.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12302, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5447, "index_stringindexer": 6698.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21438.0, "City_stringindexer": 127.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 206.0, "Incentive_stringindexer": 1939.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 139.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 249.0, "Reporting Period_stringindexer": 249.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6691, "index_stringindexer": 83885.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42265.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 266.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 236.0, "Incentive_stringindexer": 634.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 12148, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 13484.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51341.0, "City_stringindexer": 337.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 13568.0, "Incentive_stringindexer": 608.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 421.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 418.0, "Reporting Period_stringindexer": 417.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11692, "Total Inverter Quantity": 3, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 20.0, "Expected KWh Annual Production": 24510, "index_stringindexer": 12207.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 26531.0, "City_stringindexer": 952.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 17.0, "Primary Inverter Model Number_stringindexer": 211.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 280.0, "Project Cost_stringindexer": 9069.0, "Incentive_stringindexer": 5307.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1184.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10510, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10072, "index_stringindexer": 42417.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78395.0, "City_stringindexer": 1687.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 321.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 111.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 22663.0, "Incentive_stringindexer": 3727.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2506.0}, {"Zip Code": 12203, "Total Inverter Quantity": 3, "Total PV Module Quantity": 606, "Total Nameplate kW DC": 199.0, "Expected KWh Annual Production": 234745, "index_stringindexer": 70881.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11515.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 478.0, "Primary Inverter Manufacturer_stringindexer": 35.0, "Primary Inverter Model Number_stringindexer": 481.0, "Primary PV Module Manufacturer_stringindexer": 218.0, "PV Module Model Number_stringindexer": 935.0, "Project Cost_stringindexer": 6016.0, "Incentive_stringindexer": 4288.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 107.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 449.0, "Reporting Period_stringindexer": 446.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 606.0, "Reporting Period_stringindexer": 612.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 19.0, "Reporting Period_stringindexer": 20.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11225, "Total Inverter Quantity": 2, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10459, "index_stringindexer": 41403.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73956.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 791.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 55.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 468.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 10952.0, "Incentive_stringindexer": 1072.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 395.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 96.0, "Reporting Period_stringindexer": 97.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 12.0, "Reporting Period_stringindexer": 13.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 37.0, "Reporting Period_stringindexer": 38.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 330.0, "Reporting Period_stringindexer": 335.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14105, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8804, "index_stringindexer": 21179.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64165.0, "City_stringindexer": 658.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 3882.0, "Incentive_stringindexer": 509.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 823.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10990, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4766, "index_stringindexer": 7388.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62379.0, "City_stringindexer": 41.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 231.0, "Incentive_stringindexer": 861.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 37.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 405.0, "Reporting Period_stringindexer": 409.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12534, "Total Inverter Quantity": 2, "Total PV Module Quantity": 37, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13030, "index_stringindexer": 51875.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62089.0, "City_stringindexer": 106.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 68.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 5295.0, "Incentive_stringindexer": 4827.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 112.0}, {"Zip Code": 10469, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 28975.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64945.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 4748.0, "Incentive_stringindexer": 260.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 178.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 289.0, "Reporting Period_stringindexer": 289.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10956, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6468, "index_stringindexer": 16849.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62154.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 778.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 294.0, "Incentive_stringindexer": 2492.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 10952, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9702, "index_stringindexer": 76253.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12256.0, "City_stringindexer": 221.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 32851.0, "Incentive_stringindexer": 3543.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 253.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 291.0, "Reporting Period_stringindexer": 293.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 13, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4425, "index_stringindexer": 23185.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 54043.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1607.0, "Incentive_stringindexer": 1647.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 10314, "Total Inverter Quantity": 23, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9314, "index_stringindexer": 45126.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78965.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 13924.0, "Incentive_stringindexer": 598.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12831, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 80699.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 49219.0, "City_stringindexer": 112.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 271.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 4622.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 117.0}, {"Zip Code": 14201, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5282, "index_stringindexer": 53044.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42133.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 1110.0, "Incentive_stringindexer": 277.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 525.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 46.0, "Reporting Period_stringindexer": 47.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 23, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7560, "index_stringindexer": 40003.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39304.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 36005.0, "Incentive_stringindexer": 718.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 10464, "Total Inverter Quantity": 9, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3455, "index_stringindexer": 75864.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7755.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 3707.0, "Incentive_stringindexer": 884.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 805.0}, {"Zip Code": 10472, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3287, "index_stringindexer": 42218.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 83008.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 199.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 69.0, "Project Cost_stringindexer": 33225.0, "Incentive_stringindexer": 2701.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 615.0}, {"Zip Code": 10956, "Total Inverter Quantity": 51, "Total PV Module Quantity": 51, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20654, "index_stringindexer": 76631.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39180.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 24308.0, "Incentive_stringindexer": 15186.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 186.0, "Reporting Period_stringindexer": 186.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "index_stringindexer": 74950.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82349.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 21.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 28035.0, "Incentive_stringindexer": 246.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5341, "index_stringindexer": 24085.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 83293.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 65.0, "PV Module Model Number_stringindexer": 465.0, "Project Cost_stringindexer": 32895.0, "Incentive_stringindexer": 1314.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 10940, "Total Inverter Quantity": 23, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13364, "index_stringindexer": 20587.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76713.0, "City_stringindexer": 9.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 461.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 18590.0, "Incentive_stringindexer": 3471.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 8.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 7.0, "Reporting Period_stringindexer": 8.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7489, "index_stringindexer": 56186.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11619.0, "City_stringindexer": 270.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 629.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 91.0, "Project Cost_stringindexer": 20902.0, "Incentive_stringindexer": 2535.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 304.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14720, "index_stringindexer": 19810.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67407.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1812.0, "Incentive_stringindexer": 6079.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 110.0, "Reporting Period_stringindexer": 111.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10992, "Total Inverter Quantity": 22, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8909, "index_stringindexer": 17972.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46795.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 4452.0, "Incentive_stringindexer": 4225.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 70961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46586.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3419.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 14220, "Total Inverter Quantity": 5, "Total PV Module Quantity": 600, "Total Nameplate kW DC": 195.0, "Expected KWh Annual Production": 228899, "index_stringindexer": 1811.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 25126.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 15.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 292.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 466.0, "Project Cost_stringindexer": 56.0, "Incentive_stringindexer": 1395.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 674.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 325.0, "Reporting Period_stringindexer": 323.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 168.0, "Reporting Period_stringindexer": 169.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1021.0, "Reporting Period_stringindexer": 1040.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 34346.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50122.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 693.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 4017.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14551, "Total Inverter Quantity": 6, "Total PV Module Quantity": 6, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 2303, "index_stringindexer": 31441.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17637.0, "City_stringindexer": 565.0, "County_stringindexer": 39.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 18.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 27210.0, "Incentive_stringindexer": 2835.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 699.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 645.0, "Reporting Period_stringindexer": 640.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 283.0, "Reporting Period_stringindexer": 285.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 332.0, "Reporting Period_stringindexer": 332.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1365.0, "Reporting Period_stringindexer": 1399.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 34822.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28077.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 36847.0, "Incentive_stringindexer": 1374.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0}, {"Zip Code": 11436, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7695, "index_stringindexer": 78971.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64588.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 2455.0, "Incentive_stringindexer": 304.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 396.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 453.0, "Reporting Period_stringindexer": 454.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 39.0, "Reporting Period_stringindexer": 40.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 168.0, "Reporting Period_stringindexer": 169.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10566, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 71517.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 44731.0, "City_stringindexer": 97.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 403.0, "Date Completed_stringindexer": 799.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 348.0, "Incentive_stringindexer": 1992.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 102.0}, {"Zip Code": 13676, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12490, "index_stringindexer": 76140.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16311.0, "City_stringindexer": 136.0, "County_stringindexer": 28.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 996.0, "Incentive_stringindexer": 3696.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 149.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 460.0, "Reporting Period_stringindexer": 464.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11210, "Total Inverter Quantity": 32, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12959, "index_stringindexer": 83272.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36114.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 29981.0, "Incentive_stringindexer": 1234.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 240.0}, {"Zip Code": 10919, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 63331.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60021.0, "City_stringindexer": 645.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 180.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 700.0, "Incentive_stringindexer": 1011.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 813.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8393, "index_stringindexer": 70914.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12680.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 31859.0, "Incentive_stringindexer": 191.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 12075, "Total Inverter Quantity": 8, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3146, "index_stringindexer": 5651.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28421.0, "City_stringindexer": 266.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 13.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 829.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 973.0, "Project Cost_stringindexer": 4448.0, "Incentive_stringindexer": 2302.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 300.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 504.0, "Reporting Period_stringindexer": 504.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 757.0, "Reporting Period_stringindexer": 761.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10930, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6867, "index_stringindexer": 32913.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51872.0, "City_stringindexer": 1408.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 35.0, "PV Module Model Number_stringindexer": 52.0, "Project Cost_stringindexer": 37555.0, "Incentive_stringindexer": 2086.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1678.0}, {"Zip Code": 10306, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 26409.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16672.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 20994.0, "Incentive_stringindexer": 1511.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 10977, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8510, "index_stringindexer": 54493.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28640.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 957.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 239.0, "Incentive_stringindexer": 130.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 8101.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 53691.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 8440.0, "Incentive_stringindexer": 179.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 90.0, "Reporting Period_stringindexer": 91.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11416, "Total Inverter Quantity": 22, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7489, "index_stringindexer": 30506.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62406.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 25666.0, "Incentive_stringindexer": 532.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1031.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9684, "index_stringindexer": 32316.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58318.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 205.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8940.0, "Incentive_stringindexer": 92.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12309, "Total Inverter Quantity": 34, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11574, "index_stringindexer": 3052.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18117.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 486.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 85.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 633.0, "Reporting Period_stringindexer": 631.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14228, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10036, "index_stringindexer": 27049.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37406.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 146.0, "Incentive_stringindexer": 2911.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 737.0}, {"Zip Code": 10312, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6075, "index_stringindexer": 40432.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10531.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 32002.0, "Incentive_stringindexer": 200.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 161.0, "Reporting Period_stringindexer": 162.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5634, "index_stringindexer": 74195.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 53995.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 452.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 2337.0, "Incentive_stringindexer": 64.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 504.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 430.0, "Reporting Period_stringindexer": 427.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 545.0, "Reporting Period_stringindexer": 547.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 790.0, "Reporting Period_stringindexer": 782.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9033, "index_stringindexer": 34293.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 19472.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 1018.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 208.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 1815.0, "Incentive_stringindexer": 735.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8522, "index_stringindexer": 32793.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84063.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 27126.0, "Incentive_stringindexer": 737.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14609, "Total Inverter Quantity": 2, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 19063, "index_stringindexer": 11218.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76383.0, "City_stringindexer": 26.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2554.0, "Date Completed_stringindexer": 791.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 40.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 56.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 69.0, "Project Cost_stringindexer": 8451.0, "Incentive_stringindexer": 6240.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 553.0}, {"Zip Code": 12401, "Total Inverter Quantity": 1, "Total PV Module Quantity": 43, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14638, "index_stringindexer": 49142.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15226.0, "City_stringindexer": 34.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 9288.0, "Incentive_stringindexer": 13241.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 30.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 136.0, "Reporting Period_stringindexer": 137.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5423, "index_stringindexer": 38330.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21852.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 29550.0, "Incentive_stringindexer": 2153.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 705.0}, {"Zip Code": 14304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9033, "index_stringindexer": 22996.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81749.0, "City_stringindexer": 299.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 9086.0, "Incentive_stringindexer": 2092.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 512.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10994, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "index_stringindexer": 27427.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59495.0, "City_stringindexer": 264.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 444.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 7415.0, "Incentive_stringindexer": 662.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 298.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 305.0, "Reporting Period_stringindexer": 306.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10520, "Total Inverter Quantity": 2, "Total PV Module Quantity": 70, "Total Nameplate kW DC": 23.0, "Expected KWh Annual Production": 27527, "index_stringindexer": 20440.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 35005.0, "City_stringindexer": 1303.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 9792.0, "Incentive_stringindexer": 3254.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1633.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 80.0, "Reporting Period_stringindexer": 81.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7248, "index_stringindexer": 39872.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 61119.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 297.0, "Project Cost_stringindexer": 21928.0, "Incentive_stringindexer": 6499.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 92.0, "Reporting Period_stringindexer": 93.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13114, "Total Inverter Quantity": 2, "Total PV Module Quantity": 54, "Total Nameplate kW DC": 15.0, "Expected KWh Annual Production": 17748, "index_stringindexer": 52770.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73618.0, "City_stringindexer": 638.0, "County_stringindexer": 33.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2778.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 9826.0, "Incentive_stringindexer": 3134.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 827.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 26.0, "Reporting Period_stringindexer": 27.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11366, "Total Inverter Quantity": 2, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 78366.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51159.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 604.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 101.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 29.0, "Project Cost_stringindexer": 568.0, "Incentive_stringindexer": 354.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 716.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 442.0, "Reporting Period_stringindexer": 444.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 238.0, "Reporting Period_stringindexer": 240.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 11.0, "Reporting Period_stringindexer": 12.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12182, "Total Inverter Quantity": 38, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12936, "index_stringindexer": 16629.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32628.0, "City_stringindexer": 17.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 695.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 509.0, "Incentive_stringindexer": 3056.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 231.0}, {"Zip Code": 12856, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14790, "index_stringindexer": 75320.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59913.0, "City_stringindexer": 1671.0, "County_stringindexer": 25.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 539.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 86.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 23195.0, "Incentive_stringindexer": 134.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2014.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 216.0, "Reporting Period_stringindexer": 216.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11412, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 83992.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37505.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 10481.0, "Incentive_stringindexer": 2154.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 273.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 63.0, "Reporting Period_stringindexer": 64.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 67489.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 888.0, "City_stringindexer": 474.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 771.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 1446.0, "Incentive_stringindexer": 25.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 605.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 88.0, "Reporting Period_stringindexer": 89.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14516, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7160, "index_stringindexer": 62717.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27003.0, "City_stringindexer": 849.0, "County_stringindexer": 39.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 21941.0, "Incentive_stringindexer": 818.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1082.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6444, "index_stringindexer": 12330.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46014.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 169.0, "Project Cost_stringindexer": 29492.0, "Incentive_stringindexer": 2847.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 888.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 260.0, "Reporting Period_stringindexer": 260.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10466, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 50843.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42925.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 269.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 313.0, "Project Cost_stringindexer": 2418.0, "Incentive_stringindexer": 47.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 237.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "index_stringindexer": 15073.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8966.0, "City_stringindexer": 88.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 1018.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 47.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 37.0, "PV Module Model Number_stringindexer": 134.0, "Project Cost_stringindexer": 25862.0, "Incentive_stringindexer": 2680.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 91.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 602.0, "Reporting Period_stringindexer": 598.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3169, "index_stringindexer": 33136.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38454.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 29470.0, "Incentive_stringindexer": 117.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7888, "index_stringindexer": 66713.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 45431.0, "City_stringindexer": 394.0, "County_stringindexer": 42.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 478.0, "Incentive_stringindexer": 227.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 469.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11214, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4860, "index_stringindexer": 32144.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77196.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 31960.0, "Incentive_stringindexer": 165.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 552.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 126.0, "Reporting Period_stringindexer": 126.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10846, "index_stringindexer": 84968.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81525.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 5921.0, "Incentive_stringindexer": 4814.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 39.0, "Reporting Period_stringindexer": 40.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11377, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7078, "index_stringindexer": 12982.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52263.0, "City_stringindexer": 471.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 179.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 331.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 279.0, "Incentive_stringindexer": 459.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 575.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 449.0, "Reporting Period_stringindexer": 446.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 419.0, "Reporting Period_stringindexer": 414.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14218, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 35887.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51993.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1054.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1023.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 514.0, "Reporting Period_stringindexer": 522.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1436.0, "Reporting Period_stringindexer": 1510.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 279.0, "Reporting Period_stringindexer": 280.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11413, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 82032.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3853.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 1867.0, "Incentive_stringindexer": 142.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 161.0}, {"Zip Code": 11411, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5071, "index_stringindexer": 47569.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 35702.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 31419.0, "Incentive_stringindexer": 225.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 607.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 407.0, "Reporting Period_stringindexer": 408.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11214, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 3104.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 65202.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 529.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 545.0, "Project Cost_stringindexer": 23971.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 552.0}, {"Zip Code": 12508, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8452, "index_stringindexer": 8851.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 19496.0, "City_stringindexer": 82.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 725.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 2863.0, "Incentive_stringindexer": 25.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 83.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12430, "Total Inverter Quantity": 30, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "index_stringindexer": 42750.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55387.0, "City_stringindexer": 1008.0, "County_stringindexer": 50.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 381.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 272.0, "Project Cost_stringindexer": 43.0, "Incentive_stringindexer": 272.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1290.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1032.0, "Reporting Period_stringindexer": 1038.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 6194.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22722.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 384.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 12.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 11472.0, "Incentive_stringindexer": 663.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1208.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6339, "index_stringindexer": 11477.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17296.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 33.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 116.0, "Incentive_stringindexer": 50.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 12.0, "Reporting Period_stringindexer": 13.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 327.0, "Reporting Period_stringindexer": 327.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 339.0, "Reporting Period_stringindexer": 340.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10461, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9391, "index_stringindexer": 52209.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6275.0, "City_stringindexer": 5.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 27.0, "Project Cost_stringindexer": 38640.0, "Incentive_stringindexer": 319.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 291.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12543, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9860, "index_stringindexer": 54067.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 1016.0, "City_stringindexer": 393.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 679.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 303.0, "Incentive_stringindexer": 457.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 461.0}, {"Zip Code": 12023, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11410, "index_stringindexer": 81620.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59803.0, "City_stringindexer": 409.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 796.0, "Project Cost_stringindexer": 17278.0, "Incentive_stringindexer": 6648.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 481.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 331.0, "Reporting Period_stringindexer": 329.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12569, "Total Inverter Quantity": 2, "Total PV Module Quantity": 62, "Total Nameplate kW DC": 19.0, "Expected KWh Annual Production": 23289, "index_stringindexer": 83554.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59149.0, "City_stringindexer": 177.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 701.0, "Date Completed_stringindexer": 768.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 103.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 262.0, "Project Cost_stringindexer": 118.0, "Incentive_stringindexer": 7600.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 200.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10212, "index_stringindexer": 43421.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 68475.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 17005.0, "Incentive_stringindexer": 515.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0}, {"Zip Code": 10707, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 18229.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36888.0, "City_stringindexer": 500.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 4760.0, "Incentive_stringindexer": 47.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 593.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 499.0, "Reporting Period_stringindexer": 494.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 738.0, "Reporting Period_stringindexer": 736.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11432, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5447, "index_stringindexer": 36150.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8550.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 67.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 11293.0, "Incentive_stringindexer": 155.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 301.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10567, "Total Inverter Quantity": 9, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3803, "index_stringindexer": 39333.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33353.0, "City_stringindexer": 91.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 1109.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 7567.0, "Incentive_stringindexer": 504.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 95.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10604, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8698, "index_stringindexer": 71670.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78381.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 12632.0, "Incentive_stringindexer": 733.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1049.0}, {"Zip Code": 10977, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6127, "index_stringindexer": 17599.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62758.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 286.0, "Incentive_stringindexer": 3126.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 92.0, "Reporting Period_stringindexer": 93.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11436, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 68783.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38848.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 383.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 545.0, "Project Cost_stringindexer": 21101.0, "Incentive_stringindexer": 929.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 396.0}, {"Zip Code": 13035, "Total Inverter Quantity": 2, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 15.0, "Expected KWh Annual Production": 18488, "index_stringindexer": 15271.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67083.0, "City_stringindexer": 292.0, "County_stringindexer": 38.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 668.0, "Date Completed_stringindexer": 487.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 317.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 411.0, "Project Cost_stringindexer": 35990.0, "Incentive_stringindexer": 2939.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 331.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 339.0, "Reporting Period_stringindexer": 340.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11435, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6075, "index_stringindexer": 54824.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42249.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 861.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 1469.0, "Incentive_stringindexer": 680.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 645.0}, {"Zip Code": 11355, "Total Inverter Quantity": 13, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5112, "index_stringindexer": 70074.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78480.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 9746.0, "Incentive_stringindexer": 561.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 574.0}, {"Zip Code": 10977, "Total Inverter Quantity": 42, "Total PV Module Quantity": 42, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14297, "index_stringindexer": 3326.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36570.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1105.0, "Incentive_stringindexer": 1201.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 270.0, "Reporting Period_stringindexer": 272.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12033, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5787, "index_stringindexer": 28131.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24471.0, "City_stringindexer": 301.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 215.0, "Incentive_stringindexer": 1279.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 338.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 605.0, "Reporting Period_stringindexer": 599.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10956, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 29389.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62641.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 384.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 380.0, "Incentive_stringindexer": 2254.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 13054, "Total Inverter Quantity": 35, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13558, "index_stringindexer": 80758.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81168.0, "City_stringindexer": 834.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 178.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 294.0, "Primary PV Module Manufacturer_stringindexer": 90.0, "PV Module Model Number_stringindexer": 598.0, "Project Cost_stringindexer": 78.0, "Incentive_stringindexer": 1366.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1039.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11379, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4519, "index_stringindexer": 29815.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28418.0, "City_stringindexer": 688.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 24629.0, "Incentive_stringindexer": 397.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 881.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 35.0, "Reporting Period_stringindexer": 35.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 227.0, "Reporting Period_stringindexer": 228.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11433, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4226, "index_stringindexer": 66883.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 63042.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 38293.0, "Incentive_stringindexer": 34.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 370.0}, {"Zip Code": 10306, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3932, "index_stringindexer": 81333.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22081.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 15113.0, "Incentive_stringindexer": 480.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 90.0, "Reporting Period_stringindexer": 91.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 131.0, "Reporting Period_stringindexer": 132.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11355, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 70758.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59873.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 36603.0, "Incentive_stringindexer": 260.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 372.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 377.0, "Reporting Period_stringindexer": 380.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 124.0, "Reporting Period_stringindexer": 125.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 40, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15729, "index_stringindexer": 64714.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17602.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 907.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 19757.0, "Incentive_stringindexer": 1335.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 207.0, "Reporting Period_stringindexer": 211.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10703, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 50030.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 14349.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 241.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 42.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 600.0, "Incentive_stringindexer": 1704.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 229.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11211, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5587, "index_stringindexer": 3117.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3865.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 3398.0, "Incentive_stringindexer": 303.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 667.0}, {"Zip Code": 10992, "Total Inverter Quantity": 64, "Total PV Module Quantity": 64, "Total Nameplate kW DC": 23.0, "Expected KWh Annual Production": 27045, "index_stringindexer": 62832.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18447.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 336.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 27094.0, "Incentive_stringindexer": 15417.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 10992, "Total Inverter Quantity": 2, "Total PV Module Quantity": 62, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 21106, "index_stringindexer": 67535.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 1947.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 19783.0, "Incentive_stringindexer": 11833.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 378.0, "Reporting Period_stringindexer": 379.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10303, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 60317.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21497.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 9114.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 100.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 164.0, "Reporting Period_stringindexer": 165.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4261, "index_stringindexer": 69359.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6651.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3020.0, "Incentive_stringindexer": 276.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 545.0, "Reporting Period_stringindexer": 547.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10456, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 51410.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82251.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 597.0, "Date Completed_stringindexer": 487.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 20796.0, "Incentive_stringindexer": 852.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 452.0}, {"Zip Code": 10312, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7184, "index_stringindexer": 44462.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50197.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 3194.0, "Incentive_stringindexer": 121.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 12401, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8510, "index_stringindexer": 59961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51542.0, "City_stringindexer": 34.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 13529.0, "Incentive_stringindexer": 2175.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 30.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 272.0, "Reporting Period_stringindexer": 273.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 322.0, "Reporting Period_stringindexer": 322.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 73.0, "Reporting Period_stringindexer": 74.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 113.0, "Reporting Period_stringindexer": 114.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 9.0, "Reporting Period_stringindexer": 10.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 196.0, "Reporting Period_stringindexer": 197.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 224.0, "Reporting Period_stringindexer": 224.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 220.0, "Reporting Period_stringindexer": 221.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11357, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8364, "index_stringindexer": 2616.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 80092.0, "City_stringindexer": 181.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 205.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 39436.0, "Incentive_stringindexer": 321.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 207.0}, {"Zip Code": 13053, "Total Inverter Quantity": 2, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 29099, "index_stringindexer": 34952.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 2446.0, "City_stringindexer": 291.0, "County_stringindexer": 44.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 771.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 18.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 108.0, "PV Module Model Number_stringindexer": 492.0, "Project Cost_stringindexer": 18055.0, "Incentive_stringindexer": 5243.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 426.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5370, "index_stringindexer": 22251.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 43759.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 169.0, "Project Cost_stringindexer": 6687.0, "Incentive_stringindexer": 1712.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3345, "index_stringindexer": 17018.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37355.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 19595.0, "Incentive_stringindexer": 1566.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 180.0}, {"Zip Code": 10977, "Total Inverter Quantity": 46, "Total PV Module Quantity": 46, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15659, "index_stringindexer": 72326.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77862.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 973.0, "Incentive_stringindexer": 8638.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 6.0, "Reporting Period_stringindexer": 7.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11223, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 41948.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33697.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 8830.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 413.0}, {"Zip Code": 11413, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 83895.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 26331.0, "City_stringindexer": 107.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 386.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 10090.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 114.0}, {"Zip Code": 14217, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8061, "index_stringindexer": 19904.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17998.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 1733.0, "Incentive_stringindexer": 1665.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 787.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 243.0, "Reporting Period_stringindexer": 243.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10605, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7360, "index_stringindexer": 78872.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 5373.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 617.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 37538.0, "Incentive_stringindexer": 1574.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 186.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 842.0, "Reporting Period_stringindexer": 841.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10990, "Total Inverter Quantity": 35, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13435, "index_stringindexer": 18525.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15740.0, "City_stringindexer": 41.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 444.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 30240.0, "Incentive_stringindexer": 7756.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 37.0}, {"Zip Code": 10801, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 12773.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51924.0, "City_stringindexer": 99.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 26493.0, "Incentive_stringindexer": 96.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 206.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 311.0, "Reporting Period_stringindexer": 317.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 292.0, "Reporting Period_stringindexer": 292.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14223, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "index_stringindexer": 49558.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27711.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 597.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 4605.0, "Incentive_stringindexer": 150.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 620.0}, {"Zip Code": 11361, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 12890.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6416.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 19223.0, "Incentive_stringindexer": 1672.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 714.0}, {"Zip Code": 11208, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7695, "index_stringindexer": 44767.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22680.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 5230.0, "Incentive_stringindexer": 304.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 187.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 243.0, "Reporting Period_stringindexer": 243.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 387.0, "Reporting Period_stringindexer": 391.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 136.0, "Reporting Period_stringindexer": 137.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9244, "index_stringindexer": 80227.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 4838.0, "City_stringindexer": 270.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 7.0, "Project Cost_stringindexer": 8495.0, "Incentive_stringindexer": 997.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 304.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 259.0, "Reporting Period_stringindexer": 261.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 73.0, "Reporting Period_stringindexer": 74.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11420, "Total Inverter Quantity": 4, "Total PV Module Quantity": 4, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 1620, "index_stringindexer": 83724.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76767.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 11363.0, "Incentive_stringindexer": 3452.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 179.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1465.0, "Reporting Period_stringindexer": 1458.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11373, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 10688.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38227.0, "City_stringindexer": 579.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 9368.0, "Incentive_stringindexer": 1736.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 720.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 151.0, "Reporting Period_stringindexer": 153.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10704, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5505, "index_stringindexer": 42191.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6207.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 3077.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 121.0}, {"Zip Code": 10956, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10518, "index_stringindexer": 19628.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17261.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 681.0, "Incentive_stringindexer": 236.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12428, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10917, "index_stringindexer": 18826.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31583.0, "City_stringindexer": 481.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 281.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 266.0, "Project Cost_stringindexer": 9302.0, "Incentive_stringindexer": 747.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2175.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6973, "index_stringindexer": 68238.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10301.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 9825.0, "Incentive_stringindexer": 1927.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10977, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4425, "index_stringindexer": 63133.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 72001.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 34038.0, "Incentive_stringindexer": 1637.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 95.0, "Reporting Period_stringindexer": 95.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14120, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 21558.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37101.0, "City_stringindexer": 242.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 418.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 9618.0, "Incentive_stringindexer": 2010.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 278.0}, {"Zip Code": 14715, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 48617.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13705.0, "City_stringindexer": 1118.0, "County_stringindexer": 59.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 899.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 241.0, "Project Cost_stringindexer": 9558.0, "Incentive_stringindexer": 179.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1423.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7043, "index_stringindexer": 18578.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11725.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 241.0, "Project Cost_stringindexer": 21372.0, "Incentive_stringindexer": 21.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 504.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10705, "index_stringindexer": 38498.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52253.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 198.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 4279.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10548, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7272, "index_stringindexer": 82902.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31978.0, "City_stringindexer": 346.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 434.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 304.0, "Project Cost_stringindexer": 39756.0, "Incentive_stringindexer": 1578.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 389.0}, {"Zip Code": 14224, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 66962.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 969.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 483.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1355.0, "Incentive_stringindexer": 1902.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 438.0}, {"Zip Code": 11414, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9156, "index_stringindexer": 13844.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67925.0, "City_stringindexer": 3.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 154.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 297.0, "Project Cost_stringindexer": 35904.0, "Incentive_stringindexer": 7.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 218.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 234.0, "Reporting Period_stringindexer": 234.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11429, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 40011.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 25770.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 325.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 24170.0, "Incentive_stringindexer": 1388.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1094.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 126.0, "Reporting Period_stringindexer": 126.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 27.0, "Reporting Period_stringindexer": 28.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 114.0, "Reporting Period_stringindexer": 113.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 810.0, "Reporting Period_stringindexer": 817.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10466, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6574, "index_stringindexer": 25120.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47103.0, "City_stringindexer": 1268.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 154.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 32007.0, "Incentive_stringindexer": 145.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2193.0}, {"Zip Code": 11207, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 63749.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52136.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 9578.0, "Incentive_stringindexer": 464.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 147.0}, {"Zip Code": 12850, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7078, "index_stringindexer": 4640.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13152.0, "City_stringindexer": 421.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 434.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 13.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 67.0, "Project Cost_stringindexer": 33518.0, "Incentive_stringindexer": 3678.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 505.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 10.0, "Reporting Period_stringindexer": 11.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 466.0, "Reporting Period_stringindexer": 467.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 59.0, "Reporting Period_stringindexer": 61.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10591, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4226, "index_stringindexer": 12133.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32129.0, "City_stringindexer": 1659.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 605.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 123.0, "Incentive_stringindexer": 34.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2078.0}, {"Zip Code": 12550, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 76334.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12748.0, "City_stringindexer": 19.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 68.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 9515.0, "Incentive_stringindexer": 1233.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 11.0}, {"Zip Code": 14841, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 50746.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42029.0, "City_stringindexer": 649.0, "County_stringindexer": 55.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 32.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 31461.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 801.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 160.0, "Reporting Period_stringindexer": 161.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 128.0, "Reporting Period_stringindexer": 129.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12809, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8311, "index_stringindexer": 75582.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8918.0, "City_stringindexer": 317.0, "County_stringindexer": 23.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 2.0, "Incentive_stringindexer": 1578.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 361.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 250.0, "Reporting Period_stringindexer": 251.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14067, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13311, "index_stringindexer": 11157.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46529.0, "City_stringindexer": 611.0, "County_stringindexer": 48.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 901.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 227.0, "Project Cost_stringindexer": 36191.0, "Incentive_stringindexer": 1468.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 760.0}, {"Zip Code": 11357, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3345, "index_stringindexer": 45892.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17021.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 10812.0, "Incentive_stringindexer": 136.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 393.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 603.0, "Reporting Period_stringindexer": 606.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 193.0, "Reporting Period_stringindexer": 191.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 59.0, "Reporting Period_stringindexer": 61.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 34.0, "Reporting Period_stringindexer": 36.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11417, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6339, "index_stringindexer": 60663.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 79350.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 907.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 546.0, "Incentive_stringindexer": 13.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 646.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 134.0, "Reporting Period_stringindexer": 135.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5353, "index_stringindexer": 12849.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22759.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 6147.0, "Incentive_stringindexer": 265.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 10993, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10565, "index_stringindexer": 68797.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39483.0, "City_stringindexer": 429.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 743.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 262.0, "Incentive_stringindexer": 1715.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 564.0}, {"Zip Code": 11421, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8452, "index_stringindexer": 13885.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73574.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 750.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 1250.0, "Incentive_stringindexer": 2251.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 865.0}, {"Zip Code": 10950, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5541, "index_stringindexer": 16325.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36568.0, "City_stringindexer": 18.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 791.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 304.0, "Project Cost_stringindexer": 21840.0, "Incentive_stringindexer": 1997.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 13.0}, {"Zip Code": 11375, "Total Inverter Quantity": 8, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3240, "index_stringindexer": 75925.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20653.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 529.0, "Incentive_stringindexer": 687.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1072.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 55.0, "Reporting Period_stringindexer": 55.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 145.0, "Reporting Period_stringindexer": 146.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10607, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4349, "index_stringindexer": 73291.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11023.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 35742.0, "Incentive_stringindexer": 649.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 248.0}, {"Zip Code": 11216, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "index_stringindexer": 6502.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73163.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 564.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 385.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 20531.0, "Incentive_stringindexer": 180.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 436.0}, {"Zip Code": 10472, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5670, "index_stringindexer": 74251.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 61140.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1153.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 27478.0, "Incentive_stringindexer": 231.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 615.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 566.0, "Reporting Period_stringindexer": 567.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11426, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 7025, "index_stringindexer": 54341.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76312.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 27032.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1110.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 56.0, "Reporting Period_stringindexer": 57.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5505, "index_stringindexer": 85455.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34476.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 59.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 3365.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 5041.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78185.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 627.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 7347.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10562, "Total Inverter Quantity": 1, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11040, "index_stringindexer": 18947.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47294.0, "City_stringindexer": 58.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 395.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 39121.0, "Incentive_stringindexer": 266.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 53.0}, {"Zip Code": 11234, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 77100.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 68740.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3573.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 60.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 285.0, "Reporting Period_stringindexer": 288.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11218, "Total Inverter Quantity": 4, "Total PV Module Quantity": 4, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 1573, "index_stringindexer": 58884.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59843.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 344.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 7006.0, "Incentive_stringindexer": 2573.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 277.0}, {"Zip Code": 11417, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9297, "index_stringindexer": 83303.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81259.0, "City_stringindexer": 230.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 796.0, "Date Completed_stringindexer": 333.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 19493.0, "Incentive_stringindexer": 505.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 320.0}, {"Zip Code": 14094, "Total Inverter Quantity": 2, "Total PV Module Quantity": 47, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15999, "index_stringindexer": 67920.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42578.0, "City_stringindexer": 220.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 483.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 92.0, "Project Cost_stringindexer": 128.0, "Incentive_stringindexer": 4562.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 252.0}, {"Zip Code": 10312, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9831, "index_stringindexer": 59131.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 14306.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 627.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 479.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 31056.0, "Incentive_stringindexer": 816.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 608.0, "Reporting Period_stringindexer": 615.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 152.0, "Reporting Period_stringindexer": 154.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 7025, "index_stringindexer": 51318.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33364.0, "City_stringindexer": 1.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 212.0, "Project Cost_stringindexer": 21395.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 70.0, "Reporting Period_stringindexer": 73.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 296.0, "Reporting Period_stringindexer": 296.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12065, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12936, "index_stringindexer": 66724.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13593.0, "City_stringindexer": 76.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1100.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 22650.0, "Incentive_stringindexer": 3056.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 76.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11420, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4684, "index_stringindexer": 27087.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50454.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1025.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 14239.0, "Incentive_stringindexer": 289.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 179.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 543.0, "Reporting Period_stringindexer": 542.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10550, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4015, "index_stringindexer": 27903.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59228.0, "City_stringindexer": 144.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 937.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 8271.0, "Incentive_stringindexer": 244.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 312.0}, {"Zip Code": 11790, "Total Inverter Quantity": 4, "Total PV Module Quantity": 880, "Total Nameplate kW DC": 264.0, "Expected KWh Annual Production": 309894, "index_stringindexer": 46934.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52000.0, "City_stringindexer": 178.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 39.0, "Primary Inverter Model Number_stringindexer": 334.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 55.0, "Project Cost_stringindexer": 40530.0, "Incentive_stringindexer": 16153.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 201.0}, {"Zip Code": 10994, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10565, "index_stringindexer": 77965.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15547.0, "City_stringindexer": 264.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 701.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 61.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 138.0, "Project Cost_stringindexer": 396.0, "Incentive_stringindexer": 82.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 298.0}, {"Zip Code": 11367, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5341, "index_stringindexer": 31623.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32182.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 325.0, "Primary PV Module Manufacturer_stringindexer": 29.0, "PV Module Model Number_stringindexer": 148.0, "Project Cost_stringindexer": 4430.0, "Incentive_stringindexer": 53.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 427.0}, {"Zip Code": 11428, "Total Inverter Quantity": 11, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 2296.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 4137.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 796.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 38606.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 597.0}, {"Zip Code": 11207, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3404, "index_stringindexer": 6639.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46236.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 764.0, "Project Cost_stringindexer": 31474.0, "Incentive_stringindexer": 229.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 147.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 106.0, "Reporting Period_stringindexer": 106.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 83.0, "Reporting Period_stringindexer": 84.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 116.0, "Reporting Period_stringindexer": 118.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "65d2d82cb0c78b45eb628d82", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/part-00000-af4c1599-ddc1-4e4e-b813-768a88b2251e-c000.csv", "in": ["65d2d82cb0c78b45eb628d81"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Regrmodeeel_AutoML", "comment": "", "pipeline_id": "65d2d82cb0c78b45eb628d7d", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Regression", "stage_attributes": {"model_type": "regression", "label": "Project Cost_stringindexer", "features": ["Zip Code", "Total Inverter Quantity", "Total PV Module Quantity", "Total Nameplate kW DC", "Expected KWh Annual Production", "Reporting Period_stringindexer", "City_stringindexer", "County_stringindexer", "State_stringindexer", "Sector_stringindexer", "Program Type_stringindexer", "Solicitation_stringindexer", "Electric Utility_stringindexer", "Purchase Type_stringindexer", "Date Application Received_stringindexer", "Date Completed_stringindexer", "Project Status_stringindexer", "Contractor_stringindexer", "Primary Inverter Manufacturer_stringindexer", "Primary Inverter Model Number_stringindexer", "Primary PV Module Manufacturer_stringindexer", "PV Module Model Number_stringindexer", "Incentive_stringindexer", "Remote Net Metering_stringindexer", "Affordable Solar_stringindexer", "Community Distributed Generation_stringindexer", "Green Jobs Green New York Participant_stringindexer", "Location 1_stringindexer", "index_stringindexer_binarizer", "Project Number_stringindexer_binarizer"], "percentage": "80", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/regression.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Regression-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 9}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 15}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 24}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 25}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 28}, {"inherited": true, "checked": true, "field": "index_stringindexer_binarizer", "alias": "index_stringindexer_binarizer", "type": "real", "position": 29}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer_binarizer", "alias": "Project Number_stringindexer_binarizer", "type": "real", "position": 30}], "actual_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer", "alias": "Project Number_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 24}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 25}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 28}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 29}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 30}], "selected_schema": [], "created_at": "2024-02-19 04:25:16.570000", "originalcount": 169442, "samplecount": 135553, "samplefile": "/FileStore/platform/sampleData/65d2d858b0c78b45eb628da9/part-00000-7c7cc3e0-6138-4d0c-b7ba-db55a8791faa-c000.csv", "joinSchema": [], "updated_at": "2024-02-20 03:21:58.720000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}, {"_id": "65d2d858b0c78b45eb628da9", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/part-00000-af4c1599-ddc1-4e4e-b813-768a88b2251e-c000.csv", "in": [], "out": ["65d2d82cb0c78b45eb628d81"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "pipeline_id": "65d2d82cb0c78b45eb628d7d", "sub_type": "platfiles", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/part-00000-af4c1599-ddc1-4e4e-b813-768a88b2251e-c000.csv", "filename": "1708314561FileNmae.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "FilePath": "/MavenMarket/FileNmae.csv", "viewFileName": "FileNmae.csv", "is_header": "Use Header Line", "baseType": "hdfs", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": -90, "y": 150}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/file-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#000000", "type": "source", "text": "FileNmae", "slug": "file", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "_id": "65d2d858b0c78b45eb628da9", "dbValues": {"url": "/FileStore/platform/uploadedSourceFiles/part-00000-af4c1599-ddc1-4e4e-b813-768a88b2251e-c000.csv", "filename": "1708314561FileNmae.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "FilePath": "/MavenMarket/FileNmae.csv", "viewFileName": "FileNmae.csv", "is_header": "Use Header Line", "baseType": "hdfs", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer", "alias": "Project Number_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 24}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 25}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 28}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 29}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 30}], "actual_schema": [{"inherited": true, "checked": true, "field": "Zip Code", "alias": "Zip Code", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Total Inverter Quantity", "alias": "Total Inverter Quantity", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Total PV Module Quantity", "alias": "Total PV Module Quantity", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Total Nameplate kW DC", "alias": "Total Nameplate kW DC", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Expected KWh Annual Production", "alias": "Expected KWh Annual Production", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Reporting Period_stringindexer", "alias": "Reporting Period_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Project Number_stringindexer", "alias": "Project Number_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "City_stringindexer", "alias": "City_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "County_stringindexer", "alias": "County_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "State_stringindexer", "alias": "State_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Sector_stringindexer", "alias": "Sector_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Program Type_stringindexer", "alias": "Program Type_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Solicitation_stringindexer", "alias": "Solicitation_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "Electric Utility_stringindexer", "alias": "Electric Utility_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Purchase Type_stringindexer", "alias": "Purchase Type_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Date Application Received_stringindexer", "alias": "Date Application Received_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "Date Completed_stringindexer", "alias": "Date Completed_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Project Status_stringindexer", "alias": "Project Status_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Contractor_stringindexer", "alias": "Contractor_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Primary Inverter Manufacturer_stringindexer", "alias": "Primary Inverter Manufacturer_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "Primary Inverter Model Number_stringindexer", "alias": "Primary Inverter Model Number_stringindexer", "type": "real", "position": 21}, {"inherited": true, "checked": true, "field": "Primary PV Module Manufacturer_stringindexer", "alias": "Primary PV Module Manufacturer_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "PV Module Model Number_stringindexer", "alias": "PV Module Model Number_stringindexer", "type": "real", "position": 23}, {"inherited": true, "checked": true, "field": "Project Cost_stringindexer", "alias": "Project Cost_stringindexer", "type": "real", "position": 24}, {"inherited": true, "checked": true, "field": "Incentive_stringindexer", "alias": "Incentive_stringindexer", "type": "real", "position": 25}, {"inherited": true, "checked": true, "field": "Remote Net Metering_stringindexer", "alias": "Remote Net Metering_stringindexer", "type": "numeric", "position": 26}, {"inherited": true, "checked": true, "field": "Affordable Solar_stringindexer", "alias": "Affordable Solar_stringindexer", "type": "numeric", "position": 27}, {"inherited": true, "checked": true, "field": "Community Distributed Generation_stringindexer", "alias": "Community Distributed Generation_stringindexer", "type": "numeric", "position": 28}, {"inherited": true, "checked": true, "field": "Green Jobs Green New York Participant_stringindexer", "alias": "Green Jobs Green New York Participant_stringindexer", "type": "numeric", "position": 29}, {"inherited": true, "checked": true, "field": "Location 1_stringindexer", "alias": "Location 1_stringindexer", "type": "real", "position": 30}], "selected_schema": [], "joinSchema": [], "updated_at": "2024-02-20 03:09:58.733000", "created_at": "2024-02-19 04:26:00.821000", "__v": 0, "comment": "", "name": "FileNmae", "sampleData": [{"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 68580.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 812.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 824.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 29533.0, "Incentive_stringindexer": 2889.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12533, "Total Inverter Quantity": 33, "Total PV Module Quantity": 8316, "Total Nameplate kW DC": 2827.0, "Expected KWh Annual Production": 3318962, "index_stringindexer": 46063.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9831.0, "City_stringindexer": 43.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 1, "Solicitation_stringindexer": 9.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 661.0, "Primary Inverter Manufacturer_stringindexer": 35.0, "Primary Inverter Model Number_stringindexer": 412.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 866.0, "Project Cost_stringindexer": 17990.0, "Incentive_stringindexer": 16293.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 39.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 62502.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 43128.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 788.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 1987.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12022, "Total Inverter Quantity": 41, "Total PV Module Quantity": 41, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15738, "index_stringindexer": 5443.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17009.0, "City_stringindexer": 811.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 4.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 18.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 17042.0, "Incentive_stringindexer": 1316.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1028.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 131.0, "Reporting Period_stringindexer": 132.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13483, "Total Inverter Quantity": 5, "Total PV Module Quantity": 616, "Total Nameplate kW DC": 200.0, "Expected KWh Annual Production": 235003, "index_stringindexer": 55846.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38290.0, "City_stringindexer": 1464.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 29.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 82.0, "Primary PV Module Manufacturer_stringindexer": 66.0, "PV Module Model Number_stringindexer": 480.0, "Project Cost_stringindexer": 25764.0, "Incentive_stringindexer": 203.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1682.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 68635.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62840.0, "City_stringindexer": 474.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8519.0, "Incentive_stringindexer": 365.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 605.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 165.0, "Reporting Period_stringindexer": 167.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12033, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8657, "index_stringindexer": 65237.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15674.0, "City_stringindexer": 1449.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 924.0, "Incentive_stringindexer": 3263.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1854.0}, {"Zip Code": 10566, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5094, "index_stringindexer": 19939.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60908.0, "City_stringindexer": 97.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 49.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 334.0, "Project Cost_stringindexer": 36967.0, "Incentive_stringindexer": 451.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 102.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13558, "index_stringindexer": 32361.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16628.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 29.0, "PV Module Model Number_stringindexer": 228.0, "Project Cost_stringindexer": 11368.0, "Incentive_stringindexer": 413.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 11710, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7043, "index_stringindexer": 39246.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73778.0, "City_stringindexer": 126.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2596.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 164.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 36.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 137.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 6.0, "Reporting Period_stringindexer": 7.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14580, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12889, "index_stringindexer": 79307.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22576.0, "City_stringindexer": 176.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 418.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 19948.0, "Incentive_stringindexer": 712.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 197.0}, {"Zip Code": 10710, "Total Inverter Quantity": 2, "Total PV Module Quantity": 50, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 18781, "index_stringindexer": 53655.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20937.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 446.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 27.0, "Project Cost_stringindexer": 36897.0, "Incentive_stringindexer": 838.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 75.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 83.0, "Reporting Period_stringindexer": 84.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10469, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 28435.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81798.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 4457.0, "Incentive_stringindexer": 208.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 178.0}, {"Zip Code": 12446, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5071, "index_stringindexer": 77033.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13635.0, "City_stringindexer": 236.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 7578.0, "Incentive_stringindexer": 55.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 270.0}, {"Zip Code": 14224, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 37449.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24238.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1355.0, "Incentive_stringindexer": 1902.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 438.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 511.0, "Reporting Period_stringindexer": 512.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14214, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5282, "index_stringindexer": 48178.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39928.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 1110.0, "Incentive_stringindexer": 277.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 592.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 595.0, "Reporting Period_stringindexer": 586.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12581, "Total Inverter Quantity": 4, "Total PV Module Quantity": 141, "Total Nameplate kW DC": 42.0, "Expected KWh Annual Production": 49653, "index_stringindexer": 81293.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39539.0, "City_stringindexer": 434.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 723.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 22710.0, "Incentive_stringindexer": 6233.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 508.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 503.0, "Reporting Period_stringindexer": 507.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5670, "index_stringindexer": 22535.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27712.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 539.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 2617.0, "Incentive_stringindexer": 231.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 267.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 27.0, "Reporting Period_stringindexer": 28.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7149, "index_stringindexer": 57473.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16624.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 274.0, "Incentive_stringindexer": 448.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 347.0, "Reporting Period_stringindexer": 346.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6198, "index_stringindexer": 76350.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34181.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 1970.0, "Incentive_stringindexer": 414.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10921, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "index_stringindexer": 18357.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28789.0, "City_stringindexer": 269.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 2302.0, "Incentive_stringindexer": 55.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 306.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 312.0, "Reporting Period_stringindexer": 313.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12477, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12325, "index_stringindexer": 48721.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51878.0, "City_stringindexer": 46.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 340.0, "Project Cost_stringindexer": 5825.0, "Incentive_stringindexer": 453.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 43.0}, {"Zip Code": 14075, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4684, "index_stringindexer": 65031.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47449.0, "City_stringindexer": 226.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 2425.0, "Incentive_stringindexer": 2349.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 265.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 161.0, "Reporting Period_stringindexer": 162.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10303, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6973, "index_stringindexer": 59384.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7587.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 123.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 2720.0, "Incentive_stringindexer": 386.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 100.0}, {"Zip Code": 11377, "Total Inverter Quantity": 1, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 2723, "index_stringindexer": 30645.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9570.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 29383.0, "Incentive_stringindexer": 270.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1103.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 658.0, "Reporting Period_stringindexer": 669.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 35.0, "Reporting Period_stringindexer": 35.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8170, "index_stringindexer": 16290.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 40998.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 164.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 33247.0, "Incentive_stringindexer": 1023.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 106.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 98.0, "Reporting Period_stringindexer": 99.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10954, "Total Inverter Quantity": 50, "Total PV Module Quantity": 50, "Total Nameplate kW DC": 14.0, "Expected KWh Annual Production": 17021, "index_stringindexer": 77955.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28600.0, "City_stringindexer": 111.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 605.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1014.0, "Incentive_stringindexer": 3115.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 119.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 283.0, "Reporting Period_stringindexer": 285.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 177.0, "Reporting Period_stringindexer": 180.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11566, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13382, "index_stringindexer": 62818.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 30107.0, "City_stringindexer": 79.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 586.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 81.0}, {"Zip Code": 10804, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6485, "index_stringindexer": 24734.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20035.0, "City_stringindexer": 1503.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 35.0, "PV Module Model Number_stringindexer": 52.0, "Project Cost_stringindexer": 35096.0, "Incentive_stringindexer": 5973.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1861.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 342.0, "Reporting Period_stringindexer": 344.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 6, "Total PV Module Quantity": 6, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 2113, "index_stringindexer": 83109.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3498.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 617.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 311.0, "Primary PV Module Manufacturer_stringindexer": 85.0, "PV Module Model Number_stringindexer": 572.0, "Project Cost_stringindexer": 39384.0, "Incentive_stringindexer": 590.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11433, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3680, "index_stringindexer": 63149.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8016.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 8054.0, "Incentive_stringindexer": 1415.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 315.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 275.0, "Reporting Period_stringindexer": 274.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13617, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 16111, "index_stringindexer": 25796.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50930.0, "City_stringindexer": 225.0, "County_stringindexer": 28.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 86.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 1990.0, "Project Cost_stringindexer": 15409.0, "Incentive_stringindexer": 1034.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 257.0}, {"Zip Code": 10309, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3486, "index_stringindexer": 63541.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42561.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 22336.0, "Incentive_stringindexer": 243.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 377.0, "Reporting Period_stringindexer": 380.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 15, "Total PV Module Quantity": 3096, "Total Nameplate kW DC": 1068.0, "Expected KWh Annual Production": 1253802, "index_stringindexer": 46986.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 48504.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 1, "Solicitation_stringindexer": 9.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 746.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 39.0, "Primary Inverter Model Number_stringindexer": 433.0, "Primary PV Module Manufacturer_stringindexer": 64.0, "PV Module Model Number_stringindexer": 1388.0, "Project Cost_stringindexer": 27409.0, "Incentive_stringindexer": 10800.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11433, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9039, "index_stringindexer": 68992.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8389.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 5436.0, "Incentive_stringindexer": 423.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 315.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 177.0, "Reporting Period_stringindexer": 180.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 917.0, "Reporting Period_stringindexer": 932.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 366.0, "Reporting Period_stringindexer": 367.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14464, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8593, "index_stringindexer": 83862.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82289.0, "City_stringindexer": 628.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 149.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 909.0, "Incentive_stringindexer": 628.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 790.0}, {"Zip Code": 11203, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4196, "index_stringindexer": 86136.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3769.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 40246.0, "Incentive_stringindexer": 256.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 199.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 311.0, "Reporting Period_stringindexer": 317.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 42.0, "Reporting Period_stringindexer": 43.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11356, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 76548.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58410.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 24768.0, "Incentive_stringindexer": 2810.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 733.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 682.0, "Reporting Period_stringindexer": 681.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12110, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "index_stringindexer": 43227.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 75997.0, "City_stringindexer": 92.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 901.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 19701.0, "Incentive_stringindexer": 82.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 96.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 101.0, "Reporting Period_stringindexer": 102.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 296.0, "Reporting Period_stringindexer": 296.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 1, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10212, "index_stringindexer": 72180.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58517.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 50.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 852.0, "Incentive_stringindexer": 1315.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 539.0, "Reporting Period_stringindexer": 533.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 444.0, "Reporting Period_stringindexer": 455.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14772, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9156, "index_stringindexer": 29956.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62217.0, "City_stringindexer": 946.0, "County_stringindexer": 52.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 174.0, "Incentive_stringindexer": 139.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1178.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14420, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 73130.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6796.0, "City_stringindexer": 339.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 963.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 411.0, "Project Cost_stringindexer": 148.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 384.0}, {"Zip Code": 10960, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6468, "index_stringindexer": 74276.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64473.0, "City_stringindexer": 312.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 294.0, "Incentive_stringindexer": 4630.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 360.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 294.0, "Reporting Period_stringindexer": 294.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11414, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 3827.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 48752.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 30290.0, "Incentive_stringindexer": 354.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 218.0}, {"Zip Code": 10502, "Total Inverter Quantity": 33, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11234, "index_stringindexer": 79616.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55863.0, "City_stringindexer": 404.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 271.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 477.0, "Incentive_stringindexer": 763.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 470.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 421.0, "Reporting Period_stringindexer": 424.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 325.0, "Reporting Period_stringindexer": 323.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14817, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "index_stringindexer": 67050.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39625.0, "City_stringindexer": 327.0, "County_stringindexer": 16.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 44.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 168.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 3.0, "Project Cost_stringindexer": 3731.0, "Incentive_stringindexer": 150.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 387.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 16507.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77413.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 38030.0, "Incentive_stringindexer": 30.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9003, "index_stringindexer": 83961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10088.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 89.0, "Incentive_stringindexer": 2426.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13763, "index_stringindexer": 64153.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78014.0, "City_stringindexer": 62.0, "County_stringindexer": 2.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 403.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 11.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 288.0, "Incentive_stringindexer": 1.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 79.0}, {"Zip Code": 10309, "Total Inverter Quantity": 27, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11410, "index_stringindexer": 38540.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7868.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 461.0, "Date Completed_stringindexer": 603.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 37.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 20566.0, "Incentive_stringindexer": 1367.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 7.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 33.0, "Reporting Period_stringindexer": 34.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 244.0, "Reporting Period_stringindexer": 242.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10701, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4578, "index_stringindexer": 79485.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6872.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 7.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 2062.0, "Incentive_stringindexer": 8.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 113.0}, {"Zip Code": 12432, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5374, "index_stringindexer": 17316.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34243.0, "City_stringindexer": 105.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 46.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 112.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 7461.0, "Incentive_stringindexer": 732.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1964.0}, {"Zip Code": 10305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5353, "index_stringindexer": 35859.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6218.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 5789.0, "Incentive_stringindexer": 2885.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 37.0, "Reporting Period_stringindexer": 38.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5423, "index_stringindexer": 45143.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55099.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 799.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3325.0, "Incentive_stringindexer": 1693.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 970.0, "Reporting Period_stringindexer": 959.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11692, "Total Inverter Quantity": 3, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 20.0, "Expected KWh Annual Production": 24510, "index_stringindexer": 82082.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 49510.0, "City_stringindexer": 952.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 17.0, "Primary Inverter Model Number_stringindexer": 211.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 280.0, "Project Cost_stringindexer": 9069.0, "Incentive_stringindexer": 5307.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1184.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 194.0, "Reporting Period_stringindexer": 202.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10465, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5036, "index_stringindexer": 29426.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6325.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 1830.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8403.0, "Incentive_stringindexer": 208.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 158.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 301.0, "Reporting Period_stringindexer": 302.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12550, "Total Inverter Quantity": 2, "Total PV Module Quantity": 39, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 11903, "index_stringindexer": 32657.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38257.0, "City_stringindexer": 19.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 83.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 9.0, "Project Cost_stringindexer": 1325.0, "Incentive_stringindexer": 3124.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 11.0}, {"Zip Code": 12309, "Total Inverter Quantity": 1, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13617, "index_stringindexer": 60566.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31145.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 725.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 21945.0, "Incentive_stringindexer": 3310.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 85.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 337.0, "Reporting Period_stringindexer": 339.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 196.0, "Reporting Period_stringindexer": 197.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12768, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "index_stringindexer": 65057.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84477.0, "City_stringindexer": 1222.0, "County_stringindexer": 30.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 415.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 27090.0, "Incentive_stringindexer": 41.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1453.0}, {"Zip Code": 11218, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3932, "index_stringindexer": 22311.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 70927.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 344.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 4507.0, "Incentive_stringindexer": 480.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 277.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 197.0, "Reporting Period_stringindexer": 201.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11412, "Total Inverter Quantity": 1, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6585, "index_stringindexer": 51056.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67716.0, "City_stringindexer": 187.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 6130.0, "Incentive_stringindexer": 259.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 215.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 601.0, "Reporting Period_stringindexer": 605.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10590, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11621, "index_stringindexer": 28224.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21010.0, "City_stringindexer": 489.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 321.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 583.0, "Incentive_stringindexer": 1574.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 580.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 180.0, "Reporting Period_stringindexer": 183.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14622, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5728, "index_stringindexer": 80359.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18061.0, "City_stringindexer": 26.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 67.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 4640.0, "Incentive_stringindexer": 682.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 901.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 490.0, "Reporting Period_stringindexer": 500.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11419, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 75196.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82716.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 26560.0, "Incentive_stringindexer": 30.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1193.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8504, "index_stringindexer": 36425.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 9306.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 37807.0, "Incentive_stringindexer": 239.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12169, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10917, "index_stringindexer": 75458.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60160.0, "City_stringindexer": 468.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 15.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 334.0, "Project Cost_stringindexer": 26038.0, "Incentive_stringindexer": 747.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1162.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1064.0, "Reporting Period_stringindexer": 1044.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14075, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9367, "index_stringindexer": 43572.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84093.0, "City_stringindexer": 226.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 15886.0, "Incentive_stringindexer": 831.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 265.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 21058.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17182.0, "City_stringindexer": 1665.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 558.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 42.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 1446.0, "Incentive_stringindexer": 1522.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2439.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12842, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6909, "index_stringindexer": 16144.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37142.0, "City_stringindexer": 938.0, "County_stringindexer": 42.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 9962.0, "Incentive_stringindexer": 954.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1157.0}, {"Zip Code": 12831, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6574, "index_stringindexer": 73294.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24103.0, "City_stringindexer": 1666.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 190.0, "Incentive_stringindexer": 437.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2017.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 682.0, "Reporting Period_stringindexer": 681.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12304, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 60606.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3330.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 348.0, "Incentive_stringindexer": 2222.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 106.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 109.0, "Reporting Period_stringindexer": 110.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 19.0, "Reporting Period_stringindexer": 20.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 537.0, "Reporting Period_stringindexer": 530.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 301.0, "Reporting Period_stringindexer": 302.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12302, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5447, "index_stringindexer": 6698.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21438.0, "City_stringindexer": 127.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 206.0, "Incentive_stringindexer": 1939.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 139.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 249.0, "Reporting Period_stringindexer": 249.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6691, "index_stringindexer": 83885.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42265.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 266.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 236.0, "Incentive_stringindexer": 634.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 12148, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 13484.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51341.0, "City_stringindexer": 337.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 500.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 13568.0, "Incentive_stringindexer": 608.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 421.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 418.0, "Reporting Period_stringindexer": 417.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11692, "Total Inverter Quantity": 3, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 20.0, "Expected KWh Annual Production": 24510, "index_stringindexer": 12207.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 26531.0, "City_stringindexer": 952.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 17.0, "Primary Inverter Model Number_stringindexer": 211.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 280.0, "Project Cost_stringindexer": 9069.0, "Incentive_stringindexer": 5307.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1184.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10510, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10072, "index_stringindexer": 42417.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78395.0, "City_stringindexer": 1687.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 321.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 111.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 22663.0, "Incentive_stringindexer": 3727.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2506.0}, {"Zip Code": 12203, "Total Inverter Quantity": 3, "Total PV Module Quantity": 606, "Total Nameplate kW DC": 199.0, "Expected KWh Annual Production": 234745, "index_stringindexer": 70881.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11515.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 478.0, "Primary Inverter Manufacturer_stringindexer": 35.0, "Primary Inverter Model Number_stringindexer": 481.0, "Primary PV Module Manufacturer_stringindexer": 218.0, "PV Module Model Number_stringindexer": 935.0, "Project Cost_stringindexer": 6016.0, "Incentive_stringindexer": 4288.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 107.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 449.0, "Reporting Period_stringindexer": 446.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 606.0, "Reporting Period_stringindexer": 612.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 19.0, "Reporting Period_stringindexer": 20.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11225, "Total Inverter Quantity": 2, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10459, "index_stringindexer": 41403.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73956.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 791.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 55.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 468.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 10952.0, "Incentive_stringindexer": 1072.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 395.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 96.0, "Reporting Period_stringindexer": 97.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 12.0, "Reporting Period_stringindexer": 13.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 37.0, "Reporting Period_stringindexer": 38.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 330.0, "Reporting Period_stringindexer": 335.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14105, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8804, "index_stringindexer": 21179.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64165.0, "City_stringindexer": 658.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 503.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 3882.0, "Incentive_stringindexer": 509.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 823.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10990, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4766, "index_stringindexer": 7388.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62379.0, "City_stringindexer": 41.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 231.0, "Incentive_stringindexer": 861.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 37.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 405.0, "Reporting Period_stringindexer": 409.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12534, "Total Inverter Quantity": 2, "Total PV Module Quantity": 37, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13030, "index_stringindexer": 51875.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62089.0, "City_stringindexer": 106.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 68.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 5295.0, "Incentive_stringindexer": 4827.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 112.0}, {"Zip Code": 10469, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 28975.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64945.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 4748.0, "Incentive_stringindexer": 260.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 178.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 289.0, "Reporting Period_stringindexer": 289.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10956, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6468, "index_stringindexer": 16849.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62154.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 778.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 294.0, "Incentive_stringindexer": 2492.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 10952, "Total Inverter Quantity": 2, "Total PV Module Quantity": 29, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9702, "index_stringindexer": 76253.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12256.0, "City_stringindexer": 221.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 31.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 32851.0, "Incentive_stringindexer": 3543.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 253.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 291.0, "Reporting Period_stringindexer": 293.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12205, "Total Inverter Quantity": 13, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4425, "index_stringindexer": 23185.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 54043.0, "City_stringindexer": 6.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 716.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1607.0, "Incentive_stringindexer": 1647.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 35.0}, {"Zip Code": 10314, "Total Inverter Quantity": 23, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9314, "index_stringindexer": 45126.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78965.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 671.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 13924.0, "Incentive_stringindexer": 598.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 12831, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 80699.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 49219.0, "City_stringindexer": 112.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 561.0, "Date Completed_stringindexer": 271.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 4622.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 117.0}, {"Zip Code": 14201, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5282, "index_stringindexer": 53044.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42133.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 1110.0, "Incentive_stringindexer": 277.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 525.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 46.0, "Reporting Period_stringindexer": 47.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10308, "Total Inverter Quantity": 23, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7560, "index_stringindexer": 40003.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39304.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 36005.0, "Incentive_stringindexer": 718.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 10464, "Total Inverter Quantity": 9, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3455, "index_stringindexer": 75864.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 7755.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 3707.0, "Incentive_stringindexer": 884.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 805.0}, {"Zip Code": 10472, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3287, "index_stringindexer": 42218.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 83008.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 574.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 199.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 69.0, "Project Cost_stringindexer": 33225.0, "Incentive_stringindexer": 2701.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 615.0}, {"Zip Code": 10956, "Total Inverter Quantity": 51, "Total PV Module Quantity": 51, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 20654, "index_stringindexer": 76631.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39180.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 24308.0, "Incentive_stringindexer": 15186.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 186.0, "Reporting Period_stringindexer": 186.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10142, "index_stringindexer": 74950.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82349.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 21.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 28035.0, "Incentive_stringindexer": 246.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5341, "index_stringindexer": 24085.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 83293.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 65.0, "PV Module Model Number_stringindexer": 465.0, "Project Cost_stringindexer": 32895.0, "Incentive_stringindexer": 1314.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 10940, "Total Inverter Quantity": 23, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13364, "index_stringindexer": 20587.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76713.0, "City_stringindexer": 9.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 461.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 18590.0, "Incentive_stringindexer": 3471.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 8.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 7.0, "Reporting Period_stringindexer": 8.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7489, "index_stringindexer": 56186.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11619.0, "City_stringindexer": 270.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 629.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 91.0, "Project Cost_stringindexer": 20902.0, "Incentive_stringindexer": 2535.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 304.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 44, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14720, "index_stringindexer": 19810.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67407.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1812.0, "Incentive_stringindexer": 6079.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 110.0, "Reporting Period_stringindexer": 111.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10992, "Total Inverter Quantity": 22, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8909, "index_stringindexer": 17972.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46795.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 811.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 4452.0, "Incentive_stringindexer": 4225.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 10312, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 70961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46586.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3419.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 14220, "Total Inverter Quantity": 5, "Total PV Module Quantity": 600, "Total Nameplate kW DC": 195.0, "Expected KWh Annual Production": 228899, "index_stringindexer": 1811.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 25126.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 15.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 292.0, "Primary PV Module Manufacturer_stringindexer": 3.0, "PV Module Model Number_stringindexer": 466.0, "Project Cost_stringindexer": 56.0, "Incentive_stringindexer": 1395.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 674.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 325.0, "Reporting Period_stringindexer": 323.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 168.0, "Reporting Period_stringindexer": 169.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1021.0, "Reporting Period_stringindexer": 1040.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 34346.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50122.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 693.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 4017.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14551, "Total Inverter Quantity": 6, "Total PV Module Quantity": 6, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 2303, "index_stringindexer": 31441.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17637.0, "City_stringindexer": 565.0, "County_stringindexer": 39.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 18.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 27210.0, "Incentive_stringindexer": 2835.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 699.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 645.0, "Reporting Period_stringindexer": 640.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 283.0, "Reporting Period_stringindexer": 285.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 332.0, "Reporting Period_stringindexer": 332.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1365.0, "Reporting Period_stringindexer": 1399.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 34822.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28077.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 833.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 36847.0, "Incentive_stringindexer": 1374.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0}, {"Zip Code": 11436, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7695, "index_stringindexer": 78971.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 64588.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 2455.0, "Incentive_stringindexer": 304.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 396.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 453.0, "Reporting Period_stringindexer": 454.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 39.0, "Reporting Period_stringindexer": 40.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 168.0, "Reporting Period_stringindexer": 169.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10566, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 71517.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 44731.0, "City_stringindexer": 97.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 403.0, "Date Completed_stringindexer": 799.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 348.0, "Incentive_stringindexer": 1992.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 102.0}, {"Zip Code": 13676, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 10.0, "Expected KWh Annual Production": 12490, "index_stringindexer": 76140.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16311.0, "City_stringindexer": 136.0, "County_stringindexer": 28.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 17.0, "Date Completed_stringindexer": 345.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 996.0, "Incentive_stringindexer": 3696.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 149.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 460.0, "Reporting Period_stringindexer": 464.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11210, "Total Inverter Quantity": 32, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12959, "index_stringindexer": 83272.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36114.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 20.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 29981.0, "Incentive_stringindexer": 1234.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 240.0}, {"Zip Code": 10919, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9532, "index_stringindexer": 63331.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 60021.0, "City_stringindexer": 645.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 1.0, "Primary Inverter Model Number_stringindexer": 180.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 700.0, "Incentive_stringindexer": 1011.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 813.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8393, "index_stringindexer": 70914.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12680.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 553.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 31859.0, "Incentive_stringindexer": 191.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 12075, "Total Inverter Quantity": 8, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3146, "index_stringindexer": 5651.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28421.0, "City_stringindexer": 266.0, "County_stringindexer": 20.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 13.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 829.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 973.0, "Project Cost_stringindexer": 4448.0, "Incentive_stringindexer": 2302.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 300.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 504.0, "Reporting Period_stringindexer": 504.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 757.0, "Reporting Period_stringindexer": 761.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10930, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6867, "index_stringindexer": 32913.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51872.0, "City_stringindexer": 1408.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 420.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 35.0, "PV Module Model Number_stringindexer": 52.0, "Project Cost_stringindexer": 37555.0, "Incentive_stringindexer": 2086.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1678.0}, {"Zip Code": 10306, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 26409.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 16672.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 544.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 20994.0, "Incentive_stringindexer": 1511.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 10977, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8510, "index_stringindexer": 54493.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28640.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 507.0, "Date Completed_stringindexer": 957.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 75.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 239.0, "Incentive_stringindexer": 130.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3874, "index_stringindexer": 8101.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 53691.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 639.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 8440.0, "Incentive_stringindexer": 179.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 90.0, "Reporting Period_stringindexer": 91.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11416, "Total Inverter Quantity": 22, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7489, "index_stringindexer": 30506.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62406.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 260.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 2.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 25666.0, "Incentive_stringindexer": 532.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1031.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9684, "index_stringindexer": 32316.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 58318.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 205.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 8940.0, "Incentive_stringindexer": 92.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12309, "Total Inverter Quantity": 34, "Total PV Module Quantity": 34, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11574, "index_stringindexer": 3052.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18117.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 185.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 486.0, "Incentive_stringindexer": 744.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 85.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 633.0, "Reporting Period_stringindexer": 631.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14228, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10036, "index_stringindexer": 27049.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37406.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 146.0, "Incentive_stringindexer": 2911.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 737.0}, {"Zip Code": 10312, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6075, "index_stringindexer": 40432.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10531.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 87.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 32002.0, "Incentive_stringindexer": 200.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 161.0, "Reporting Period_stringindexer": 162.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5634, "index_stringindexer": 74195.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 53995.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 452.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 2337.0, "Incentive_stringindexer": 64.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 504.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 430.0, "Reporting Period_stringindexer": 427.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 545.0, "Reporting Period_stringindexer": 547.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 790.0, "Reporting Period_stringindexer": 782.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9033, "index_stringindexer": 34293.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 19472.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 1018.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 208.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 1815.0, "Incentive_stringindexer": 735.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 10308, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8522, "index_stringindexer": 32793.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 84063.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 27126.0, "Incentive_stringindexer": 737.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 14.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14609, "Total Inverter Quantity": 2, "Total PV Module Quantity": 58, "Total Nameplate kW DC": 16.0, "Expected KWh Annual Production": 19063, "index_stringindexer": 11218.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76383.0, "City_stringindexer": 26.0, "County_stringindexer": 18.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2554.0, "Date Completed_stringindexer": 791.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 40.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 56.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 69.0, "Project Cost_stringindexer": 8451.0, "Incentive_stringindexer": 6240.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 553.0}, {"Zip Code": 12401, "Total Inverter Quantity": 1, "Total PV Module Quantity": 43, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14638, "index_stringindexer": 49142.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15226.0, "City_stringindexer": 34.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 9288.0, "Incentive_stringindexer": 13241.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 30.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 136.0, "Reporting Period_stringindexer": 137.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5423, "index_stringindexer": 38330.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21852.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 29550.0, "Incentive_stringindexer": 2153.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 705.0}, {"Zip Code": 14304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 27, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9033, "index_stringindexer": 22996.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81749.0, "City_stringindexer": 299.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 9086.0, "Incentive_stringindexer": 2092.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 512.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10994, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9212, "index_stringindexer": 27427.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59495.0, "City_stringindexer": 264.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 444.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 7415.0, "Incentive_stringindexer": 662.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 298.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 305.0, "Reporting Period_stringindexer": 306.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10520, "Total Inverter Quantity": 2, "Total PV Module Quantity": 70, "Total Nameplate kW DC": 23.0, "Expected KWh Annual Production": 27527, "index_stringindexer": 20440.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 35005.0, "City_stringindexer": 1303.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 9792.0, "Incentive_stringindexer": 3254.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1633.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 80.0, "Reporting Period_stringindexer": 81.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7248, "index_stringindexer": 39872.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 61119.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 297.0, "Project Cost_stringindexer": 21928.0, "Incentive_stringindexer": 6499.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 92.0, "Reporting Period_stringindexer": 93.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 13114, "Total Inverter Quantity": 2, "Total PV Module Quantity": 54, "Total Nameplate kW DC": 15.0, "Expected KWh Annual Production": 17748, "index_stringindexer": 52770.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73618.0, "City_stringindexer": 638.0, "County_stringindexer": 33.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 2778.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 9826.0, "Incentive_stringindexer": 3134.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 827.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 26.0, "Reporting Period_stringindexer": 27.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11366, "Total Inverter Quantity": 2, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9719, "index_stringindexer": 78366.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51159.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 604.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 101.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 29.0, "Project Cost_stringindexer": 568.0, "Incentive_stringindexer": 354.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 716.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 442.0, "Reporting Period_stringindexer": 444.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 238.0, "Reporting Period_stringindexer": 240.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 11.0, "Reporting Period_stringindexer": 12.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12182, "Total Inverter Quantity": 38, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12936, "index_stringindexer": 16629.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32628.0, "City_stringindexer": 17.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 695.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 509.0, "Incentive_stringindexer": 3056.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 231.0}, {"Zip Code": 12856, "Total Inverter Quantity": 1, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14790, "index_stringindexer": 75320.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59913.0, "City_stringindexer": 1671.0, "County_stringindexer": 25.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 539.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 86.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 23195.0, "Incentive_stringindexer": 134.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2014.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 216.0, "Reporting Period_stringindexer": 216.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11412, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 83992.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37505.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 10481.0, "Incentive_stringindexer": 2154.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 273.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 63.0, "Reporting Period_stringindexer": 64.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10567, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 67489.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 888.0, "City_stringindexer": 474.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 771.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 1446.0, "Incentive_stringindexer": 25.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 605.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 88.0, "Reporting Period_stringindexer": 89.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14516, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7160, "index_stringindexer": 62717.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27003.0, "City_stringindexer": 849.0, "County_stringindexer": 39.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 97.0, "Project Cost_stringindexer": 21941.0, "Incentive_stringindexer": 818.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1082.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6444, "index_stringindexer": 12330.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46014.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 169.0, "Project Cost_stringindexer": 29492.0, "Incentive_stringindexer": 2847.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 888.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 260.0, "Reporting Period_stringindexer": 260.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10466, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 50843.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42925.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 269.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 313.0, "Project Cost_stringindexer": 2418.0, "Incentive_stringindexer": 47.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 237.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11422, "Total Inverter Quantity": 28, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8546, "index_stringindexer": 15073.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8966.0, "City_stringindexer": 88.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 1018.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 47.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 63.0, "Primary PV Module Manufacturer_stringindexer": 37.0, "PV Module Model Number_stringindexer": 134.0, "Project Cost_stringindexer": 25862.0, "Incentive_stringindexer": 2680.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 91.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 602.0, "Reporting Period_stringindexer": 598.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11236, "Total Inverter Quantity": 1, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3169, "index_stringindexer": 33136.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38454.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 29470.0, "Incentive_stringindexer": 117.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 84.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7888, "index_stringindexer": 66713.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 45431.0, "City_stringindexer": 394.0, "County_stringindexer": 42.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 478.0, "Incentive_stringindexer": 227.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 469.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11214, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 4860, "index_stringindexer": 32144.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77196.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 31960.0, "Incentive_stringindexer": 165.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 552.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 126.0, "Reporting Period_stringindexer": 126.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10846, "index_stringindexer": 84968.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81525.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 5921.0, "Incentive_stringindexer": 4814.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 39.0, "Reporting Period_stringindexer": 40.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11377, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7078, "index_stringindexer": 12982.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52263.0, "City_stringindexer": 471.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 179.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 331.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 279.0, "Incentive_stringindexer": 459.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 575.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 449.0, "Reporting Period_stringindexer": 446.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 419.0, "Reporting Period_stringindexer": 414.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14218, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 35887.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51993.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1054.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1023.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 514.0, "Reporting Period_stringindexer": 522.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1436.0, "Reporting Period_stringindexer": 1510.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 279.0, "Reporting Period_stringindexer": 280.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11413, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 82032.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3853.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 1867.0, "Incentive_stringindexer": 142.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 161.0}, {"Zip Code": 11411, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5071, "index_stringindexer": 47569.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 35702.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 31419.0, "Incentive_stringindexer": 225.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 607.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 407.0, "Reporting Period_stringindexer": 408.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11214, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 3104.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 65202.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 529.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 545.0, "Project Cost_stringindexer": 23971.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 552.0}, {"Zip Code": 12508, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8452, "index_stringindexer": 8851.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 19496.0, "City_stringindexer": 82.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 725.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 19.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 2863.0, "Incentive_stringindexer": 25.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 83.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 184.0, "Reporting Period_stringindexer": 187.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12430, "Total Inverter Quantity": 30, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11515, "index_stringindexer": 42750.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 55387.0, "City_stringindexer": 1008.0, "County_stringindexer": 50.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 381.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 272.0, "Project Cost_stringindexer": 43.0, "Incentive_stringindexer": 272.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1290.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1032.0, "Reporting Period_stringindexer": 1038.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12305, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 6194.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22722.0, "City_stringindexer": 4.0, "County_stringindexer": 15.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 384.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 12.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 11472.0, "Incentive_stringindexer": 663.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1208.0}, {"Zip Code": 14150, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6339, "index_stringindexer": 11477.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17296.0, "City_stringindexer": 160.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 603.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 33.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 18.0, "PV Module Model Number_stringindexer": 60.0, "Project Cost_stringindexer": 116.0, "Incentive_stringindexer": 50.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 202.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 12.0, "Reporting Period_stringindexer": 13.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 327.0, "Reporting Period_stringindexer": 327.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 339.0, "Reporting Period_stringindexer": 340.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10461, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9391, "index_stringindexer": 52209.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6275.0, "City_stringindexer": 5.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 27.0, "Project Cost_stringindexer": 38640.0, "Incentive_stringindexer": 319.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 291.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12543, "Total Inverter Quantity": 1, "Total PV Module Quantity": 28, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9860, "index_stringindexer": 54067.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 1016.0, "City_stringindexer": 393.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 679.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 1.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 303.0, "Incentive_stringindexer": 457.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 461.0}, {"Zip Code": 12023, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11410, "index_stringindexer": 81620.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59803.0, "City_stringindexer": 409.0, "County_stringindexer": 10.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 796.0, "Project Cost_stringindexer": 17278.0, "Incentive_stringindexer": 6648.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 481.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 331.0, "Reporting Period_stringindexer": 329.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12569, "Total Inverter Quantity": 2, "Total PV Module Quantity": 62, "Total Nameplate kW DC": 19.0, "Expected KWh Annual Production": 23289, "index_stringindexer": 83554.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59149.0, "City_stringindexer": 177.0, "County_stringindexer": 7.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 701.0, "Date Completed_stringindexer": 768.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 103.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 262.0, "Project Cost_stringindexer": 118.0, "Incentive_stringindexer": 7600.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 200.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 178.0, "Reporting Period_stringindexer": 179.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10307, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10212, "index_stringindexer": 43421.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 68475.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 17005.0, "Incentive_stringindexer": 515.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 25.0}, {"Zip Code": 10707, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8029, "index_stringindexer": 18229.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36888.0, "City_stringindexer": 500.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 4760.0, "Incentive_stringindexer": 47.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 593.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 499.0, "Reporting Period_stringindexer": 494.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 738.0, "Reporting Period_stringindexer": 736.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11432, "Total Inverter Quantity": 1, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5447, "index_stringindexer": 36150.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8550.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 67.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 11293.0, "Incentive_stringindexer": 155.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 301.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 15.0, "Reporting Period_stringindexer": 16.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10567, "Total Inverter Quantity": 9, "Total PV Module Quantity": 9, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3803, "index_stringindexer": 39333.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33353.0, "City_stringindexer": 91.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 424.0, "Date Completed_stringindexer": 1109.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 7567.0, "Incentive_stringindexer": 504.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 95.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 245.0, "Reporting Period_stringindexer": 246.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10604, "Total Inverter Quantity": 1, "Total PV Module Quantity": 26, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8698, "index_stringindexer": 71670.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78381.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 12632.0, "Incentive_stringindexer": 733.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1049.0}, {"Zip Code": 10977, "Total Inverter Quantity": 18, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6127, "index_stringindexer": 17599.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62758.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 188.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 286.0, "Incentive_stringindexer": 3126.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 104.0, "Reporting Period_stringindexer": 105.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 92.0, "Reporting Period_stringindexer": 93.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11436, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4050, "index_stringindexer": 68783.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38848.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 708.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 383.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 545.0, "Project Cost_stringindexer": 21101.0, "Incentive_stringindexer": 929.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 396.0}, {"Zip Code": 13035, "Total Inverter Quantity": 2, "Total PV Module Quantity": 45, "Total Nameplate kW DC": 15.0, "Expected KWh Annual Production": 18488, "index_stringindexer": 15271.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67083.0, "City_stringindexer": 292.0, "County_stringindexer": 38.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 668.0, "Date Completed_stringindexer": 487.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 317.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 411.0, "Project Cost_stringindexer": 35990.0, "Incentive_stringindexer": 2939.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 331.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 339.0, "Reporting Period_stringindexer": 340.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11435, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6075, "index_stringindexer": 54824.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42249.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 861.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 1469.0, "Incentive_stringindexer": 680.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 645.0}, {"Zip Code": 11355, "Total Inverter Quantity": 13, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5112, "index_stringindexer": 70074.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78480.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 533.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 9746.0, "Incentive_stringindexer": 561.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 574.0}, {"Zip Code": 10977, "Total Inverter Quantity": 42, "Total PV Module Quantity": 42, "Total Nameplate kW DC": 12.0, "Expected KWh Annual Production": 14297, "index_stringindexer": 3326.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36570.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 1105.0, "Incentive_stringindexer": 1201.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 270.0, "Reporting Period_stringindexer": 272.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12033, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5787, "index_stringindexer": 28131.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 24471.0, "City_stringindexer": 301.0, "County_stringindexer": 14.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 215.0, "Incentive_stringindexer": 1279.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 338.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 605.0, "Reporting Period_stringindexer": 599.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10956, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7395, "index_stringindexer": 29389.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 62641.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 384.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 44.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 380.0, "Incentive_stringindexer": 2254.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 13054, "Total Inverter Quantity": 35, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13558, "index_stringindexer": 80758.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81168.0, "City_stringindexer": 834.0, "County_stringindexer": 22.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 245.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 178.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 294.0, "Primary PV Module Manufacturer_stringindexer": 90.0, "PV Module Model Number_stringindexer": 598.0, "Project Cost_stringindexer": 78.0, "Incentive_stringindexer": 1366.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1039.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 91.0, "Reporting Period_stringindexer": 92.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11379, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4519, "index_stringindexer": 29815.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 28418.0, "City_stringindexer": 688.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 373.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 87.0, "Project Cost_stringindexer": 24629.0, "Incentive_stringindexer": 397.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 881.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 35.0, "Reporting Period_stringindexer": 35.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 227.0, "Reporting Period_stringindexer": 228.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11433, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4226, "index_stringindexer": 66883.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 63042.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 38293.0, "Incentive_stringindexer": 34.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 370.0}, {"Zip Code": 10306, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 3932, "index_stringindexer": 81333.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22081.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 15113.0, "Incentive_stringindexer": 480.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 90.0, "Reporting Period_stringindexer": 91.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 131.0, "Reporting Period_stringindexer": 132.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11355, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 70758.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59873.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 585.0, "Date Completed_stringindexer": 242.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 36603.0, "Incentive_stringindexer": 260.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 372.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 377.0, "Reporting Period_stringindexer": 380.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 124.0, "Reporting Period_stringindexer": 125.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10306, "Total Inverter Quantity": 40, "Total PV Module Quantity": 40, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15729, "index_stringindexer": 64714.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17602.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 907.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 19757.0, "Incentive_stringindexer": 1335.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 4.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 207.0, "Reporting Period_stringindexer": 211.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 135.0, "Reporting Period_stringindexer": 134.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10703, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 50030.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 14349.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 241.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 42.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 600.0, "Incentive_stringindexer": 1704.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 229.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 208.0, "Reporting Period_stringindexer": 210.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 45.0, "Reporting Period_stringindexer": 46.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11211, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5587, "index_stringindexer": 3117.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 3865.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 646.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 3398.0, "Incentive_stringindexer": 303.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 667.0}, {"Zip Code": 10992, "Total Inverter Quantity": 64, "Total PV Module Quantity": 64, "Total Nameplate kW DC": 23.0, "Expected KWh Annual Production": 27045, "index_stringindexer": 62832.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 18447.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 530.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 336.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 27094.0, "Incentive_stringindexer": 15417.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 10992, "Total Inverter Quantity": 2, "Total PV Module Quantity": 62, "Total Nameplate kW DC": 17.0, "Expected KWh Annual Production": 21106, "index_stringindexer": 67535.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 1947.0, "City_stringindexer": 89.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 19783.0, "Incentive_stringindexer": 11833.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 92.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 378.0, "Reporting Period_stringindexer": 379.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10303, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 60317.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 21497.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 9114.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 100.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 164.0, "Reporting Period_stringindexer": 165.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4261, "index_stringindexer": 69359.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6651.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3020.0, "Incentive_stringindexer": 276.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 80.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 545.0, "Reporting Period_stringindexer": 547.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10456, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 51410.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 82251.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 597.0, "Date Completed_stringindexer": 487.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 20796.0, "Incentive_stringindexer": 852.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 452.0}, {"Zip Code": 10312, "Total Inverter Quantity": 17, "Total PV Module Quantity": 17, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7184, "index_stringindexer": 44462.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50197.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 268.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 3194.0, "Incentive_stringindexer": 121.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 12401, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8510, "index_stringindexer": 59961.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51542.0, "City_stringindexer": 34.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 13529.0, "Incentive_stringindexer": 2175.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 30.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 272.0, "Reporting Period_stringindexer": 273.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 322.0, "Reporting Period_stringindexer": 322.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 73.0, "Reporting Period_stringindexer": 74.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 113.0, "Reporting Period_stringindexer": 114.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 280.0, "Reporting Period_stringindexer": 281.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 9.0, "Reporting Period_stringindexer": 10.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 196.0, "Reporting Period_stringindexer": 197.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 224.0, "Reporting Period_stringindexer": 224.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 220.0, "Reporting Period_stringindexer": 221.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11357, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8364, "index_stringindexer": 2616.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 80092.0, "City_stringindexer": 181.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 542.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 205.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 39436.0, "Incentive_stringindexer": 321.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 207.0}, {"Zip Code": 13053, "Total Inverter Quantity": 2, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 29099, "index_stringindexer": 34952.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 2446.0, "City_stringindexer": 291.0, "County_stringindexer": 44.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 771.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 18.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 108.0, "PV Module Model Number_stringindexer": 492.0, "Project Cost_stringindexer": 18055.0, "Incentive_stringindexer": 5243.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 426.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5370, "index_stringindexer": 22251.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 43759.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 169.0, "Project Cost_stringindexer": 6687.0, "Incentive_stringindexer": 1712.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11434, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3345, "index_stringindexer": 17018.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37355.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 762.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 19595.0, "Incentive_stringindexer": 1566.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 180.0}, {"Zip Code": 10977, "Total Inverter Quantity": 46, "Total PV Module Quantity": 46, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15659, "index_stringindexer": 72326.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 77862.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 14.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 973.0, "Incentive_stringindexer": 8638.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 6.0, "Reporting Period_stringindexer": 7.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11223, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6480, "index_stringindexer": 41948.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33697.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 376.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 8830.0, "Incentive_stringindexer": 232.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 413.0}, {"Zip Code": 11413, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 83895.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 26331.0, "City_stringindexer": 107.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 386.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 40.0, "Project Cost_stringindexer": 10090.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 114.0}, {"Zip Code": 14217, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8061, "index_stringindexer": 19904.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17998.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 1733.0, "Incentive_stringindexer": 1665.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 787.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 243.0, "Reporting Period_stringindexer": 243.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10605, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7360, "index_stringindexer": 78872.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 5373.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 617.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 26.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 37538.0, "Incentive_stringindexer": 1574.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 186.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 842.0, "Reporting Period_stringindexer": 841.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10990, "Total Inverter Quantity": 35, "Total PV Module Quantity": 35, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13435, "index_stringindexer": 18525.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15740.0, "City_stringindexer": 41.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 444.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 30240.0, "Incentive_stringindexer": 7756.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 37.0}, {"Zip Code": 10801, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8217, "index_stringindexer": 12773.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 51924.0, "City_stringindexer": 99.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 482.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 26493.0, "Incentive_stringindexer": 96.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 206.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 311.0, "Reporting Period_stringindexer": 317.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 292.0, "Reporting Period_stringindexer": 292.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14223, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7677, "index_stringindexer": 49558.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 27711.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 597.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 148.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 11.0, "Project Cost_stringindexer": 4605.0, "Incentive_stringindexer": 150.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 620.0}, {"Zip Code": 11361, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 12890.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6416.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 19223.0, "Incentive_stringindexer": 1672.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 714.0}, {"Zip Code": 11208, "Total Inverter Quantity": 19, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7695, "index_stringindexer": 44767.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22680.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 302.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 5230.0, "Incentive_stringindexer": 304.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 187.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 243.0, "Reporting Period_stringindexer": 243.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 387.0, "Reporting Period_stringindexer": 391.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 136.0, "Reporting Period_stringindexer": 137.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10983, "Total Inverter Quantity": 1, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9244, "index_stringindexer": 80227.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 4838.0, "City_stringindexer": 270.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 664.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 7.0, "Project Cost_stringindexer": 8495.0, "Incentive_stringindexer": 997.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 304.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 259.0, "Reporting Period_stringindexer": 261.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 73.0, "Reporting Period_stringindexer": 74.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11420, "Total Inverter Quantity": 4, "Total PV Module Quantity": 4, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 1620, "index_stringindexer": 83724.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76767.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 640.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 11363.0, "Incentive_stringindexer": 3452.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 179.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1465.0, "Reporting Period_stringindexer": 1458.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11373, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 10688.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 38227.0, "City_stringindexer": 579.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 371.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 9368.0, "Incentive_stringindexer": 1736.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 720.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 151.0, "Reporting Period_stringindexer": 153.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10704, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5505, "index_stringindexer": 42191.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 6207.0, "City_stringindexer": 7.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 3077.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 121.0}, {"Zip Code": 10956, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 10518, "index_stringindexer": 19628.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17261.0, "City_stringindexer": 35.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 595.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 12.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 41.0, "Project Cost_stringindexer": 681.0, "Incentive_stringindexer": 236.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 28.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 36.0, "Reporting Period_stringindexer": 37.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12428, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10917, "index_stringindexer": 18826.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31583.0, "City_stringindexer": 481.0, "County_stringindexer": 8.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 643.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 281.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 266.0, "Project Cost_stringindexer": 9302.0, "Incentive_stringindexer": 747.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2175.0}, {"Zip Code": 10304, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6973, "index_stringindexer": 68238.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 10301.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 35.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 9825.0, "Incentive_stringindexer": 1927.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 88.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10977, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4425, "index_stringindexer": 63133.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 72001.0, "City_stringindexer": 67.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 500.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 34038.0, "Incentive_stringindexer": 1637.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 63.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 95.0, "Reporting Period_stringindexer": 95.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14120, "Total Inverter Quantity": 1, "Total PV Module Quantity": 19, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6356, "index_stringindexer": 21558.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 37101.0, "City_stringindexer": 242.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 418.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 9618.0, "Incentive_stringindexer": 2010.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 278.0}, {"Zip Code": 14715, "Total Inverter Quantity": 1, "Total PV Module Quantity": 22, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7747, "index_stringindexer": 48617.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13705.0, "City_stringindexer": 1118.0, "County_stringindexer": 59.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 899.0, "Date Completed_stringindexer": 902.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 96.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 241.0, "Project Cost_stringindexer": 9558.0, "Incentive_stringindexer": 179.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1423.0}, {"Zip Code": 11418, "Total Inverter Quantity": 1, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7043, "index_stringindexer": 18578.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11725.0, "City_stringindexer": 382.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 339.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 116.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 241.0, "Project Cost_stringindexer": 21372.0, "Incentive_stringindexer": 21.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 504.0}, {"Zip Code": 14221, "Total Inverter Quantity": 1, "Total PV Module Quantity": 32, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10705, "index_stringindexer": 38498.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52253.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 198.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 4279.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 336.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10548, "Total Inverter Quantity": 21, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7272, "index_stringindexer": 82902.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 31978.0, "City_stringindexer": 346.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 434.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 304.0, "Project Cost_stringindexer": 39756.0, "Incentive_stringindexer": 1578.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 389.0}, {"Zip Code": 14224, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5018, "index_stringindexer": 66962.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 969.0, "City_stringindexer": 14.0, "County_stringindexer": 12.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 483.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 58.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 44.0, "Project Cost_stringindexer": 1355.0, "Incentive_stringindexer": 1902.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 438.0}, {"Zip Code": 11414, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9156, "index_stringindexer": 13844.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 67925.0, "City_stringindexer": 3.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 154.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 106.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 297.0, "Project Cost_stringindexer": 35904.0, "Incentive_stringindexer": 7.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 218.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 234.0, "Reporting Period_stringindexer": 234.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11429, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 40011.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 25770.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 325.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 24170.0, "Incentive_stringindexer": 1388.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1094.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 126.0, "Reporting Period_stringindexer": 126.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 27.0, "Reporting Period_stringindexer": 28.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 114.0, "Reporting Period_stringindexer": 113.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 810.0, "Reporting Period_stringindexer": 817.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10466, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6574, "index_stringindexer": 25120.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47103.0, "City_stringindexer": 1268.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 154.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 40.0, "PV Module Model Number_stringindexer": 86.0, "Project Cost_stringindexer": 32007.0, "Incentive_stringindexer": 145.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2193.0}, {"Zip Code": 11207, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 63749.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52136.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 295.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 9578.0, "Incentive_stringindexer": 464.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 147.0}, {"Zip Code": 12850, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7078, "index_stringindexer": 4640.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13152.0, "City_stringindexer": 421.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 434.0, "Date Completed_stringindexer": 805.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 13.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 67.0, "Project Cost_stringindexer": 33518.0, "Incentive_stringindexer": 3678.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 505.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 10.0, "Reporting Period_stringindexer": 11.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 466.0, "Reporting Period_stringindexer": 467.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 59.0, "Reporting Period_stringindexer": 61.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10591, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4226, "index_stringindexer": 12133.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32129.0, "City_stringindexer": 1659.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 605.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 123.0, "Incentive_stringindexer": 34.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2078.0}, {"Zip Code": 12550, "Total Inverter Quantity": 1, "Total PV Module Quantity": 23, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 8099, "index_stringindexer": 76334.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 12748.0, "City_stringindexer": 19.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 4.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 12.0, "Primary Inverter Model Number_stringindexer": 68.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 31.0, "Project Cost_stringindexer": 9515.0, "Incentive_stringindexer": 1233.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 11.0}, {"Zip Code": 14841, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6292, "index_stringindexer": 50746.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42029.0, "City_stringindexer": 649.0, "County_stringindexer": 55.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 5.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 1695.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 32.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 31461.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 801.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 160.0, "Reporting Period_stringindexer": 161.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 128.0, "Reporting Period_stringindexer": 129.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12809, "Total Inverter Quantity": 24, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8311, "index_stringindexer": 75582.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 8918.0, "City_stringindexer": 317.0, "County_stringindexer": 23.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 2.0, "PV Module Model Number_stringindexer": 88.0, "Project Cost_stringindexer": 2.0, "Incentive_stringindexer": 1578.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 361.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 250.0, "Reporting Period_stringindexer": 251.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 14067, "Total Inverter Quantity": 1, "Total PV Module Quantity": 36, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 13311, "index_stringindexer": 11157.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46529.0, "City_stringindexer": 611.0, "County_stringindexer": 48.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 901.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 227.0, "Project Cost_stringindexer": 36191.0, "Incentive_stringindexer": 1468.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 760.0}, {"Zip Code": 11357, "Total Inverter Quantity": 1, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3345, "index_stringindexer": 45892.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 17021.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 69.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 10812.0, "Incentive_stringindexer": 136.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 393.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 603.0, "Reporting Period_stringindexer": 606.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 193.0, "Reporting Period_stringindexer": 191.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 59.0, "Reporting Period_stringindexer": 61.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 34.0, "Reporting Period_stringindexer": 36.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11417, "Total Inverter Quantity": 15, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 6339, "index_stringindexer": 60663.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 79350.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 907.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 546.0, "Incentive_stringindexer": 13.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 646.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 134.0, "Reporting Period_stringindexer": 135.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10305, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5353, "index_stringindexer": 12849.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 22759.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 591.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 6147.0, "Incentive_stringindexer": 265.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 27.0}, {"Zip Code": 10993, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10565, "index_stringindexer": 68797.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 39483.0, "City_stringindexer": 429.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 28.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 743.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 262.0, "Incentive_stringindexer": 1715.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 564.0}, {"Zip Code": 11421, "Total Inverter Quantity": 20, "Total PV Module Quantity": 20, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 8452, "index_stringindexer": 13885.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73574.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 750.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 66.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 1250.0, "Incentive_stringindexer": 2251.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 865.0}, {"Zip Code": 10950, "Total Inverter Quantity": 16, "Total PV Module Quantity": 16, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5541, "index_stringindexer": 16325.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 36568.0, "City_stringindexer": 18.0, "County_stringindexer": 5.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 791.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 304.0, "Project Cost_stringindexer": 21840.0, "Incentive_stringindexer": 1997.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 13.0}, {"Zip Code": 11375, "Total Inverter Quantity": 8, "Total PV Module Quantity": 8, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3240, "index_stringindexer": 75925.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 20653.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 542.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 80.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 529.0, "Incentive_stringindexer": 687.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1072.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 55.0, "Reporting Period_stringindexer": 55.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 1.0, "Reporting Period_stringindexer": 2.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 145.0, "Reporting Period_stringindexer": 146.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10607, "Total Inverter Quantity": 1, "Total PV Module Quantity": 13, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4349, "index_stringindexer": 73291.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 11023.0, "City_stringindexer": 21.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 35742.0, "Incentive_stringindexer": 649.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 248.0}, {"Zip Code": 11216, "Total Inverter Quantity": 1, "Total PV Module Quantity": 18, "Total Nameplate kW DC": 6.0, "Expected KWh Annual Production": 7606, "index_stringindexer": 6502.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 73163.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 564.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 3.0, "Primary Inverter Model Number_stringindexer": 385.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 157.0, "Project Cost_stringindexer": 20531.0, "Incentive_stringindexer": 180.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 436.0}, {"Zip Code": 10472, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5670, "index_stringindexer": 74251.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 61140.0, "City_stringindexer": 5.0, "County_stringindexer": 17.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 1153.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 133.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 10.0, "Project Cost_stringindexer": 27478.0, "Incentive_stringindexer": 231.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 615.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 566.0, "Reporting Period_stringindexer": 567.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11426, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 7025, "index_stringindexer": 54341.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 76312.0, "City_stringindexer": 8.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 39.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 27032.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1110.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 56.0, "Reporting Period_stringindexer": 57.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10312, "Total Inverter Quantity": 14, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5505, "index_stringindexer": 85455.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 34476.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 534.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 59.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 190.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 3365.0, "Incentive_stringindexer": 431.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 15, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5811, "index_stringindexer": 5041.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 78185.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 627.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 27.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 7347.0, "Incentive_stringindexer": 46.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 32.0, "Reporting Period_stringindexer": 33.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10562, "Total Inverter Quantity": 1, "Total PV Module Quantity": 33, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 11040, "index_stringindexer": 18947.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 47294.0, "City_stringindexer": 58.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 705.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 395.0, "Primary PV Module Manufacturer_stringindexer": 7.0, "PV Module Model Number_stringindexer": 65.0, "Project Cost_stringindexer": 39121.0, "Incentive_stringindexer": 266.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 53.0}, {"Zip Code": 11234, "Total Inverter Quantity": 1, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 77100.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 68740.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 712.0, "Date Completed_stringindexer": 36.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 4.0, "Primary Inverter Model Number_stringindexer": 14.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 3573.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 60.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 285.0, "Reporting Period_stringindexer": 288.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11218, "Total Inverter Quantity": 4, "Total PV Module Quantity": 4, "Total Nameplate kW DC": 1.0, "Expected KWh Annual Production": 1573, "index_stringindexer": 58884.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59843.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 477.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 344.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 68.0, "Project Cost_stringindexer": 7006.0, "Incentive_stringindexer": 2573.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 277.0}, {"Zip Code": 11417, "Total Inverter Quantity": 1, "Total PV Module Quantity": 24, "Total Nameplate kW DC": 7.0, "Expected KWh Annual Production": 9297, "index_stringindexer": 83303.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 81259.0, "City_stringindexer": 230.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 796.0, "Date Completed_stringindexer": 333.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 2.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 19.0, "Project Cost_stringindexer": 19493.0, "Incentive_stringindexer": 505.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 320.0}, {"Zip Code": 14094, "Total Inverter Quantity": 2, "Total PV Module Quantity": 47, "Total Nameplate kW DC": 13.0, "Expected KWh Annual Production": 15999, "index_stringindexer": 67920.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 42578.0, "City_stringindexer": 220.0, "County_stringindexer": 29.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 483.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 89.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 92.0, "Project Cost_stringindexer": 128.0, "Incentive_stringindexer": 4562.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 252.0}, {"Zip Code": 10312, "Total Inverter Quantity": 25, "Total PV Module Quantity": 25, "Total Nameplate kW DC": 8.0, "Expected KWh Annual Production": 9831, "index_stringindexer": 59131.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 14306.0, "City_stringindexer": 1.0, "County_stringindexer": 3.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 627.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 3.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 479.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 42.0, "Project Cost_stringindexer": 31056.0, "Incentive_stringindexer": 816.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 1.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 608.0, "Reporting Period_stringindexer": 615.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 152.0, "Reporting Period_stringindexer": 154.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10314, "Total Inverter Quantity": 1, "Total PV Module Quantity": 21, "Total Nameplate kW DC": 5.0, "Expected KWh Annual Production": 7025, "index_stringindexer": 51318.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 33364.0, "City_stringindexer": 1.0, "County_stringindexer": 26.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 381.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 212.0, "Project Cost_stringindexer": 21395.0, "Incentive_stringindexer": 160.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 2.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 70.0, "Reporting Period_stringindexer": 73.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 296.0, "Reporting Period_stringindexer": 296.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 12065, "Total Inverter Quantity": 1, "Total PV Module Quantity": 38, "Total Nameplate kW DC": 11.0, "Expected KWh Annual Production": 12936, "index_stringindexer": 66724.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 13593.0, "City_stringindexer": 76.0, "County_stringindexer": 13.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 3.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1100.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 34.0, "Primary PV Module Manufacturer_stringindexer": 9.0, "PV Module Model Number_stringindexer": 18.0, "Project Cost_stringindexer": 22650.0, "Incentive_stringindexer": 3056.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 76.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 0.0, "Reporting Period_stringindexer": 1.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11420, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4684, "index_stringindexer": 27087.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 50454.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 1025.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 64.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 14239.0, "Incentive_stringindexer": 289.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 179.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 543.0, "Reporting Period_stringindexer": 542.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 10550, "Total Inverter Quantity": 12, "Total PV Module Quantity": 12, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4015, "index_stringindexer": 27903.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 59228.0, "City_stringindexer": 144.0, "County_stringindexer": 6.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 937.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 29.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 293.0, "Project Cost_stringindexer": 8271.0, "Incentive_stringindexer": 244.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 312.0}, {"Zip Code": 11790, "Total Inverter Quantity": 4, "Total PV Module Quantity": 880, "Total Nameplate kW DC": 264.0, "Expected KWh Annual Production": 309894, "index_stringindexer": 46934.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 52000.0, "City_stringindexer": 178.0, "County_stringindexer": 1.0, "State_stringindexer": 0, "Sector_stringindexer": 1, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 2.0, "Electric Utility_stringindexer": 1.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 552.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 39.0, "Primary Inverter Model Number_stringindexer": 334.0, "Primary PV Module Manufacturer_stringindexer": 5.0, "PV Module Model Number_stringindexer": 55.0, "Project Cost_stringindexer": 40530.0, "Incentive_stringindexer": 16153.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 201.0}, {"Zip Code": 10994, "Total Inverter Quantity": 1, "Total PV Module Quantity": 30, "Total Nameplate kW DC": 9.0, "Expected KWh Annual Production": 10565, "index_stringindexer": 77965.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 15547.0, "City_stringindexer": 264.0, "County_stringindexer": 9.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 6.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 701.0, "Date Completed_stringindexer": 372.0, "Project Status_stringindexer": 1, "Contractor_stringindexer": 61.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 43.0, "Primary PV Module Manufacturer_stringindexer": 6.0, "PV Module Model Number_stringindexer": 138.0, "Project Cost_stringindexer": 396.0, "Incentive_stringindexer": 82.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 298.0}, {"Zip Code": 11367, "Total Inverter Quantity": 1, "Total PV Module Quantity": 14, "Total Nameplate kW DC": 4.0, "Expected KWh Annual Production": 5341, "index_stringindexer": 31623.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 32182.0, "City_stringindexer": 50.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 837.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 9.0, "Primary Inverter Model Number_stringindexer": 325.0, "Primary PV Module Manufacturer_stringindexer": 29.0, "PV Module Model Number_stringindexer": 148.0, "Project Cost_stringindexer": 4430.0, "Incentive_stringindexer": 53.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 427.0}, {"Zip Code": 11428, "Total Inverter Quantity": 11, "Total PV Module Quantity": 11, "Total Nameplate kW DC": 3.0, "Expected KWh Annual Production": 4648, "index_stringindexer": 2296.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 4137.0, "City_stringindexer": 3.0, "County_stringindexer": 4.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 1, "Date Application Received_stringindexer": 796.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 5.0, "Primary Inverter Model Number_stringindexer": 99.0, "Primary PV Module Manufacturer_stringindexer": 1.0, "PV Module Model Number_stringindexer": 23.0, "Project Cost_stringindexer": 38606.0, "Incentive_stringindexer": 207.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 597.0}, {"Zip Code": 11207, "Total Inverter Quantity": 10, "Total PV Module Quantity": 10, "Total Nameplate kW DC": 2.0, "Expected KWh Annual Production": 3404, "index_stringindexer": 6639.0, "Reporting Period_stringindexer": 0.0, "Project Number_stringindexer": 46236.0, "City_stringindexer": 2.0, "County_stringindexer": 11.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 1.0, "Electric Utility_stringindexer": 2.0, "Purchase Type_stringindexer": 2, "Date Application Received_stringindexer": 715.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 11.0, "Primary Inverter Model Number_stringindexer": 49.0, "Primary PV Module Manufacturer_stringindexer": 47.0, "PV Module Model Number_stringindexer": 764.0, "Project Cost_stringindexer": 31474.0, "Incentive_stringindexer": 229.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 1, "Community Distributed Generation_stringindexer": 1, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 147.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 106.0, "Reporting Period_stringindexer": 106.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 83.0, "Reporting Period_stringindexer": 84.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 3.0, "Reporting Period_stringindexer": 4.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}, {"Zip Code": 11928, "Total Inverter Quantity": 8, "Total PV Module Quantity": 74, "Total Nameplate kW DC": 24.0, "Expected KWh Annual Production": 28742, "index_stringindexer": 116.0, "Reporting Period_stringindexer": 118.0, "Project Number_stringindexer": 0.0, "City_stringindexer": 0.0, "County_stringindexer": 0.0, "State_stringindexer": 0, "Sector_stringindexer": 0, "Program Type_stringindexer": 0, "Solicitation_stringindexer": 0.0, "Electric Utility_stringindexer": 0.0, "Purchase Type_stringindexer": 0, "Date Application Received_stringindexer": 0.0, "Date Completed_stringindexer": 0.0, "Project Status_stringindexer": 0, "Contractor_stringindexer": 0.0, "Primary Inverter Manufacturer_stringindexer": 0.0, "Primary Inverter Model Number_stringindexer": 0.0, "Primary PV Module Manufacturer_stringindexer": 0.0, "PV Module Model Number_stringindexer": 0.0, "Project Cost_stringindexer": 0.0, "Incentive_stringindexer": 0.0, "Remote Net Metering_stringindexer": 0, "Affordable Solar_stringindexer": 0, "Community Distributed Generation_stringindexer": 0, "Green Jobs Green New York Participant_stringindexer": 0, "Location 1_stringindexer": 0.0}], "stage_runningstate": "executed", "datacache": 0, "originalcount": 169442, "samplecount": 5000, "samplefile": "/FileStore/platform/sampleData/65d2d858b0c78b45eb628da9/part-00000-7c7cc3e0-6138-4d0c-b7ba-db55a8791faa-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}]